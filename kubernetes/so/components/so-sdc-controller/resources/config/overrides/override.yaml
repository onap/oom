{{/*
# Copyright Â© 2018 AT&T USA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}
aai:
  auth: {{.Values.aai.auth}}
server:
  {{- if include "common.onServiceMesh" . }}
  forward-headers-strategy: none
  {{- end }}
  port: {{ index .Values.containerPort }}
spring:
  datasource:
    hikari:
      jdbcUrl: jdbc:mariadb://${DB_HOST}:${DB_PORT}/catalogdb
      username: ${DB_USERNAME}
      password: ${DB_PASSWORD}
      driver-class-name: org.mariadb.jdbc.Driver
      pool-name: catdb-pool
      registerMbeans: false
  security:
    usercredentials:
    -
      username: asdc
      password: '$2a$10$Fh9ffgPw2vnmsghsRD3ZauBL1aKXebigbq3BB1RPWtE62UDILsjke'
      role: Asdc-Client
    -
      username: mso_admin
      password: '$2a$10$Fh9ffgPw2vnmsghsRD3ZauBL1aKXebigbq3BB1RPWtE62UDILsjke'
      role: ACTUATOR
request:
  datasource:
    hikari:
      jdbcUrl: jdbc:mariadb://${DB_HOST}:${DB_PORT}/requestdb
      username: ${DB_USERNAME}
      password: ${DB_PASSWORD}
      driver-class-name: org.mariadb.jdbc.Driver
      pool-name: reqdb-pool
      registerMbeans: false
mso:
  msoKey: {{ index .Values.mso.msoKey }}
  logPath: ./logs/sdc
  config:
     cadi: {{ include "so.cadi.keys" . | nindent 8}}
  catalog:
    db:
      spring:
        endpoint: http://so-catalog-db-adapter.{{ include "common.namespace" . }}:8082
  db:
    auth: {{ include "so.helpers.profileProperty" (dict "condition" .Values.global.security.aaf.enabled "value1" .Values.global.aaf.auth.header "value2" .Values.mso.requestDb.auth )}}
  site-name: onapheat
  camundaURL: http://so-bpmn-infra.{{ include "common.namespace" . }}:8081/
  adapters:
    requestDb:
      endpoint: http://so-request-db-adapter.{{ include "common.namespace" . }}:8083
      auth: {{ include "so.helpers.profileProperty" (dict "condition" .Values.global.security.aaf.enabled "value1" .Values.global.aaf.auth.header "value2" .Values.mso.requestDb.auth )}}
  aai:
    {{ if (include "common.needTLS" .) }}
    endpoint: https://aai.{{ include "common.namespace" . }}:8443
    {{ else }}
    endpoint: http://aai.{{ include "common.namespace" . }}:80
    {{ end }}
  asdc-connections:
    asdc-controller1:
      user: mso
      consumerGroup: {{ .Values.config.kafka.sdcTopic.consumerGroup }}
      consumerId: {{ .Values.config.kafka.sdcTopic.clientId }}
      environmentName: AUTO
      {{ if (include "common.needTLS" .) }}
      sdcAddress: sdc-be.{{ include "common.namespace" . }}:8443
      {{ else }}
      sdcAddress: sdc-be.{{ include "common.namespace" . }}:8080
      {{ end }}
      password: {{ index .Values "mso" "asdc-connections" "asdc-controller1" "password" }}
      pollingInterval: 60
      pollingTimeout: 60
      relevantArtifactTypes: HEAT,HEAT_ENV,HEAT_VOL
      useHttpsWithSdc: {{ (eq "true" (include "common.needTLS" .)) | ternary true false }}
      activateServerTLSAuth: false
      keyStorePassword:
      keyStorePath:
      watchDogTimeout: 300
      isFitlerInEmptyResources: true
      httpsProxyHost:
      httpProxyHost:
      httpsProxyPort: 0
      httpProxyPort: 0
  asdc:
    config:
      activity:
        endpoint: http://sdc-wfd-be:8080
      key: {{ .Values.mso.asdc.config.key }}
      components:
        count: 3,
        componentNames: SO,AAI,SDNC
  scheduling:
    enabled: false

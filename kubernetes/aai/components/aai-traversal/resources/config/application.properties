{{/*
# Copyright © 2018 Amdocs, Bell Canada, AT&T
# Modifications Copyright © 2020 Orange
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The following info parameters are being referenced by ajsc6
*/}}
info.build.artifact=aai-traversal
info.build.name=traversal
info.build.description=Traversal Microservice
info.build.version=1.3.0

spring.application.name=aai-traversal
spring.jersey.type=filter

spring.main.allow-bean-definition-overriding=true
server.servlet.context-path=/

spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,org.keycloak.adapters.springboot.KeycloakAutoConfiguration,org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration
spring.profiles.active={{ .Values.global.config.profiles.active }}{{ (eq "true" (include "common.needTLS" .)) | ternary ",one-way-ssl" "" }}
spring.jersey.application-path=${schema.uri.base.path}
#The max number of active threads in this pool
server.tomcat.max-threads=200
#The minimum number of threads always kept alive
server.tomcat.min-Spare-Threads=25
#The number of milliseconds before an idle thread shutsdown, unless the number of active threads are less or equal to minSpareThreads
server.tomcat.max-idle-time=60000

# If you get an application startup failure that the port is already taken
# If thats not it, please check if the key-store file path makes sense
server.local.startpath=aai-traversal/src/main/resources/
server.basic.auth.location=${server.local.startpath}etc/auth/realm.properties

server.port=8446
{{ if ( include "common.needTLS" .) }}
server.ssl.enabled-protocols=TLSv1.1,TLSv1.2
server.ssl.key-store={{ .Values.certInitializer.credsPath }}/{{ .Values.certInitializer.fqi_namespace }}.p12
server.ssl.key-store-password=${KEYSTORE_PASSWORD}
server.ssl.trust-store={{ .Values.certInitializer.credsPath }}/{{ .Values.certInitializer.fqi_namespace }}.trust.jks
server.ssl.trust-store-password=${TRUSTSTORE_PASSWORD}
server.ssl.client-auth=want
server.ssl.key-store-type=JKS
{{ else }}
security.require-ssl=false
server.ssl.enabled=false
{{ end }}

# JMS bind address host port
jms.bind.address=tcp://localhost:61647
dmaap.ribbon.listOfServers=message-router.{{ include "common.namespace" . }}:{{ (eq "true" (include "common.needTLS" .)) | ternary 3905 3904 }}
dmaap.ribbon.transportType={{ include "common.scheme" . }}

# Schema related attributes for the oxm and edges
# Any additional schema related attributes should start with prefix schema
schema.configuration.location=N/A
schema.source.name={{ .Values.global.config.schema.source.name }}
schema.nodes.location=${server.local.startpath}/schema/${schema.source.name}/oxm/
schema.edges.location=${server.local.startpath}/schema/${schema.source.name}/dbedgerules/
# Location of where the stored queries are
schema.queries.location=${server.local.startpath}/schema/${schema.source.name}/query/

schema.ingest.file=${server.local.startpath}/application.properties

# Schema Version Related Attributes

schema.uri.base.path={{ .Values.global.config.schema.uri.base.path }}
# Lists all of the versions in the schema
schema.version.list={{ .Values.global.config.schema.version.list }}
# Specifies from which version should the depth parameter to default to zero
schema.version.depth.start={{ .Values.global.config.schema.version.depth }}
# Specifies from which version should the related link be displayed in response payload
schema.version.related.link.start={{ .Values.global.config.schema.version.related.link }}

# Specifies from which version should the client see only the uri excluding host info
# Before this version server base will also be included
schema.version.app.root.start={{ .Values.global.config.schema.version.app.root }}
# Specifies from which version should the namespace be changed
schema.version.namespace.change.start={{ .Values.global.config.schema.version.namespace.change }}
# Specifies from which version should the client start seeing the edge label in payload
schema.version.edge.label.start={{ .Values.global.config.schema.version.edge.label }}
# Specifies the version that the application should default to
schema.version.api.default={{ .Values.global.config.schema.version.api.default }}

schema.translator.list={{ .Values.global.config.schema.translator.list }}
schema.service.base.url={{ include "common.scheme" . }}://aai-schema-service.{{ include "common.namespace" . }}:8452/aai/schema-service/v1/
schema.service.nodes.endpoint=nodes?version=
schema.service.edges.endpoint=edgerules?version=
schema.service.versions.endpoint=versions
schema.service.custom.queries.endpoint=stored-queries
schema.service.client={{ (eq "true" (include "common.needTLS" .)) | ternary .Values.global.config.schema.service.client "no-auth" }}

{{ if ( include "common.needTLS" .) }}
schema.service.ssl.key-store={{ .Values.certInitializer.credsPath }}/{{ .Values.certInitializer.fqi_namespace }}.p12
schema.service.ssl.trust-store={{ .Values.certInitializer.credsPath }}/{{ .Values.certInitializer.fqi_namespace }}.trust.jks
schema.service.ssl.key-store-password=${KEYSTORE_PASSWORD}
schema.service.ssl.trust-store-password=${TRUSTSTORE_PASSWORD}
{{ end }}

#to expose the Prometheus scraping endpoint
management.port=8448
management.endpoints.enabled-by-default=false
management.security.enabled=false
endpoints.enabled=false
endpoints.info.enabled=false
endpoints.prometheus.enabled=false
endpoints.health.enabled=false
management.metrics.web.server.auto-time-requests=false
management.metrics.distribution.percentiles-histogram[http.server.requests]=true
management.metrics.distribution.sla[http.server.requests]=20ms, 30ms, 40ms, 50ms, 60ms, 70ms, 80ms, 90ms, 100ms, 500ms, 1000ms, 5000ms, 7000ms
#Add common tag for grouping all aai related metrics
management.metrics.tags.group_id=aai
#It is not advisable to use labels to store dimensions with high cardinality. Enable this option only for debug purposes. For more information: https://github.com/micrometer-metrics/micrometer/issues/1584
scrape.uri.metrics=false
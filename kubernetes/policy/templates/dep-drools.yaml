#{{ if not .Values.disablePolicyDrools }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: drools
  namespace: "{{ .Values.nsPrefix }}-policy"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: drools
  template:
    metadata:
      labels:
        app: drools
      name: drools
    spec:
      initContainers:
      - command:
        - /root/ready.py
        args:
        - --container-name
        - mariadb
        - --container-name
        - nexus
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: "{{ .Values.image.readiness }}:{{ .Values.image.readinessVersion }}"
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: drools-readiness
      hostAliases:
      - ip: "{{ .Values.aaiServiceClusterIp }}"
        hostnames:
        - "aai.api.simpledemo.openecomp.org"
      containers:
      - command:
        - /bin/bash
        - -c
        - ./do-start.sh
        image: "{{ .Values.image.policyDrools }}:{{ .Values.image.policyDroolsVersion }}"
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: drools
        ports:
        - containerPort: 6969
        readinessProbe:
          tcpSocket:
            port: 6969
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        - mountPath: /tmp/policy-install/config
          name: drools
        - mountPath: /usr/share/maven/conf/settings.xml
          name: drools-settingsxml
          subPath: settings.xml
        - mountPath: /var/log/onap
          name: policy-logs
        - mountPath: /tmp/logback.xml
          name: policy-logback
          subPath: logback.xml
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "export LOG=wait_logback.log; touch $LOG; export SRC=/tmp/logback.xml; export DST=/opt/app/policy/config/; while [ ! -e $DST ]; do echo 'Waiting for $DST...' >> $LOG; sleep 5; done; sleep 2; /bin/cp -f $SRC $DST; echo 'Done' >> $LOG"]
      - image: {{ .Values.image.filebeat }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: filebeat-onap
        volumeMounts:
        - mountPath: /usr/share/filebeat/filebeat.yml
          name: filebeat-conf
          subPath: filebeat.yml
        - mountPath: /var/log/onap
          name: policy-logs
        - mountPath: /usr/share/filebeat/data
          name: policy-data-filebeat
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: filebeat-conf
          configMap:
            name: policy-filebeat-configmap
        - name: policy-logs
          emptyDir: {}
        - name: policy-data-filebeat
          emptyDir: {}
        - name: policy-logback
          configMap:
            name: policy-drools-log-configmap
        - name: drools-settingsxml
          configMap:
            name: policy-dep-drools-settings-configmap
        - name: drools
          secret:
            secretName: policy-dep-drools-secret
            items:
            - key: policy-keystore
              path: policy-keystore
              mode: 0644
            - key: feature-healthcheck.conf
              path: feature-healthcheck.conf
              mode: 0644
            - key: base.conf
              path: base.conf
              mode: 0755
            - key: policy-management.conf
              path: policy-management.conf
              mode: 0755
            - key: drools-tweaks.sh
              path: drools-tweaks.sh
              mode: 0755
      imagePullSecrets:
      - name: "{{ .Values.nsPrefix }}-docker-registry-key"
#{{ end }}

# Copyright Â© 2018 Amdocs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License

spring.jersey.type=filter
spring.mvc.urls=swagger,docs,prometheus,auditevents,info,heapdump,autoconfig,beans,loggers,dump,env,trace,health,configprops,mappings,metrics,webjars

server.contextPath=/aaicontextbuilder
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration

#This property is used to set the Tomcat connector attributes.developers can define multiple attributes separated by comma
#tomcat.connector.attributes=allowTrace-true
#The max number of active threads in this pool
server.tomcat.max-threads=200
#The minimum number of threads always kept alive
server.tomcat.min-spare-threads=25

# AAI REST Client Configuration
aai.host={{ .Values.config.aaiServiceName }}.{{.Release.Namespace}}
aai.port={{ .Values.config.aaiPort }}
aai.username={{ .Values.config.aaiUsername }}
aai.password={{ .Values.config.aaiPassword }}
aai.httpProtocol={{ .Values.config.aaiHttpProtocol }}
aai.connectionTimeout={{ .Values.config.aaiConnectionTimeout }}
aai.readTimeout={{ .Values.config.aaiReadTimeout }}

# HTTP Basic Authorization credentials for Rest Service API
http.userId={{ .Values.config.httpUserId }}
http.password={{ .Values.config.httpPassword }}

# {0} = customerId {1} = serviceType {2} = serviceInstanceId
aai.serviceInstancePath=/aai/v11/business/customers/customer/{0}/service-subscriptions/service-subscription/{1}/service-instances/service-instance/{2}

#Servlet context parameters
server.context_parameters.p-name=value #context parameter with p-name as key and value as value.

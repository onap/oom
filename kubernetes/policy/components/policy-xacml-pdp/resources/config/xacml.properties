{{/*
#  ============LICENSE_START=======================================================
#   Copyright (C) 2024 Nordix Foundation. All rights reserved.
#  ================================================================================
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#  ============LICENSE_END=========================================================

#
# Properties that the embedded PDP engine uses to configure and load
#
# Standard API Factories
#
*/}}
xacml.dataTypeFactory=com.att.research.xacml.std.StdDataTypeFactory
xacml.pdpEngineFactory=com.att.research.xacmlatt.pdp.ATTPDPEngineFactory
xacml.pepEngineFactory=com.att.research.xacml.std.pep.StdEngineFactory
xacml.pipFinderFactory=com.att.research.xacml.std.pip.StdPIPFinderFactory
xacml.traceEngineFactory=com.att.research.xacml.std.trace.LoggingTraceEngineFactory
#
# AT&T PDP Implementation Factories
#
xacml.att.evaluationContextFactory=com.att.research.xacmlatt.pdp.std.StdEvaluationContextFactory
xacml.att.combiningAlgorithmFactory=com.att.research.xacmlatt.pdp.std.StdCombiningAlgorithmFactory
xacml.att.functionDefinitionFactory=com.att.research.xacmlatt.pdp.std.StdFunctionDefinitionFactory
#
# ONAP PDP Implementation Factories
#
xacml.att.policyFinderFactory=org.onap.policy.pdp.xacml.application.common.OnapPolicyFinderFactory

#
# Use a root combining algorithm
#
xacml.att.policyFinderFactory.combineRootPolicies=urn:oasis:names:tc:xacml:3.0:policy-combining-algorithm:deny-overrides

#
# PIP Engine Definitions
#
count-recent-operations.classname=org.onap.policy.pdp.xacml.application.common.operationshistory.CountRecentOperationsPip
count-recent-operations.issuer=urn:org:onap:xacml:guard:count-recent-operations
count-recent-operations.name=CountRecentOperations
count-recent-operations.description=Returns operation counts based on time window
count-recent-operations.persistenceunit=OperationsHistoryPU

get-operation-outcome.classname=org.onap.policy.pdp.xacml.application.common.operationshistory.GetOperationOutcomePip
get-operation-outcome.issuer=urn:org:onap:xacml:guard:get-operation-outcome
get-operation-outcome.name=GetOperationOutcome
get-operation-outcome.description=Returns operation outcome
get-operation-outcome.persistenceunit=OperationsHistoryPU

#
# Make pips available to finder
#
xacml.pip.engines=count-recent-operations,get-operation-outcome

#
# JPA Properties
#
{{ if .Values.global.mariadbGalera.useInPolicy }}
eclipselink.target-database=MySQL
jakarta.persistence.jdbc.driver=org.mariadb.jdbc.Driver
jakarta.persistence.jdbc.url=jdbc:mariadb://{{ .Values.db.service.mariadbName }}:{{ .Values.db.service.mariadbPort }}/operationshistory
{{ else }}
eclipselink.target-database=PostgreSQL
jakarta.persistence.jdbc.driver=org.postgresql.Driver
jakarta.persistence.jdbc.url=jdbc:postgresql://{{ .Values.db.service.pgName }}:{{ .Values.db.service.pgPort }}/operationhistory
{{ end }}
jakarta.persistence.jdbc.user=${SQL_USER}
jakarta.persistence.jdbc.password=${SQL_PASSWORD}
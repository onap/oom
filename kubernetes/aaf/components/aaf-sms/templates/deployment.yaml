{{/*
# Copyright 2018 Intel Corporation, Inc
# Modifications Â© 2020 AT&T
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ include "common.release" . }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "common.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ include "common.release" . }}
    spec:
      initContainers: {{ include "common.certInitializer.initContainer" . | nindent 8 }}
        # Currently intermediate certificate is not given by AAF CM so we need
        # to give it "by hand"
        {{- if .Values.global.aafEnabled }}
        - name: {{ include "common.fullname" . }}-add-intermediate-cert
          command:
            - /bin/sh
          args:
            - -c
            - |
              cat /int-certs/intermediate_root_ca.pem >> {{ .Values.certInitializer.mountPath }}/local/org.onap.aaf-sms.crt
          image: "{{ .Values.global.busyboxRepository }}/{{ .Values.global.busyboxImage }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          volumeMounts: {{ include "common.certInitializer.volumeMount" . | nindent 12 }}
            - mountPath: /int-certs
              name: {{ include "common.fullname" . }}-int-certs
              readOnly: true
        {{- end }}
        - name: {{ include "common.fullname" . }}-fix-permission
          command:
            - /bin/sh
          args:
            - -c
            - |
              chmod -R 775 /sms/auth
              chown -R 1000:1000 /sms/auth
          image: "{{ .Values.global.busyboxRepository }}/{{ .Values.global.busyboxImage }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          volumeMounts:
            - mountPath: /sms/auth
              name: {{ include "common.fullname" . }}-auth
        - name: {{ include "common.name" . }}-readiness
          image:  "{{ include "common.repository" . }}/{{ .Values.global.readinessImage }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          command:
          - /app/ready.py
          args:
          - --container-name
          - "aaf-sms-vault"
          - --container-name
          - "aaf-sms-vault-backend"
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
      containers:
      - image: "{{ include "common.repository" . }}/{{ .Values.image }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}
        command: ["/sms/bin/sms"]
        workingDir: /sms/
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        {{- if eq .Values.liveness.enabled true }}
        livenessProbe:
          httpGet:
            port: {{ .Values.service.internalPort }}
            scheme: HTTPS
            path: /v1/sms/quorum/status
          initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.liveness.periodSeconds }}
        {{ end -}}
        readinessProbe:
          httpGet:
            port: {{ .Values.service.internalPort }}
            scheme: HTTPS
            path: /v1/sms/quorum/status
          initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.readiness.periodSeconds }}
        volumeMounts: {{ include "common.certInitializer.volumeMount" . | nindent 10 }}
          - mountPath: /etc/localtime
            name: localtime
            readOnly: true
          - mountPath: /sms/smsconfig.json
            name: {{ include "common.name" .}}
            subPath: smsconfig.json
          - mountPath: /sms/auth
            name: {{ include "common.fullname" . }}-auth
        resources:
{{ include "common.resources" . | indent 10 }}
        {{- if .Values.nodeSelector }}
        nodeSelector:
{{ toYaml .Values.nodeSelector | indent 10 }}
        {{- end -}}
        {{- if .Values.affinity }}
        affinity:
{{ toYaml .Values.affinity | indent 10 }}
        {{- end }}
      volumes: {{ include "common.certInitializer.volumes" . | nindent 6 }}
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name : {{ include "common.name" . }}
        configMap:
          name: {{ include "common.fullname" . }}
      {{- if .Values.global.aafEnabled }}
      - name: {{ include "common.fullname" . }}-int-certs
        secret:
          secretName: {{ include "common.fullname" . }}-int-certs
      {{- end }}
      - name: {{ include "common.fullname" . }}-auth
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "common.fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"

{{/*
# Modifications Copyright Â© 2018 Amdocs,Bell Canada
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}

apiVersion: apps/v1
kind: Deployment
metadata: {{- include "common.resourceMetadata" . | nindent 2 }}
spec:
  selector: {{- include "common.selectors" . | nindent 4 }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata: {{- include "common.templateMetadata" . | nindent 6 }}
    spec:
      {{ include "common.podSecurityContext" . | indent 6 | trim}}
      initContainers: {{ include "common.readinessCheck.waitFor" . | nindent 6 }}
      {{- if .Values.usePostgres }}
      - command:
        - sh
        args:
        - -c
        - "cd /config-input && for PFILE in `find . -not -type d | grep -v -F ..`; do envsubst <${PFILE} >/config/${PFILE}; done"
        env:
          - name: PG_USER
            {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "pg-user-creds" "key" "login") | indent 12 }}
          - name: PG_PASSWORD
            {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "pg-user-creds" "key" "password") | indent 12 }}
        volumeMounts:
          - mountPath: /config-input
            name: {{ include "common.name" . }}-config-input
          - mountPath: /config
            name: {{ include "common.name" . }}-config
        name: {{ include "common.name" . }}-update-config
        image: {{ include "repositoryGenerator.image.envsubst" . }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
      - command:
        - /app/ready.py
        args:
        - --container-name
        - {{ .Values.postgres.nameOverride }}
        securityContext:
          runAsUser: 100
          runAsGroup: 65533
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        name: {{ include "common.name" . }}-postgres-readiness
        image: {{ include "repositoryGenerator.image.readiness" . }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
      {{- end }}
      containers:
        - name: {{ include "common.name" . }}
          image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.image }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          ports: {{ include "common.containerPorts" . | nindent 10  }}
          {{ if eq .Values.liveness.enabled true -}}
          livenessProbe:
            httpGet:
              port: {{ .Values.liveness.port }}
              path: /webapi/topics
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          {{ end -}}
          readinessProbe:
            httpGet:
              port: {{ .Values.readiness.port }}
              path: /webapi/topics
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
          volumeMounts:
          - mountPath: /etc/localtime
            name: localtime
            readOnly: true
          - name: {{ include "common.name" . }}-config
            mountPath: /opt/app/config/conf/
          - mountPath: /opt/app/dmaapbc/etc/logback.xml
            name: {{ include "common.fullname" . }}-log-conf
            subPath: logback.xml
          resources:
{{ include "common.resources" . }}
        {{- if .Values.nodeSelector }}
        nodeSelector: {{ toYaml .Values.nodeSelector | nindent 10 }}
        {{- end -}}
        {{- if .Values.affinity }}
        affinity: {{ toYaml .Values.affinity | nindent 10 }}
        {{- end }}
      serviceAccountName: {{ include "common.fullname" (dict "suffix" "read" "dot" . )}}
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: {{ include "common.fullname" . }}-log-conf
          configMap:
            name: {{ include "common.fullname" . }}-log
        {{- if .Values.usePostgres }}
        - name: {{ include "common.name" . }}-config-input
          configMap:
            name: {{ include "common.fullname" . }}-config
        - name: {{ include "common.name" . }}-config
          emptyDir:
            medium: Memory
        {{- else }}
        - name: {{ include "common.name" . }}-config
          configMap:
            name: {{ include "common.fullname" . }}-config
        {{- end }}
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"

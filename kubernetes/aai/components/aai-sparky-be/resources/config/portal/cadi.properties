# Configure AAF
aaf_locate_url=https://aaf-locate.{{.Release.Namespace}}:8095
aaf_url=<%=https://AAF_LOCATE_URL/onap.org.osaaf.aaf.service:2.1

#aaf_url=https://DME2RESOLVE/service=com.att.authz.AuthorizationService/version=2.0/envContext=TEST/routeOffer=BAU_SE
# AAF Environment Designation

#if you are running aaf service from a docker image you have to use aaf service IP and port number
aaf_id={{.Values.config.aafUsername}}
#Encrypt the password using AAF Jar
aaf_password={{.Values.config.aafPassword}}
# Sample CADI Properties, from CADI 1.4.2
#hostname=org.onap.aai.orr
csp_domain=PROD
# Add Absolute path to Keyfile
cadi_keyfile={{.Values.config.cadiKeyFile}}

# This is required to accept Certificate Authentication from Certman certificates.
# can be TEST, IST or PROD
aaf_env=DEV

# DEBUG prints off all the properties.  Use to get started.
cadi_loglevel=DEBUG

# Add Absolute path to truststore2018.jks
cadi_truststore={{.Values.config.cadiTrustStore}}
# Note: This is the ONLY password that doesn't have to be encrypted. All Java's TrustStores are this passcode by default, because they are public certs
cadi_truststore_password={{.Values.config.cadiTrustStorePassword}}

# how to turn on SSL Logging
#javax.net.debug=ssl

# Use "maps.bing.com" to get Lat and Long for an Address
AFT_LATITUDE=32.780140
AFT_LONGITUDE=-96.800451
AFT_ENVIRONMENT=AFTUAT
AFT_DME2_CLIENT_IGNORE_SSL_CONFIG=true
DME2.DEBUG=true
AFT_DME2_HTTP_EXCHANGE_TRACE_ON=true

cadi_latitude=32.780140
cadi_longitude=-96.800451

aaf_root_ns=com.att.aaf
aaf_api_version=2.0

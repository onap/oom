<!--
# Copyright Â© 2017 Amdocs, Bell Canada,AT&T
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-->

<configuration scan="true" scanPeriod="30 seconds" debug="false">

	<property name="logDir" value="/var/log/onap" />

	<property name="errorLog" value="error" />
	<property name="debugLog" value="debug" />
	<property name="networkLog" value="network" />

	<property name="debugPattern" value="[%date|%level|%logger{0}|%thread] %msg%n" />
	<property name="errorPattern" value="${debugPattern}" />
	<property name="networkPattern" value="[%d|%t]%m%n" />

	<appender name="ErrorOut" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logDir}/${errorLog}.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${logDir}/${errorLog}.%i.log.zip</fileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>5</maxIndex>
		</rollingPolicy>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>WARN</level>
		</filter>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>15MB</maxFileSize>
		</triggeringPolicy>
		<encoder>
			<pattern>${errorPattern}</pattern>
		</encoder>
	</appender>

	<appender name="AsyncErrorOut" class="ch.qos.logback.classic.AsyncAppender">
		<appender-ref ref="ErrorOut" />
	</appender>

	<appender name="DebugOut" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logDir}/${debugLog}.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${logDir}/${debugLog}.%i.log.zip</fileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>9</maxIndex>
		</rollingPolicy>
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>20MB</maxFileSize>
		</triggeringPolicy>
		<encoder>
			<pattern>${debugPattern}</pattern>
		</encoder>
	</appender>

	<appender name="AsyncDebugOut" class="ch.qos.logback.classic.AsyncAppender">
		<appender-ref ref="DebugOut" />
	</appender>

	<appender name="NetworkOut" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logDir}/${networkLog}.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${logDir}/${networkLog}.%i.log.zip</fileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>9</maxIndex>
		</rollingPolicy>
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>15MB</maxFileSize>
		</triggeringPolicy>
		<encoder>
			<pattern>${networkPattern}</pattern>
		</encoder>
	</appender>

	<appender name="AsyncNetworkOut" class="ch.qos.logback.classic.AsyncAppender">
		<appender-ref ref="NetworkOut" />
	</appender>

	<logger name="network" level="INFO" additivity="false">
		<appender-ref ref="AsyncNetworkOut" />
	</logger>

	<logger name="org.eclipse.jetty.server.RequestLog" level="info" additivity="false">
		<appender-ref ref="AsyncNetworkOut" />
	</logger>

	<root level="INFO">
		<appender-ref ref="AsyncDebugOut" />
		<appender-ref ref="AsyncErrorOut" />
	</root>

</configuration>

{{/*
#
# ============LICENSE_START=======================================================
# org.onap.aai
# ================================================================================
# Copyright (c) 2018 AT&T Intellectual Property. All rights reserved.
# Copyright (c) 2020 Nokia Intellectual Property. All rights reserved.
# Copyright (c) 2020-2021 Orange Intellectual Property. All rights reserved.
# Modifications Copyright Â© 2023 Nordix Foundation
# ================================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============LICENSE_END=========================================================
*/}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    app.kubernetes.io/name: {{ include "common.name" . }}
    {{- if .Chart.AppVersion }}
    version: "{{ .Chart.AppVersion | replace "+" "_" }}"
    {{- else }}
    version: "{{ .Chart.Version | replace "+" "_" }}"
    {{- end }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ include "common.release" . }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  minReadySeconds: {{ .Values.minReadySeconds }}
  strategy:
    type: {{ .Values.updateStrategy.type }}
    rollingUpdate:
      maxUnavailable: {{ .Values.updateStrategy.maxUnavailable }}
      maxSurge: {{ .Values.updateStrategy.maxSurge }}
  selector:
    matchLabels:
      app: {{ include "common.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ include "common.release" . }}
        app.kubernetes.io/name: {{ include "common.name" . }}
        {{- if .Chart.AppVersion }}
        version: "{{ .Chart.AppVersion | replace "+" "_" }}"
        {{- else }}
        version: "{{ .Chart.Version | replace "+" "_" }}"
        {{- end }}
      name: {{ include "common.name" . }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      hostname: aai-graphadmin
      terminationGracePeriodSeconds: {{ .Values.service.terminationGracePeriodSeconds }}
    {{ if .Values.global.initContainers.enabled }}
      initContainers:
      - command:
      {{ if .Values.global.jobs.migration.enabled }}
        - /app/ready.py
        args:
        - --job-name
        - {{ include "common.release" . }}-aai-graphadmin-migration
      {{  else if .Values.global.jobs.createSchema.enabled  }}
        - /app/ready.py
        args:
        - --job-name
        - {{ include "common.release" . }}-aai-graphadmin-create-db-schema
      {{  else }}
        - /app/ready.py
        args:
        - --app-name
        {{- if .Values.global.cassandra.localCluster }}
        - aai-cassandra
        {{- else }}
        - cassandra
        {{- end }}
        - --container-name
        - aai-schema-service
      {{  end  }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: {{ include "repositoryGenerator.image.readiness" . }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}-readiness
      {{  end  }}
      containers:
      - name: {{ include "common.name" . }}
        image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.image }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        env:
        - name: LOCAL_USER_ID
          value: {{ .Values.securityContext.user_id | quote }}
        - name: LOCAL_GROUP_ID
          value: {{ .Values.securityContext.group_id | quote }}
        - name: INTERNAL_PORT_1
          value: {{ .Values.service.internalPort | quote }}
        - name: INTERNAL_PORT_2
          value: {{ .Values.service.internalPort2 | quote }}
        - name: INTERNAL_PORT_3
          value: {{ .Values.service.internalPort3 | quote }}
        volumeMounts:
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        - mountPath: /opt/app/aai-graphadmin/resources/etc/appprops/janusgraph-realtime.properties
          name: config
          subPath: janusgraph-realtime.properties
        - mountPath: /opt/app/aai-graphadmin/resources/etc/appprops/janusgraph-cached.properties
          name: config
          subPath: janusgraph-cached.properties
        - mountPath: /opt/app/aai-graphadmin/resources/etc/appprops/aaiconfig.properties
          name: properties
          subPath: aaiconfig.properties
        - mountPath: /opt/aai/logroot/AAI-RES
          name: logs
        - mountPath: /opt/app/aai-graphadmin/resources/logback.xml
          name: config
          subPath: logback.xml
        - mountPath: /opt/app/aai-graphadmin/resources/localhost-access-logback.xml
          name: config
          subPath: localhost-access-logback.xml
        - mountPath: /opt/app/aai-graphadmin/resources/etc/auth/realm.properties
          name: config
          subPath: realm.properties
        - mountPath: /opt/app/aai-graphadmin/resources/application.properties
          name: properties
          subPath: application.properties
        ports:
        - containerPort: {{ .Values.service.internalPort }}
          name: {{ .Values.service.portName }}
        - containerPort: {{ .Values.service.internalPort2 }}
          name: {{ .Values.service.portName2 }}
        - containerPort: {{ .Values.service.internalPort3 }}
          name: {{ .Values.service.portName3 }}
        lifecycle:
          # wait for active requests (long-running tasks) to be finished
          # Before the SIGTERM is invoked, Kubernetes exposes a preStop hook in the Pod.
          preStop:
            exec:
              command:
                - sh
                - -c
                - |
                  while (netstat -an | grep ESTABLISHED | grep -e $INTERNAL_PORT_1 -e $INTERNAL_PORT_2)
                  do sleep 10
                  done
        # disable liveness probe when breakpoints set in debugger
        # so K8s doesn't restart unresponsive container
        {{ if .Values.liveness.enabled }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.liveness.periodSeconds }}
        {{ end }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.readiness.periodSeconds }}
        resources: {{ include "common.resources" . | nindent 10 }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end -}}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}

      # side car containers
      {{ include "common.log.sidecar" . | nindent 6 }}
      serviceAccountName: {{ include "common.fullname" (dict "suffix" "read" "dot" . )}}
      volumes:
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name: logs
        emptyDir: {}
      {{ include "common.log.volumes" (dict "dot" . "configMapNamePrefix" (tpl .Values.logConfigMapNamePrefix .)) | nindent 6 }}
      - name: config
        configMap:
          name: {{ include "common.fullname" . }}
      - name: properties
        configMap:
          name: {{ include "common.fullname" . }}-properties
      restartPolicy: {{ .Values.restartPolicy }}
      imagePullSecrets:
      - name: {{ include "common.namespace" . }}-docker-registry-key

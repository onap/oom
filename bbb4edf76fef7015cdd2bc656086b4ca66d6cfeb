{
  "comments": [
    {
      "key": {
        "uuid": "3fd842b5_3740aea1",
        "filename": "kubernetes/aaf/charts/aaf-sms/resources/config/has.json",
        "patchSetId": 28
      },
      "lineNbr": 9,
      "author": {
        "id": 4965
      },
      "writtenOn": "2020-04-06T21:47:58Z",
      "side": 1,
      "message": "Sorry for asking so dummy question but I\u0027m trying to find some logic in this solution but I can\u0027t.\nLet\u0027s try to list the facts just to make sure that we are on the same page.\n1) OOF uses aaf-sms to store all passwords\n2) This file is a part of aaf-sms \"bootstrap data\"\n3) aaf sms is a classic secret store with vault as a backend\n4) OOF retrieves all those passwords at pod startup\n5) All those passwords are encrypted with the appKey that is stored in oof and the oof decrypts them\n\nIs my understanding correct?",
      "revId": "bbb4edf76fef7015cdd2bc656086b4ca66d6cfeb",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4088331_ab81bee3",
        "filename": "kubernetes/aaf/charts/aaf-sms/resources/config/has.json",
        "patchSetId": 28
      },
      "lineNbr": 9,
      "author": {
        "id": 2923
      },
      "writtenOn": "2020-04-06T23:06:11Z",
      "side": 1,
      "message": "Yes.  has.json and osdf.json are files that is used to preload the vault backend.\nThe passwords used to be clear text, with this release we are encrypting those passwords with the appkey.",
      "parentUuid": "3fd842b5_3740aea1",
      "revId": "bbb4edf76fef7015cdd2bc656086b4ca66d6cfeb",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e46bfbb8_97ea0322",
        "filename": "kubernetes/oof/charts/oof-has/values.yaml",
        "patchSetId": 28
      },
      "lineNbr": 81,
      "author": {
        "id": 4965
      },
      "writtenOn": "2020-04-06T21:47:58Z",
      "side": 1,
      "message": "it\u0027s more readable if you use yaml hooks for this:\n\n  - uid: oof-has-app-key\n    name: \u0026appKeySecretName \u0027{{ include \"common.release\" . }}-oof-has-app-key\u0027\n    type: password\n    password: \u0027{{ .Values.config.appKey }}\u0027\n\n\t\n oof-has-api:\n   config:\t\n    oofHasAppKeyExternalSecret: *appKeySecretName\n\n...",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 81,
        "endChar": 82
      },
      "revId": "bbb4edf76fef7015cdd2bc656086b4ca66d6cfeb",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e0d4a8e_c7c4ac6e",
        "filename": "kubernetes/oof/charts/oof-has/values.yaml",
        "patchSetId": 28
      },
      "lineNbr": 81,
      "author": {
        "id": 2923
      },
      "writtenOn": "2020-04-06T23:06:11Z",
      "side": 1,
      "message": "Fixed it..",
      "parentUuid": "e46bfbb8_97ea0322",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 81,
        "endChar": 82
      },
      "revId": "bbb4edf76fef7015cdd2bc656086b4ca66d6cfeb",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd896e2d_97d9bc65",
        "filename": "kubernetes/oof/values.yaml",
        "patchSetId": 28
      },
      "lineNbr": 94,
      "author": {
        "id": 4965
      },
      "writtenOn": "2020-04-06T21:47:58Z",
      "side": 1,
      "message": "it would be great if you could unify and make it either appKey or appkey",
      "revId": "bbb4edf76fef7015cdd2bc656086b4ca66d6cfeb",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26703974_f191a7fb",
        "filename": "kubernetes/oof/values.yaml",
        "patchSetId": 28
      },
      "lineNbr": 94,
      "author": {
        "id": 2923
      },
      "writtenOn": "2020-04-06T23:06:11Z",
      "side": 1,
      "message": "Fixed it in oof-has",
      "parentUuid": "bd896e2d_97d9bc65",
      "revId": "bbb4edf76fef7015cdd2bc656086b4ca66d6cfeb",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}
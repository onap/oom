{{/*
# Copyright © 2017 Amdocs, Bell Canada
# Modifications Copyright © 2018 AT&T
# Modifications Copyright © 2021-2022 Nordix Foundation
# Modifications Copyright © 2023 DTAG
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}

apiVersion: apps/v1
kind: StatefulSet
metadata: {{- include "common.resourceMetadata" . | nindent 2 }}
spec:
  selector: {{- include "common.selectors" . | nindent 4 }}
  serviceName: {{ include "common.servicename" . }}
  replicas: 1
  template:
    metadata: {{- include "common.templateMetadata" . | nindent 6 }}
    spec:
      containers:
        - name: {{ include "common.name" . }}
          image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.image }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          ports: {{ include "common.containerPorts" . | nindent 10  }}
          {{- if eq .Values.liveness.enabled true }}
          livenessProbe:
            httpGet:
              path: /events/__strimzi-topic-operator-kstreams-topic-store-changelog/CG1/C1
              port: {{ .Values.liveness.port }}
              scheme: HTTP
            failureThreshold: {{ .Values.liveness.failureThreshold }}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
            successThreshold: {{ .Values.liveness.successThreshold }}
            timeoutSeconds: {{ .Values.liveness.timeoutSeconds }}
          {{ end }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.readiness.port }}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.readiness.timeoutSeconds }}
            successThreshold: {{ .Values.readiness.successThreshold }}
            failureThreshold: {{ .Values.readiness.failureThreshold }}
          startupProbe:
            httpGet:
              path: /events/__strimzi-topic-operator-kstreams-topic-store-changelog/CG1/C1
              port: {{ .Values.startup.port }}
              scheme: HTTP
            failureThreshold: {{ .Values.startup.failureThreshold }}
            initialDelaySeconds: {{ .Values.startup.initialDelaySeconds }}
            periodSeconds: {{ .Values.startup.periodSeconds }}
            successThreshold: {{ .Values.startup.successThreshold }}
            timeoutSeconds: {{ .Values.startup.timeoutSeconds }}
          env:
          - name: JAASLOGIN
            valueFrom:
              secretKeyRef:
                name: strimzi-kafka-admin
                key: sasl.jaas.config
          - name: SASLMECH
            value: scram-sha-512
          - name: enableCadi
            value: "true"
          - name: useZkTopicStore
            value: "false"
          volumeMounts:
            - mountPath: /etc/localtime
              name: localtime
              readOnly: true
            - mountPath: /appl/dmaapMR1/bundleconfig/etc/appprops/MsgRtrApi.properties
              subPath: MsgRtrApi.properties
              name: appprops
            - mountPath: /appl/dmaapMR1/bundleconfig/etc/logback.xml
              subPath: logback.xml
              name: logback
          resources: {{ include "common.resources" . | nindent 12 }}
        - name: {{ .Values.zkTunnelService.name }}
          image: {{ include "repositoryGenerator.dockerHubRepository" . }}/{{ .Values.zkTunnelService.image }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          command:
            - /opt/stunnel/stunnel_run.sh
          ports:
            - containerPort: {{ .Values.zkTunnelService.internalPort }}
              name: {{ .Values.zkTunnelService.portName }}
              protocol: {{ .Values.zkTunnelService.protocol }}
          env:
            - name: LOG_LEVEL
              value: {{ .Values.zkTunnelService.logLevel }}
            - name: STRIMZI_ZOOKEEPER_CONNECT
              value: '{{ include "common.release" . }}-strimzi-zookeeper-client:{{ .Values.zkTunnelService.internalPort }}'
          livenessProbe:
            exec:
              command:
                - /opt/stunnel/stunnel_healthcheck.sh
                - '{{ .Values.zkTunnelService.internalPort }}'
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - /opt/stunnel/stunnel_healthcheck.sh
                - '{{ .Values.zkTunnelService.internalPort }}'
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /etc/cluster-operator-certs/
              name: cluster-operator-certs
            - mountPath: /etc/cluster-ca-certs/
              name: cluster-ca-certs
      serviceAccountName: {{ include "common.fullname" (dict "suffix" "read" "dot" . )}}
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: appprops
          configMap:
            name: {{ include "common.fullname" . }}-msgrtrapi-prop-configmap
        - name: logback
          configMap:
            name: {{ include "common.fullname" . }}-logback-xml-configmap
        - name: cluster-operator-certs
          secret:
            defaultMode: 288
            secretName: {{ include "common.release" . }}-strimzi-cluster-operator-certs
        - name: cluster-ca-certs
          secret:
            defaultMode: 288
            secretName: {{ include "common.release" . }}-strimzi-cluster-ca-cert
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "common.fullname" . }}-zk-network-policy
  namespace: {{ include "common.namespace" . }}
spec:
  podSelector:
    matchLabels:
      strimzi.io/name: {{ include "common.release" . }}-strimzi-zookeeper
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: {{ include "common.name" . }}
    ports:
    - port: {{ .Values.zkTunnelService.internalPort }}
      protocol: {{ .Values.zkTunnelService.protocol }}
  policyTypes:
  - Ingress

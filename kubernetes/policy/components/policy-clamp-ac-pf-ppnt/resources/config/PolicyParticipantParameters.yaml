#  ============LICENSE_START=======================================================
#   Copyright (C) 2021-2022 Nordix Foundation.
#  ================================================================================
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#  ============LICENSE_END=========================================================

spring:
  autoconfigure:
    exclude: >
      org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,
      org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,
      org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration
  security:
    user:
      name: ${RESTSERVER_USER}
      password: ${RESTSERVER_PASSWORD}
  kafka:
    consumer:
      group-id: {{ .Values.config.kafka.consumer.groupId }}
{{- if .Values.config.useStrimziKafka }}
    bootstrap-servers: {{ include "common.release" . }}-{{ .Values.config.kafkaBootstrap }}:9092
    security.protocol: SASL_PLAINTEXT
    properties.sasl:
      mechanism: SCRAM-SHA-512
      jaas.config: ${JAASLOGIN}
{{ else }}
{{ toYaml .Values.config.eventConsumption | nindent 2 }}
{{- end }}

security:
  enable-csrf: false

participant:
  pdpGroup: defaultGroup
  pdpType: apex
  policyApiParameters:
    clientName: api
    hostname: policy-api
    port: 6969
    userName: ${API_USER}
    password: ${API_PASSWORD}
    useHttps: {{ (eq "true" (include "common.needTLS" .)) | ternary "true" "false" }}
    allowSelfSignedCerts: true
  policyPapParameters:
    clientName: pap
    hostname: policy-pap
    port: 6969
    userName: ${PAP_USER}
    password: ${PAP_PASSWORD}
    useHttps: {{ (eq "true" (include "common.needTLS" .)) | ternary "true" "false" }}
    allowSelfSignedCerts: true
  intermediaryParameters:
    reportingTimeIntervalMs: 120000
    description: Participant Description
    participantId:
      name: org.onap.PM_Policy
      version: 1.0.0
    participantType:
      name: org.onap.policy.clamp.acm.PolicyParticipant
      version: 2.3.1
    clampAutomationCompositionTopics:
      topicSources:
        -
          topic: POLICY-ACRUNTIME-PARTICIPANT
          servers:
            - ${topicServer:message-router}
          topicCommInfrastructure: dmaap
          fetchTimeout: 15000
          useHttps: {{ (eq "true" (include "common.needTLS" .)) | ternary "true" "false" }}
      topicSinks:
        -
          topic: POLICY-ACRUNTIME-PARTICIPANT
          servers:
            - ${topicServer:message-router}
          topicCommInfrastructure: dmaap
          useHttps: {{ (eq "true" (include "common.needTLS" .)) | ternary "true" "false" }}

# If Strimzi Kafka to be used for communication, replace clampAutomationCompositionTopics configuration with below
#    clampAutomationCompositionTopics:
#      topicSources:
#        -
#          topic: policy-acruntime-participant
#          servers:
#            - {{ include "common.release" . }}-{{ .Values.config.kafkaBootstrap }}:9092
#          topicCommInfrastructure: kafka
#          fetchTimeout: 15000
#          useHttps: true
#          additionalProps:
#            security.protocol: SASL_PLAINTEXT
#            sasl.mechanism: SCRAM-SHA-512
#            sasl.jaas.config: ${JAASLOGIN}
#      topicSinks:
#        -
#          topic: policy-acruntime-participant
#          servers:
#            - {{ include "common.release" . }}-{{ .Values.config.kafkaBootstrap }}:9092
#          topicCommInfrastructure: kafka
#          useHttps: true
#          additionalProps:
#            security.protocol: SASL_PLAINTEXT
#            sasl.mechanism: SCRAM-SHA-512
#            sasl.jaas.config: ${JAASLOGIN}

management:
  endpoints:
    web:
      exposure:
        include: health, metrics, prometheus

server:
  port: 8085
  servlet:
    context-path: /onap/policyparticipant
  ssl:
    enabled: {{ (eq "true" (include "common.needTLS" .)) | ternary true false }}


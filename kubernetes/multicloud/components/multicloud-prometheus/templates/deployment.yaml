{{/*
# Copyright 2018 Intel Corporation, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}

apiVersion: apps/v1
kind: Deployment
metadata: {{- include "common.resourceMetadata" . | nindent 2 }}
spec:
  selector: {{- include "common.selectors" . | nindent 4 }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata: {{- include "common.templateMetadata" . | nindent 6 }}
    spec:
      initContainers:
      - image: {{ include "repositoryGenerator.image.busybox" . }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}-chown-init
        command: ["chown", "-R", "65534:65534", "{{ .Values.persistence.containerMountPath }}"]
        volumeMounts:
        - name: {{ include "common.fullname" . }}-storage
          mountPath: {{ .Values.persistence.containerMountPath }}
      containers:
      - name: {{ include "common.name" . }}-configmap-reload
        image: {{ include "repositoryGenerator.dockerHubRepository" . }}/{{ .Values.global.configmapReload.image.repository }}:{{ .Values.global.configmapReload.image.tag }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        args:
          - --volume-dir=/etc/config
          - --webhook-url=http://localhost:9090/-/reload
        volumeMounts:
          - name: {{ include "common.fullname" . }}-config
            mountPath: /etc/config
            readOnly: true

      - name: {{ include "common.name" . }}-server
        image: {{ include "repositoryGenerator.dockerHubRepository" . }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        args:
          - --config.file=/etc/config/prometheus.yml
          - --storage.tsdb.path={{ .Values.persistence.containerMountPath }}
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
        {{- if .Values.server.enableAdminApi }}
          - --web.enable-admin-api
        {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports: {{ include "common.containerPorts" . | nindent 10  }}
        # disable liveness probe when breakpoints set in debugger
        # so K8s doesn't restart unresponsive container
        {{- if .Values.liveness.enabled }}
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.liveness.periodSeconds }}
          timeoutSeconds: {{ .Values.liveness.timeoutSeconds }}
        {{ end -}}
        {{- if .Values.readiness.enabled }}
        readinessProbe:
          httpGet:
            path: /-/ready
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.readiness.periodSeconds }}
          timeoutSeconds: {{ .Values.readiness.timeoutSeconds }}
        {{ end -}}
        volumeMounts:
          - name: {{ include "common.fullname" . }}-config
            mountPath: /etc/config
          - name: {{ include "common.fullname" . }}-storage
            mountPath: {{ .Values.persistence.containerMountPath }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end -}}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      serviceAccountName: {{ include "common.fullname" (dict "suffix" "read" "dot" . )}}
      volumes:
        - name: {{ include "common.fullname" . }}-config
          configMap:
            name: {{ include "common.fullname" . }}
        - name: {{ include "common.fullname" . }}-storage
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "common.fullname" . }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"
      restartPolicy: Always

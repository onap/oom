#{{ if not .Values.disablePortalVncPortal }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: vnc-update-hosts
  namespace: "{{ .Values.nsPrefix }}-portal"
data:
{{ (.Files.Glob "resources/scripts/update_hosts.sh").AsConfig | indent 2 }}
--- apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: vnc-portal
  name: vnc-portal
  namespace: "{{ .Values.nsPrefix }}-portal"
spec:
  selector:
    matchLabels:
      app: vnc-portal
  template:
    metadata:
      labels:
        app: vnc-portal
      name: vnc-portal
    spec:
      initContainers:
      - command:
        - /root/ready.py
        args:
        - --container-name
        - portalapps
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: {{ .Values.image.readiness }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: vnc-portal-readiness
      - command:
        - /root/ready.py
        args:
        - --container-name
        - pap
        env:
        - name: NAMESPACE
          value: {{ .Values.nsPrefix }}-policy
        image: {{ .Values.image.readiness }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: vnc-pap-readiness
      - command:
        - /root/ready.py
        args:
        - --container-name
        - sdc-fe
        env:
        - name: NAMESPACE
          value: {{ .Values.nsPrefix }}-sdc
        image: {{ .Values.image.readiness }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: vnc-sdc-readiness
      - command:
        - /root/ready.py
        args:
        - --container-name
        - vid-server
        env:
        - name: NAMESPACE
          value: {{ .Values.nsPrefix }}-vid
        image: {{ .Values.image.readiness }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: vnc-vid-readiness
      containers:
      - image: {{ .Values.image.ubuntuDesktop }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "(while true; do /tmp/update_hosts.sh sdc-be.{{ .Values.nsPrefix }}-sdc sdc.api.be.simpledemo.onap.org; /tmp/update_hosts.sh portalapps.{{ .Values.nsPrefix }}-portal portal.api.simpledemo.onap.org; /tmp/update_hosts.sh pap.{{ .Values.nsPrefix }}-policy policy.api.simpledemo.onap.org; /tmp/update_hosts.sh sdc-fe.{{ .Values.nsPrefix }}-sdc sdc.api.simpledemo.onap.org; /tmp/update_hosts.sh vid-server.{{ .Values.nsPrefix }}-vid vid.api.simpledemo.onap.org; /tmp/update_hosts.sh sparky-be.{{ .Values.nsPrefix }}-aai aai.api.simpledemo.onap.org; sleep 10; done)  > update_hosts.log 2>&1 &"]
        env:
        - name: VNC_PASSWORD
          value: password
        name: vnc-portal
        volumeMounts:
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        - mountPath: /tmp/update_hosts.sh
          name: vnc-update-hosts
          subPath: update_hosts.sh
        securityContext:
          privileged: true
      securityContext: {}
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: vnc-update-hosts
          configMap:
            name: vnc-update-hosts
            defaultMode: 0755
      imagePullSecrets:
      - name: "{{ .Values.nsPrefix }}-docker-registry-key"
#{{ end }}
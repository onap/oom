# Copyright Â© 2020 Bitnami
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
{{- if .Values.curator.enabled }}
apiVersion: {{ template "cronjob.apiVersion" . }}
kind: CronJob
metadata:
  name: {{ template "elasticsearch.curator.fullname" . }}
  labels: {{- include "elasticsearch.labels" . | nindent 4 }}
    role: curator
  {{- if .Values.curator.cronjob.annotations }}
  annotations: {{- toYaml .Values.curator.cronjob.annotations | indent 4 }}
  {{- end }}
spec:
  schedule: "{{ .Values.curator.cronjob.schedule }}"
  {{- with .Values.curator.cronjob.concurrencyPolicy }}
  concurrencyPolicy: {{ . }}
  {{- end }}
  {{- with .Values.curator.cronjob.failedJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ . }}
  {{- end }}
  {{- with .Values.curator.cronjob.successfulJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ . }}
  {{- end }}
  jobTemplate:
    metadata:
      labels:
        app: {{ template "elasticsearch.name" . }}
        release: {{ .Release.Name | quote }}
    spec:
      template:
        metadata:
          labels:
            app: {{ template "elasticsearch.name" . }}
            release: {{ .Release.Name | quote }}
          {{- if .Values.curator.podAnnotations }}
          annotations: {{- toYaml .Values.curator.podAnnotations | nindent 12 }}
          {{- end }}
        spec:
          volumes:
            - name: config-volume
              configMap:
                name: {{ template "elasticsearch.curator.fullname" . }}
            {{- if .Values.curator.extraVolumes }}
            {{- toYaml .Values.curator.extraVolumes | nindent 12 }}
            {{- end }}
          restartPolicy: {{ .Values.curator.cronjob.jobRestartPolicy }}
          {{- if .Values.curator.priorityClassName }}
          priorityClassName: {{ .Values.curator.priorityClassName | quote }}
          {{- end }}
{{- include "elasticsearch.imagePullSecrets" . | indent 10 }}
          {{- if .Values.curator.extraInitContainers }}
          initContainers:
            {{- range $key, $value := .Values.curator.extraInitContainers }}
            - name: "{{ $key }}"
            {{- toYaml $value | nindent 14 }}
            {{- end }}
          {{- end }}
          {{- if .Values.curator.rbac.enabled }}
          serviceAccountName: {{ include "elasticsearch.curator.serviceAccountName" . }}
          {{- end }}
          {{- if .Values.curator.affinity }}
          affinity: {{- include "elasticsearch.tplValue" (dict "value" .Values.curator.affinity "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.curator.nodeSelector }}
          nodeSelector: {{- include "elasticsearch.tplValue" (dict "value" .Values.curator.nodeSelector "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.curator.tolerations }}
          tolerations: {{- include "elasticsearch.tplValue" (dict "value" .Values.curator.tolerations "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.curator.securityContext }}
          securityContext: {{- toYaml .Values.curator.securityContext | nindent 12 }}
          {{- end }}
          containers:
            - name: {{ template "elasticsearch.curator.fullname" . }}
              image: {{ template "elasticsearch.curator.image" . }}
              imagePullPolicy: {{ .Values.curator.image.pullPolicy | quote }}
              volumeMounts:
                - name: config-volume
                  mountPath: /etc/es-curator
                {{- if .Values.curator.extraVolumeMounts }}
                {{- toYaml .Values.curator.extraVolumeMounts | nindent 16 }}
                {{- end }}
              {{ if .Values.curator.command }}
              command: {{ toYaml .Values.curator.command | nindent 16 }}
              {{- end }}
              {{- if .Values.curator.dryrun }}
              args: [ "--dry-run", "--config", "/etc/es-curator/config.yml", "/etc/es-curator/action_file.yml" ]
              {{- else }}
              args: [ "--config", "/etc/es-curator/config.yml", "/etc/es-curator/action_file.yml" ]
              {{- end }}
              env:
                {{- if .Values.curator.env }}
                {{- range $key,$value := .Values.curator.env }}
                - name: {{ $key | upper | quote}}
                  value: {{ $value | quote}}
                {{- end }}
                {{- end }}
                {{- if .Values.curator.envFromSecrets }}
                {{- range $key,$value := .Values.curator.envFromSecrets }}
                - name: {{ $key | upper | quote}}
                  valueFrom:
                    secretKeyRef:
                      name: {{ $value.from.secret | quote}}
                      key: {{ $value.from.key | quote}}
                {{- end }}
                {{- end }}
              {{- if .Values.curator.resources }}
              resources: {{- toYaml .Values.curator.resources | nindent 16 }}
              {{- end }}
{{- end }}

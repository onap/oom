#
# ============LICENSE_START=======================================================
# org.onap.aai
# ================================================================================
# Copyright Â© 2017 AT&T Intellectual Property. All rights reserved.
# ================================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============LICENSE_END=========================================================
#
# ECOMP is a trademark and service mark of AT&T Intellectual Property.
#

aai.config.checktime=1000

# this could come from siteconfig.pl?
aai.config.nodename=AutomaticallyOverwritten

aai.server.url.base=https://aai.{{ include "common.namespace" . }}:8443/aai/
aai.server.url=https://aai.{{ include "common.namespace" . }}:8443/aai/{{ .Values.global.config.schema.version.api.default }}/
aai.global.callback.url=https://aai.{{ include "common.namespace" . }}:8443/aai/

{{ if .Values.global.config.basic.auth.enabled }}
aai.tools.enableBasicAuth=true
aai.tools.username={{ .Values.global.config.basic.auth.username }}
aai.tools.password={{ .Values.global.config.basic.auth.passwd }}
{{ end }}

aai.truststore.filename={{ .Values.global.config.truststore.filename }}
aai.truststore.passwd.x={{ .Values.global.config.truststore.passwd }}
aai.keystore.filename={{ .Values.global.config.keystore.filename }}
aai.keystore.passwd.x={{ .Values.global.config.keystore.passwd }}

aai.notification.current.version={{ .Values.global.config.schema.version.api.default }}
aai.notificationEvent.default.status=UNPROCESSED
aai.notificationEvent.default.eventType={{ .Values.global.config.notification.eventType }}
aai.notificationEvent.default.domain={{ .Values.global.config.notification.domain }}
aai.notificationEvent.default.sourceName=aai
aai.notificationEvent.default.sequenceNumber=0
aai.notificationEvent.default.severity=NORMAL
aai.notificationEvent.default.version={{ .Values.global.config.schema.version.api.default }}
# This one lets us enable/disable resource-version checking on updates/deletes
aai.resourceversion.enableflag=true
aai.logging.maxStackTraceEntries=10
aai.default.api.version={{ .Values.global.config.schema.version.api.default }}

# Used by Model-processing code
aai.model.delete.sleep.per.vtx.msec=500
aai.model.query.resultset.maxcount=50
aai.model.query.timeout.sec=90

aai.model.proc.max.levels=50
aai.edgeTag.proc.max.levels=50

aai.logging.trace.enabled=true
aai.logging.trace.logrequest=false
aai.logging.trace.logresponse=false

aai.transaction.logging=true
aai.transaction.logging.get=false
aai.transaction.logging.post=false

aai.realtime.clients={{ .Values.global.config.realtime.clients }}

#timeout for traversal enabled flag
aai.traversal.timeoutenabled={{ .Values.config.timeout.enabled }}

#timeout app specific
aai.traversal.timeout.appspecific={{ .Values.config.timeout.appspecific }}

#default timeout limit added for traversal if not overridden (in ms)
aai.traversal.timeoutlimit={{ .Values.config.timeout.limit | int }}

#timeout for traversal dsl enabled flag
aai.traversal.dsl.timeoutenabled={{ .Values.config.dsl.timeout.enabled }}

#timeout app specific -1 to bypass for that app id, a whole number to override the timeout with that value (in ms)
aai.traversal.dsl.timeout.appspecific={{ .Values.config.dsl.timeout.appspecific | join "|" }}

#default timeout limit added for traversal dsl if not overridden (in ms)
aai.traversal.dsl.timeoutlimit={{ .Values.config.dsl.timeout.limit | int }}

# Threshold for margin of error (in ms) for resources_with_sot format to derive the most recent http method performed
aai.resource.formatter.threshold=10
aai.dsl.override={{ .Values.config.dslOverride }}

#  ============LICENSE_START=======================================================
#   Copyright (C) 2018 Ericsson. All rights reserved.
#  ================================================================================
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#  ============LICENSE_END=========================================================
{
    "name":"SDCDistributionGroup",
    "restServerParameters":{
        "host":"0.0.0.0",
        "port":6969,
        "userName":"healthcheck",
        "password":"zb!XztG34",
        "https":true
    },
    "receptionHandlerParameters":{
        "SDCReceptionHandler":{
            "receptionHandlerType":"SDC",
            "receptionHandlerClassName":"org.onap.policy.distribution.reception.handling.sdc.SdcReceptionHandler",
            "receptionHandlerConfigurationName":"sdcConfiguration",
            "pluginHandlerParameters":{
                "policyDecoders":{
                    "CsarDecoder":{
                        "decoderType":"CsarDecoder",
                        "decoderClassName":"org.onap.policy.distribution.reception.decoding.pdpx.PolicyDecoderCsarPdpx",
                        "decoderConfigurationName": "csarToOptimizationPolicyConfiguration"
                    },
                    "ApexDecoder":{
                        "decoderType":"ApexDecoder",
                        "decoderClassName":"org.onap.policy.distribution.reception.decoding.policy.file.PolicyDecoderFileInCsarToPolicy",
                        "decoderConfigurationName": "apexDecoderConfiguration"
                    }
                },
                "policyForwarders":{
                    "PAPEngineForwarder":{
                        "forwarderType":"PAPEngine",
                        "forwarderClassName":"org.onap.policy.distribution.forwarding.xacml.pdp.XacmlPdpPolicyForwarder",
                        "forwarderConfigurationName": "xacmlPdpConfiguration"
                    },
                    "ApexForwarder":{
                        "forwarderType":"ApexForwarder",
                        "forwarderClassName":"org.onap.policy.distribution.forwarding.apex.pdp.ApexPdpPolicyForwarder",
                        "forwarderConfigurationName": "apexForwarderConfiguration"
                    },
                    "LifeCycleApiForwarder":{
                        "forwarderType":"LifeCycleAPI",
                        "forwarderClassName":"org.onap.policy.distribution.forwarding.lifecycle.api.LifecycleApiPolicyForwarder",
                        "forwarderConfigurationName": "lifecycleApiConfiguration"
                    }
                }
            }
        }
    },
    "receptionHandlerConfigurationParameters":{
        "sdcConfiguration":{
            "parameterClassName":"org.onap.policy.distribution.reception.handling.sdc.SdcReceptionHandlerConfigurationParameterGroup",
            "parameters":{
                "asdcAddress": "sdc-be:8443",
                "messageBusAddress": [
                    "message-router"
                 ],
                "user": "policy",
                "password": "Kp8bJ4SXszM0WXlhak3eHlcse2gAw84vaoGGmJvUy2U",
                "pollingInterval":20,
                "pollingTimeout":30,
                "consumerId": "policy-id",
                "artifactTypes": [
                    "TOSCA_CSAR",
                    "HEAT"
                ],
                "consumerGroup": "policy-group",
                "environmentName": "AUTO",
                "keystorePath": "null",
                "keystorePassword": "null",
                "activeserverTlsAuth": false,
                "isFilterinEmptyResources": true,
                "isUseHttpsWithDmaap": false
            }
        }
    },
    "policyDecoderConfigurationParameters":{
        "csarToOptimizationPolicyConfiguration":{
            "parameterClassName":"org.onap.policy.distribution.reception.decoding.pdpx.PolicyDecoderCsarPdpxConfigurationParameterGroup",
            "parameters":{
                "policyNamePrefix": "oofCasablanca",
                "onapName": "OOF",
                "version": "1.0",
                "priority": "3",
                "riskType": "Test",
                "riskLevel": "2"
            }
        },
        "apexDecoderConfiguration":{
            "parameterClassName":"org.onap.policy.distribution.reception.decoding.policy.file.PolicyDecoderFileInCsarToPolicyParameterGroup",
            "parameters":{
                "policyFileName": "apex_policy",
                "policyTypeFileName": "apex_policy_type"
            }
        }
    },
    "policyForwarderConfigurationParameters":{
        "xacmlPdpConfiguration":{
            "parameterClassName":"org.onap.policy.distribution.forwarding.xacml.pdp.XacmlPdpPolicyForwarderParameterGroup",
            "parameters":{
                "useHttps": true,
                "hostname": "pdp",
                "port": 8081,
                "userName": "testpdp",
                "password": "alpha123",
                "clientAuth": "cHl0aG9uOnRlc3Q=",
                "isManaged": true,
                "pdpGroup": "default"
            }
        },
        "apexForwarderConfiguration":{
            "parameterClassName":"org.onap.policy.distribution.forwarding.apex.pdp.ApexPdpPolicyForwarderParameterGroup",
            "parameters":{
                "hostname":"policy-apex-pdp",
                "port":"12345",
                "ignoreConflicts": true,
                "forceUpdate": true
            }
        },
        "lifecycleApiConfiguration":{
            "parameterClassName":"org.onap.policy.distribution.forwarding.lifecycle.api.LifecycleApiForwarderParameters",
            "parameters":{
                "apiParameters": {
                "hostName": "policy-api",
                "port": 6969,
                  "userName": "healthcheck",
                  "password": "zb!XztG34"
                 },
                "papParameters": {
                  "hostName": "policy-pap",
                  "port": 6969,
                 "userName": "healthcheck",
                "password": "zb!XztG34"
                },
                "isHttps": true,
                "deployPolicies": true
             }
        }
    }
}

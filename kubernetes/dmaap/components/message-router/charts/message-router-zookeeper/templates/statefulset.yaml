# Copyright © 2017 Amdocs, Bell Canada
# Modifications Copyright © 2018 AT&T
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ .Values.service.name }}
  replicas: {{ .Values.replicaCount }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.maxUnavailable }}
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ .Release.Name }}
    spec:
      podAntiAffinity:
         preferredDuringSchedulingIgnoredDuringExecution:
         - weight: 1
           podAffinityTerm:
             labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - {{ include "common.name" . }}
             topologyKey: "kubernetes.io/hostname"
      {{- if .Values.nodeAffinity }}
      nodeAffinity:
        {{ toYaml .Values.nodeAffinity | indent 10 }}
      {{- end }}
      initContainers:
      - name: {{ include "common.name" . }}-permission-fixer
        command:
        - sh
        - -exec
        - >
          chown -R 1000:1000 /tmp/zookeeper/apikeys;
        image: "{{ .Values.busyBoxRepository }}/{{ .Values.busyBoxImage }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        volumeMounts:
        - mountPath: /tmp/zookeeper/apikeys
          name: zookeeper-data
      containers:
      - name: {{ include "common.name" . }}
        image: "{{ include "common.repository" . }}/{{ .Values.image }}"
        imagePullPolicy:  {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        resources:
{{ include "common.resources" . | indent 12 }}
        ports:
        - containerPort: {{ .Values.service.clientPort }}
          name: {{ .Values.service.clientPortName }}
        - containerPort: {{ .Values.service.serverPort }}
          name: {{ .Values.service.serverPortName }}
        - containerPort: {{ .Values.service.leaderElectionPort }}
          name: {{ .Values.service.leaderElectionPortName }}
        {{ if eq .Values.liveness.enabled true }}
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "zookeeper-ready.sh 2181"
          initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.liveness.periodSeconds }}
        {{ end }}
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "zookeeper-ready.sh 2181"
          initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.readiness.periodSeconds }}
        env:
        - name: ZK_REPLICAS
          value: "{{ .Values.replicaCount }}"
        - name: ZK_INIT_LIMIT
          value: "{{ .Values.zk.initLimit }}"
        - name: ZK_SYNC_LIMIT
          value: "{{ .Values.zk.syncLimit }}"
        volumeMounts:
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        - mountPath: /var/lib/zookeeper/data
          name: zookeeper-data
      {{- if .Values.tolerations }}
      tolerations:
        {{ toYaml .Values.tolerations | indent 10 }}
      {{- end }}
      volumes:
      - name: localtime
        hostPath:
          path: /etc/localtime
{{ if not .Values.persistence.enabled }}
      - name: zookeeper-data
        emptyDir: {}
{{ else }}
  volumeClaimTemplates:
    - metadata:
        name:  zookeeper-data
        labels:
          app:  {{ include "common.fullname" . }}
          chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
          release: "{{ .Release.Name }}"
          heritage: "{{ .Release.Service }}"
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        selector:
          matchLabels:
            release: "{{ .Release.Name }}"
            app: {{ .Values.service.name }}
            chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
            heritage: "{{ .Release.Service }}"
{{ end }}
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"



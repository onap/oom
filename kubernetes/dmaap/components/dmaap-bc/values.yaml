# Copyright © 2018  AT&T Intellectual Property.  All rights reserved.
# Modifications Copyright © 2018 Amdocs,Bell Canada
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#################################################################
# Global configuration defaults.
#################################################################
global:
  persistence: {}

#################################################################
# Secrets metaconfig
#################################################################
secrets:
  - uid: pg-root-pass
    name: &pgRootPassSecretName '{{ include "common.release" . }}-dmaap-bc-pg-root-pass'
    type: password
    externalSecret: '{{ ternary "" (tpl (default "" .Values.postgres.config.pgRootPasswordExternalSecret) .) (hasSuffix "dmaap-bc-pg-root-pass" .Values.postgres.config.pgRootPasswordExternalSecret) }}'
    password: '{{ .Values.postgres.config.pgRootpassword }}'
    policy: generate
  - uid: pg-user-creds
    name: &pgUserCredsSecretName '{{ include "common.release" . }}-dmaap-bc-pg-user-creds'
    type: basicAuth
    externalSecret: '{{ ternary "" (tpl (default "" .Values.postgres.config.pgUserExternalSecret) .) (hasSuffix "dmaap-bc-pg-user-creds" .Values.postgres.config.pgUserExternalSecret) }}'
    login: '{{ .Values.postgres.config.pgUserName }}'
    password: '{{ .Values.postgres.config.pgUserPassword }}'
    passwordPolicy: generate

#################################################################
# Application configuration defaults.
#################################################################
# application images
image: onap/dmaap/dmaap-bc:2.0.12
pullPolicy: Always

#DMaaP Bus Controller client image for provisioning at deploy time
dbcClientImage: onap/dmaap/dbc-client:2.0.12

# application configuration
dmaapMessageRouterService: &mr_name message-router
dmaapDataRouterProvService: &dr_prov_name dmaap-dr-prov
dmaapDataRouterNodeService: &dr_node_name dmaap-dr-node

nodeSelector: {}

affinity: {}

containerPort: &svc_port 8080

service:
  type: ClusterIP
  name: &svc_name dmaap-bc
  ports:
    - name: &port http
      port: *svc_port

ingress:
  enabled: false
  service:
    - baseaddr: "dmaap-bc-api"
      name: *svc_name
      port: *svc_port
  config:
    ssl: "redirect"

# probe configuration parameters
liveness:
  initialDelaySeconds: 10
  periodSeconds: 10
  # necessary to disable liveness probe when setting breakpoints
  # in debugger so K8s doesn't restart unresponsive container
  port: *svc_port
  enabled: true

readiness:
  initialDelaySeconds: 10
  periodSeconds: 10
  port: *svc_port

usePostgres: &use_pg true

postgres:
# For Dev deployments, use in memory DB
# postgres
#   enabled: false
  enabled: true
  nameOverride: &pg_name dbc-postgres
  service:
    name: *pg_name
    name2: dbc-pg-primary
    name3: dbc-pg-replica
  container:
    name:
      primary: dbc-pg-primary
      replica: dbc-pg-replica
  config:
    pgUserName: dmaap_admin
    pgDatabase: dmaap
    pgUserExternalSecret: *pgUserCredsSecretName
    pgRootPasswordExternalSecret: *pgRootPassSecretName
  persistence:
    mountSubPath: dbc/data
    mountInitPath: dbc

# Resource Limit flavor -By Default using small
flavor: small

# Segregation for Different environment (Small and Large)
resources:
  small:
    limits:
      cpu: 999
      memory: 1Gi
    requests:
      cpu: 1
      memory: 1Gi
  large:
    limits:
      cpu: 999
      memory: 2Gi
    requests:
      cpu: 2
      memory: 2Gi
  unlimited: {}

securityContext:
  user_id: 1000
  group_id: 101

#Pods Service Account
serviceAccount:
  nameOverride: *svc_name
  roles:
    - read

readinessCheck:
  wait_for:
    - *mr_name
    - *dr_node_name

wait_for_job_container:
  containers:
    - 'dmaap-provisioning-job'
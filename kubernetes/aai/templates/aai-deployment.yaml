apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: aai-service
  namespace: "{{ .Values.nsPrefix }}-aai"
spec:
  selector:
    matchLabels:
      app: aai-service
  template:
    metadata:
      labels:
        app: aai-service
      name: aai-service
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
              "args": [
                  "--container-name",
                  "hbase"
              ],
              "command": [
                  "/root/ready.py"
              ],
              "env": [
                  {
                      "name": "NAMESPACE",
                      "valueFrom": {
                          "fieldRef": {
                              "apiVersion": "v1",
                              "fieldPath": "metadata.namespace"
                          }
                      }
                  }
              ],
              "image": "{{ .Values.image.readiness }}",
              "imagePullPolicy": "{{ .Values.pullPolicy }}",
              "name": "aai-service-readiness"
          }
          ]'
    spec:
      containers:
      - env:
        - name: AAI_REPO_PATH
          value: r/aai
        - name: AAI_CHEF_ENV
          value: simpledemo
        - name: AAI_CHEF_LOC
          value: /var/chef/aai-data/environments
        - name: docker_gitbranch
          value: release-1.0.0
        - name: DEBIAN_FRONTEND
          value: noninteractive
        - name: JAVA_HOME
          value: /usr/lib/jvm/java-8-openjdk-amd64
        image: {{ .Values.image.ajscAai }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: aai-service
        volumeMounts:
        - mountPath: /etc/ssl/certs/
          name: aai-service-certs
        - mountPath: /opt/aai/logroot/
          name: aai-service-logroot
        - mountPath: /var/chef/aai-config/
          name: aai-config
        - mountPath: /var/chef/aai-data/
          name: aai-data
        - mountPath: /var/log/onap
          name: aai-logs
        - mountPath: /opt/app/aai/bundleconfig/etc/logback.xml
          name: aai-logback
        ports:
        - containerPort: 8080
        - containerPort: 8443
        readinessProbe:
          tcpSocket:
            port: 8443
          initialDelaySeconds: 5
          periodSeconds: 10
      - image: {{ .Values.image.filebeat }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: filebeat-onap
        volumeMounts:
        - mountPath: /usr/share/filebeat/filebeat.yml
          name: filebeat-conf
        - mountPath: /var/log/onap
          name: aai-logs
        - mountPath: /usr/share/filebeat/data
          name: aai-data-filebeat
      volumes:
        - name: filebeat-conf
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/log/filebeat/logback/filebeat.yml
        - name: aai-logs
          emptyDir: {}
        - name: aai-data-filebeat
          emptyDir: {}
        - name: aai-logback
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/log/aai/ajsc-aai/logback.xml
        - name: aai-service-certs
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/aai/etc/ssl/certs/
        - name: aai-service-logroot
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/aai/opt/aai/logroot/
        - name: aai-config
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/aai/aai-config/
        - name: aai-data
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/aai/aai-data/
      restartPolicy: Always
      imagePullSecrets:
      - name: "{{ .Values.nsPrefix }}-docker-registry-key"

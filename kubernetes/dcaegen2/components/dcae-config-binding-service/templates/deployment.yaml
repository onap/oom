{{/*
#============LICENSE_START========================================================
# ================================================================================
# Copyright (c) 2019 AT&T Intellectual Property. All rights reserved.
# ================================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============LICENSE_END=========================================================
*/}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ include "common.release" . }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "common.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ include "common.release" . }}
    spec:
      initContainers:
        - name: {{ include "common.name" . }}-readiness
          image: {{ include "common.repository" . }}/{{ .Values.global.readinessImage }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          command:
            - /app/ready.py
          args:
            - --container-name
            - consul-server
            - --container-name
            - aaf-cm
            - "-t"
            - "15"
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: aaf_locator_fqdn
            value: dcae
        {{- if .Values.service.secure.enabled }}
        - name: init-tls
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          image: {{ .Values.global.tlsRepository }}/{{ .Values.global.tlsImage }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          resources: {}
          volumeMounts:
            - mountPath: /opt/app/osaaf
              name: tls-info
        {{ end  }}
      containers:
        {{- if .Values.service.secure.enabled }}
        - name: {{ include "common.name" . }}
          image: "{{ include "common.repository" . }}/{{ .Values.image }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          resources:
{{ include "common.resources" . | indent 12 }}
          ports:
          - containerPort: {{ .Values.service.secure.internalPort }}
          # disable liveness probe when breakpoints set in debugger
          # so K8s doesn't restart unresponsive container
          {{- if eq .Values.liveness.enabled true }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.secure.internalPort }}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          {{ end }}
          readinessProbe:
            httpGet:
              scheme: "HTTPS"
              path: {{ .Values.readiness.path }}
              port: {{ .Values.service.secure.internalPort }}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
          volumeMounts:
          - name: {{ include "common.fullname" . }}-logs
            mountPath: /opt/logs
          - name: tls-info
            mountPath: /opt/tls
          env:
            - name: CONSUL_HOST
              value: consul.{{ include "common.namespace" . }}
            - name: USE_HTTPS
              value: "1"
            - name: HTTPS_CERT_PATH
              value: "/opt/tls/cert.pem"
            - name: HTTPS_KEY_PATH
              value: "/opt/tls/key.pem"
        - name: {{ include "common.name" . }}-fb-onap
          image: "{{ .Values.global.loggingRepository }}/{{ .Values.global.loggingImage }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          volumeMounts:
          - name: {{ include "common.fullname" . }}-fb-conf
            mountPath: /usr/share/filebeat/filebeat.yml
            subPath: filebeat.yml
          - name: {{ include "common.fullname" . }}-data-fb
            mountPath: /usr/share/filebeat/data
          - name: {{ include "common.fullname" . }}-logs
            mountPath: /var/log/onap/config-binding-service
        {{ end }}
        {{- if .Values.service.insecure.enabled }}
        - name: {{ include "common.name" . }}-insecure
          image: "{{ include "common.repository" . }}/{{ .Values.image }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          resources:
{{ include "common.resources" . | indent 12 }}
          ports:
          - containerPort: {{ .Values.service.insecure.internalPort }}
          # disable liveness probe when breakpoints set in debugger
          # so K8s doesn't restart unresponsive container
          {{- if eq .Values.liveness.enabled true }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.insecure.internalPort }}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          {{ end }}
          readinessProbe:
            httpGet:
              scheme: "HTTP"
              path: {{ .Values.readiness.path }}
              port: {{ .Values.service.insecure.internalPort }}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
          volumeMounts:
          - name: {{ include "common.fullname" . }}-logs-i
            mountPath: /opt/logs
          env:
            - name: CONSUL_HOST
              value: consul.{{ include "common.namespace" . }}
        - name: {{ include "common.name" . }}-fb-onap-i
          image: "{{ .Values.global.loggingRepository }}/{{ .Values.global.loggingImage }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          volumeMounts:
          - name: {{ include "common.fullname" . }}-fb-conf
            mountPath: /usr/share/filebeat/filebeat.yml
            subPath: filebeat.yml
          - name: {{ include "common.fullname" . }}-data-fb-i
            mountPath: /usr/share/filebeat/data
          - name: {{ include "common.fullname" . }}-logs-i
            mountPath: /var/log/onap/config-binding-service
        {{ end }}
      volumes:
        - name: {{ include "common.fullname" . }}-fb-conf
          configMap:
            name: {{ include "common.release" . }}-cbs-filebeat-configmap
        {{- if .Values.service.secure.enabled }}
        - name: {{ include "common.fullname" . }}-data-fb
          emptyDir: {}
        - name:  {{ include "common.fullname" . }}-logs
          emptyDir: {}
        - name: tls-info
          emptyDir: {}
        {{ end }}
        {{- if .Values.service.insecure.enabled }}
        - name: {{ include "common.fullname" . }}-data-fb-i
          emptyDir: {}
        - name:  {{ include "common.fullname" . }}-logs-i
          emptyDir: {}
        {{ end }}

      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"

{
  "comments": [
    {
      "key": {
        "uuid": "75fb103a_4d96efa5",
        "filename": "kubernetes/common/common/templates/_service.tpl",
        "patchSetId": 8
      },
      "lineNbr": 55,
      "author": {
        "id": 4965
      },
      "writtenOn": "2020-04-03T22:35:43Z",
      "side": 1,
      "message": "never mentioned in the documentation above",
      "range": {
        "startLine": 55,
        "startChar": 29,
        "endLine": 55,
        "endChar": 60
      },
      "revId": "ce9416edafd15ba8f20a0e62b1609f13cca2e3e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11eb6c6d_27e5d8a7",
        "filename": "kubernetes/common/common/templates/_service.tpl",
        "patchSetId": 8
      },
      "lineNbr": 60,
      "author": {
        "id": 4965
      },
      "writtenOn": "2020-04-03T22:35:43Z",
      "side": 1,
      "message": "Don\u0027t you think that this will create a lot of mess in our charts?\n\nThink what we have now. Only 2 global values that has to be replaced if you want more than one onap instance in a single cluster. Every service decides whether to use prefix or prefixExt.\n\nAfter this change every service would need to specify nodePortPrefix as a value (number) which will result in absolute mess if you would like to have 2 onaps in single cluster.\n\nSo what I\u0027d suggest at bare minimum to make the service specific field templateable (if number use it if string execute tpl) so that someone may easily reference one of global values.\n\nBTW\nWhat\u0027s the goal of having a precedence between global prefix and global prefixExt? Are we ever going to have situation that global prefix is not defined?",
      "revId": "ce9416edafd15ba8f20a0e62b1609f13cca2e3e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0633c40_59e86086",
        "filename": "kubernetes/common/common/templates/_service.tpl",
        "patchSetId": 8
      },
      "lineNbr": 60,
      "author": {
        "id": 2319
      },
      "writtenOn": "2020-04-06T08:26:18Z",
      "side": 1,
      "message": "What\u0027s the situation today:\n* we have two \"prefix\" (302 and 304) that are currently named \"nodePortPrefix\" and \"nodePortPrefixExt\" in onap/values.yaml.\n* some service may uses these 2 values\n* most services are created by hand in ONAP.\n\nSo I wanted to make a template to have consistent (and them easier to upgrade when needed) service definition.\nIn order to take into account the above requirements, I need to (in order to be backward compatible with already used service definitions with these templates):\n* check if the service globally needs the \"Ext\" prefix\n* or if one of the port needs the \"Ext\" prefix\n\nIf yes, I use the override, the global or local version of Ext (we have an error here)\nIf not, I use the override, the global or local version of \"normal\".\n\n\nHonnestly, I don\u0027t see how we can do simpler, knowing the definition will be complicated only when nodeportext is used (at port level or service level). And portNodePortExt is a Boolean saying that we want to use nodePortPrefixExt and not noedePortPrefix.\n\n\nThe only simplification in code will be to have port level only feature.\n\n\nMaybe the name fooled you, I can replace $port.nodePortExt (L128) by $port.useNodePortExt and same for service?",
      "parentUuid": "11eb6c6d_27e5d8a7",
      "revId": "ce9416edafd15ba8f20a0e62b1609f13cca2e3e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}
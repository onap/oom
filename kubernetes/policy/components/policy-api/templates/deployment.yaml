{{/*
#  ============LICENSE_START=======================================================
#   Copyright (C) 2021-2024 Nordix Foundation.
#  ================================================================================
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#  ============LICENSE_END=========================================================
*/}}

apiVersion: apps/v1
kind: Deployment
metadata: {{- include "common.resourceMetadata" . | nindent 2 }}
spec:
  selector: {{- include "common.selectors" . | nindent 4 }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata: {{- include "common.templateMetadata" . | nindent 6 }}
    spec:
      {{ include "common.podSecurityContext" . | indent 6 | trim }}
      initContainers:
        - command:
          - /app/ready.py
          args:
          - --job-name
{{ if .Values.global.mariadbGalera.useInPolicy }}
          - {{ include "common.release" . }}-policy-galera-migrator-config
{{ else }}
          - {{ include "common.release" . }}-policy-pg-migrator-config
{{ end }}
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: {{ include "repositoryGenerator.image.readiness" . }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          {{ include "common.containerSecurityContext" . | indent 10 | trim }}
          name: {{ include "common.name" . }}-readiness
          resources:
            limits:
              cpu: "100m"
              memory: "500Mi"
            requests:
              cpu: "3m"
              memory: "20Mi"
        - command:
          - sh
          args:
          - -c
          - "cd /config-input && for PFILE in `ls -1`; do envsubst <${PFILE} >/config/${PFILE}; done"
          env:
          - name: SQL_USER
            {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "db-creds" "key" "login") | indent 12 }}
          - name: SQL_PASSWORD
            {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "db-creds" "key" "password") | indent 12 }}
          - name: RESTSERVER_USER
            {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "restserver-creds" "key" "login") | indent 12 }}
          - name: RESTSERVER_PASSWORD
            {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "restserver-creds" "key" "password") | indent 12 }}
          volumeMounts:
          - mountPath: /config-input
            name: apiconfig
          - mountPath: /config
            name: apiconfig-processed
          image: {{ include "repositoryGenerator.image.envsubst" . }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          {{ include "common.containerSecurityContext" . | indent 10 | trim }}
          name: {{ include "common.name" . }}-update-config
      containers:
        - name: {{ include "common.name" . }}
          {{ include "common.containerSecurityContext" . | indent 10 | trim }}
          image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.image }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          command: ["/opt/app/policy/api/bin/policy-api.sh"]
          args: ["/opt/app/policy/api/etc/mounted/apiParameters.yaml"]
          ports: {{ include "common.containerPorts" . | nindent 12  }}
          # disable liveness probe when breakpoints set in debugger
          # so K8s doesn't restart unresponsive container
          {{- if eq .Values.liveness.enabled true }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          {{ end -}}
          readinessProbe:
            httpGet:
              path: {{ .Values.readiness.api }}
              port: {{ .Values.service.internalPort }}
              httpHeaders:
                - name: Authorization
                  value: Basic {{ printf "%s:%s" .Values.restServer.user .Values.restServer.password | b64enc }}
              scheme: HTTP
            successThreshold: {{ .Values.readiness.successThreshold }}
            failureThreshold: {{ .Values.readiness.failureThreshold }}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.readiness.timeout }}
          volumeMounts:
          - name: logs
            mountPath: /var/log/onap
          - name: empty-dir
            mountPath: /tmp
            subPath: tmp-dir
          - mountPath: /opt/app/policy/api/etc/logback.xml
            subPath: logback.xml
            name: apiconfig-processed
          - mountPath: /opt/app/policy/api/etc/mounted
            name: apiconfig-processed
          resources: {{ include "common.resources" . | nindent 12 }}
        {{- if .Values.nodeSelector }}
        nodeSelector:
{{ toYaml .Values.nodeSelector | indent 10 }}
        {{- end -}}
        {{- if .Values.affinity }}
        affinity:
{{ toYaml .Values.affinity | indent 10 }}
        {{- end }}
      serviceAccountName: {{ include "common.fullname" (dict "suffix" "read" "dot" . )}}
      volumes:
        - name: apiconfig
          configMap:
            name: {{ include "common.fullname" . }}-configmap
            defaultMode: 0755
        - name: apiconfig-processed
          emptyDir:
            medium: Memory
            sizeLimit: 64Mi
        - name: empty-dir
          emptyDir:
            sizeLimit: {{ .Values.dirSizes.emptyDir.sizeLimit }}
        - name: logs
          emptyDir:
            sizeLimit: {{ .Values.dirSizes.logDir.sizeLimit }}
      {{- include "common.imagePullSecrets" . | nindent 6 }}

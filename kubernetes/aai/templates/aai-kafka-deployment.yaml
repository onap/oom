apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: aai-kafka
  namespace: "{{ .Values.nsPrefix }}-aai"
spec:
  selector:
    matchLabels:
      app: aai-kafka
  template:
    metadata:
      labels:
        app: aai-kafka
      name: aai-kafka
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
              "args": [
                  "--container-name",
                  "aai-zookeeper"
              ],
              "command": [
                  "/root/ready.py"
              ],
              "env": [
                  {
                      "name": "NAMESPACE",
                      "valueFrom": {
                          "fieldRef": {
                              "apiVersion": "v1",
                              "fieldPath": "metadata.namespace"
                          }
                      }
                  }
              ],
              "image": "{{ .Values.image.readiness }}",
              "imagePullPolicy": "{{ .Values.pullPolicy }}",
              "name": "aai-kafka-readiness"
          }
          ]'
    spec:
      containers:
      - image: "{{ .Values.image.kafkaImage }}:{{ .Values.image.kafkaVersion }}"
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: aai-kafka
        ports:
        - containerPort: 9092
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 5
          periodSeconds: 10
        env:
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "aai-zookeeper.{{ .Values.nsPrefix }}-aai:2181"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: "aai-kafka"
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_PORT
          value: "9092"
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: docker-socket
        - mountPath: /kafka
          name: kafka-data
        - mountPath: /start-kafka.sh
          name: start-kafka
      restartPolicy: Always
      volumes:
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: kafka-data
        hostPath:
          path: "/dockerdata-nfs/{{ .Values.nsPrefix }}/aai/message-router/dcae-startup-vm-message-router/docker_files/data-kafka/"
      - name: start-kafka
        hostPath:
          path: "/dockerdata-nfs/{{ .Values.nsPrefix }}/aai/message-router/dcae-startup-vm-message-router/docker_files/start-kafka.sh"
      imagePullSecrets:
      - name: "{{ .Values.nsPrefix }}-docker-registry-key"

# ================================ LICENSE_START =============================
# ============================================================================
# Copyright (c) 2021 AT&T Intellectual Property. All rights reserved.
# ============================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ================================= LICENSE_END ==============================

#################################################################
# Global Configuration Defaults.
#################################################################
global:
  nodePortPrefix: 302
  nodePortPrefixExt: 304
  centralizedLoggingEnabled: true

#################################################################
# Filebeat Configuration Defaults.
#################################################################
filebeatConfig:
  logstashServiceName: log-ls
  logstashPort: 5044

#################################################################
# Secrets Configuration.
#################################################################
secrets:
  - uid: &aafCredsUID aafcreds
    type: basicAuth
    login: '{{ .Values.aafCreds.identity }}'
    password: '{{ .Values.aafCreds.password }}'
    passwordPolicy: required
  - uid: &aaiCredsUID aaicreds
    type: basicAuth
    login: '{{ .Values.aaiCreds.username }}'
    password: '{{ .Values.aaiCreds.password }}'
    passwordPolicy: required


#################################################################
# InitContainer Images.
#################################################################
tlsImage: onap/org.onap.dcaegen2.deployments.tls-init-container:2.1.0
consulLoaderImage: onap/org.onap.dcaegen2.deployments.consul-loader-container:1.1.1

#################################################################
# Application Configuration Defaults.
#################################################################
# Application Image
image: onap/org.onap.dcaegen2.services.components.bbs-event-processor:2.1.1
pullPolicy: Always

# Log directory where logging sidecar should look for log files
# if path is set to null sidecar won't be deployed in spite of
# global.centralizedLoggingEnabled setting.
log:
  path: /opt/app/bbs-event-processor/logs
logConfigMapNamePrefix: '{{ include "common.fullname" . }}'

# Directory where TLS certs should be stored
# if absent, no certs will be retrieved and stored
certDirectory: /opt/app/bbs-event-processor/etc/cert/

# TLS role -- set to true if microservice acts as server
# If true, an init container will retrieve a server cert
# and key from AAF and mount them in certDirectory.
tlsServer: true

# Dependencies
readinessCheck:
  wait_for:
    - dcae-config-binding-service
    - aaf-cm

# Probe Configuration
readiness:
  initialDelaySeconds: 120
  periodSeconds: 180
  timeoutSeconds: 5
  path: /heartbeat
  scheme: HTTP
  port: 8100


# Service Configuration
service:
  type: ClusterIP
  name: dcae-bbs-eventprocessor
  ports:
    - name: https
      port: 8100
      port_protocol: http

# AAF Credentials
aafCreds:
  identity: dcae@dcae.onap.org
  password: demo123456!

# AAI Credentials
aaiCreds:
  username: AAI
  password: AAI

credentials:
- name: AAF_USERNAME
  uid: *aafCredsUID
  key: login
- name: AAF_PASSWORD
  uid: *aafCredsUID
  key: password
- name: AAI_USERNAME
  uid: *aaiCredsUID
  key: login
- name: AAI_PASSWORD
  uid: *aaiCredsUID
  key: password


# Initial Application Configuration
applicationConfig:
  streams_subscribes:
    pnf_reregistration:
      type: message_router
      aaf_username: ${AAF_USERNAME}
      aaf_password: ${AAF_PASSWORD}
      dmaap_info:
        topic_url: https:message-router:3905/events/unauthenticated.PNF_UPDATE
    cpe_authentication:
      type: message_router
      aaf_username: ${AAF_USERNAME}
      aaf_password: ${AAF_PASSWORD}
      dmaap_info:
        topic_url: https:message-router:3905/events/unauthenticated.CPE_AUTHENTICATION
  streams_publishes:
    close_loop:
      type: message_router
      aaf_username: ${AAF_USERNAME}
      aaf_password: ${AAF_PASSWORD}
      dmaap_info:
        topic_url: https:message-router:3905/events/unauthenticated.DCAE_CL_OUTPUT
  dmaap.protocol: https
  dmaap.contentType: application/json
  dmaap.consumer.consumerId: c12
  dmaap.consumer.consumerGroup: OpenDcae-c12
  dmaap.messageLimit: -1
  dmaap.timeoutMs: -1
  aai.host: aai.onap
  aai.port: 8443
  aai.protocol: https
  aai.username: ${AAI_USERNAME}
  aai.password: ${AAF_PASSWORD}
  aai.aaiIgnoreSslCertificateErrors: true
  application.pipelinesPollingIntervalSec: 25
  application.pipelinesTimeoutSec: 15
  application.cbsPollingIntervalSec: 120
  application.policyVersion: 1.0.0.5
  application.clTargetType: VM
  application.clEventStatus: ONSET
  application.clVersion: 1.0.2
  application.clTarget: vserver.vserver-name
  application.clOriginator: DCAE-BBS-ep
  application.reregistration.policyScope: policyScopeReReg
  application.reregistration.clControlName: clControlNameReReg
  application.cpe.authentication.policyScope: policyScopeCpeAuth
  application.cpe.authentication.clControlName: clControlNameCpeAuth
  application.reregistration.configKey: pnf_reregistration
  application.cpeAuth.configKey: cpe_authentication
  application.closeLoop.configKey: close_loop
  application.loggingLevel: INFO
  application.ssl.keyStorePath: "/opt/app/bbs-event-processor/etc/cert/cert.jks"
  application.ssl.keyStorePasswordPath: "/opt/app/bbs-event-processor/etc/cert/jks.pass"
  application.ssl.trustStorePath: "/opt/app/bbs-event-processor/etc/cert/trust.jks"
  application.ssl.trustStorePasswordPath: "/opt/app/bbs-event-processor/etc/cert/trust.pass"
  application.ssl.enableAaiCertAuth: true
  application.ssl.enableDmaapCertAuth: true

# Resource Limit Flavor -By Default Using Small
flavor: small

# Segregation for Different Environment (Small and Large)
resources:
  small:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 1
      memory: 1Gi
  large:
    limits:
      cpu: 2
      memory: 2Gi
    requests:
      cpu: 2
      memory: 2Gi
  unlimited: {}

#Pods Service Account
serviceAccount:
  nameOverride: dcae-bbs-eventprocessor-ms
  roles:
    - read

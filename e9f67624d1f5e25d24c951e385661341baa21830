{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1025e69f_7d8cc023",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 5236
      },
      "writtenOn": "2024-07-11T08:12:22Z",
      "side": 1,
      "message": "Some, remarks from my end. I do not have environment to test it now but as soon as I get one I will give it a try. \n\nMain thing that bothers mr is the complexity to configure policies and roles. Ideally there should be list of onap services that are enabled and based on that, policies and groups are autogenerated, however I am not sure that is even doable, we can takl on next oom meeting\n\nRegards,",
      "revId": "e9f67624d1f5e25d24c951e385661341baa21830",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f82d546_2e540020",
        "filename": "kubernetes/authentication/components/keycloak-config-cli/templates/job.yaml",
        "patchSetId": 23
      },
      "lineNbr": 48,
      "author": {
        "id": 5236
      },
      "writtenOn": "2024-07-11T08:12:22Z",
      "side": 1,
      "message": "don\u0027t we miss here a second container that kills istio container? otherwise it runs for ever",
      "revId": "e9f67624d1f5e25d24c951e385661341baa21830",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28a30aaa_653faeb4",
        "filename": "kubernetes/authentication/components/oauth2-proxy/values.yaml",
        "patchSetId": 23
      },
      "lineNbr": 382,
      "author": {
        "id": 5236
      },
      "writtenOn": "2024-07-11T08:12:22Z",
      "side": 1,
      "message": "perhaps by default we should have here also:\nredis.networkPolicy.enabled\u003dfalse\n\nso network policy is not created, it may clash with any other internal security policies, like the ones used from istio",
      "revId": "e9f67624d1f5e25d24c951e385661341baa21830",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94d7e7bc_030d8af6",
        "filename": "kubernetes/authentication/resources/oauth2_proxy.cfg",
        "patchSetId": 23
      },
      "lineNbr": 4,
      "author": {
        "id": 5236
      },
      "writtenOn": "2024-07-11T08:12:22Z",
      "side": 1,
      "message": "client_secret and cookie_secret should be removed, it is already passed via env variables that comes from secret.\n\nsettings here have lower priority for oauth2-proxy and also this is plain CM so credentials are less secure",
      "revId": "e9f67624d1f5e25d24c951e385661341baa21830",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65a256d5_9f6af00a",
        "filename": "kubernetes/authentication/templates/authorizationpolicy.yaml",
        "patchSetId": 23
      },
      "lineNbr": 53,
      "author": {
        "id": 5236
      },
      "writtenOn": "2024-07-11T08:12:22Z",
      "side": 1,
      "message": "I wonder if this will apply when api gw is used..\n---\nnamespace: istio-ingress\nselector:\n  matchLabels:\n    istio: ingress\n---\nPerhaps this should be parametrisied",
      "revId": "e9f67624d1f5e25d24c951e385661341baa21830",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8168ea21_a2db1e53",
        "filename": "kubernetes/authentication/templates/requestauthentication.yaml",
        "patchSetId": 23
      },
      "lineNbr": 30,
      "author": {
        "id": 5236
      },
      "writtenOn": "2024-07-11T08:12:22Z",
      "side": 1,
      "message": "this also should have: \n - forwardOriginalToken: true",
      "revId": "e9f67624d1f5e25d24c951e385661341baa21830",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab87b2a3_739e4f38",
        "filename": "kubernetes/authentication/values.yaml",
        "patchSetId": 23
      },
      "lineNbr": 34,
      "author": {
        "id": 5236
      },
      "writtenOn": "2024-07-11T08:12:22Z",
      "side": 1,
      "message": "regarding exceptions, this will be services that we do not expect to protect with authorization. \n\nKeycloak is mandatory - as we need to access it before we can get authentication token. \n\nminio - may be removed (I used it for backup with velero that is not a part of onap). \n\nuui-server should not be here, in my example uui server was allowed only for the CORS reasons (only http methods OPTIONS were allowed) that is not needed in upstream onap (we stoped using it as well) \n\nportal-ui as per my understanding has own keycloak client, so similary to keycloak it can protect itself, potentially it can be reraftored to use same token as rest of applications are using.",
      "revId": "e9f67624d1f5e25d24c951e385661341baa21830",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b856b744_2fcc60a1",
        "filename": "kubernetes/authentication/values.yaml",
        "patchSetId": 23
      },
      "lineNbr": 58,
      "author": {
        "id": 5236
      },
      "writtenOn": "2024-07-11T08:12:22Z",
      "side": 1,
      "message": "this potentially may be autogenerated based on master password. There was a secom requirement not to hardcode passwords some time ago",
      "revId": "e9f67624d1f5e25d24c951e385661341baa21830",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "deef1f6b_572aec9c",
        "filename": "kubernetes/authentication/values.yaml",
        "patchSetId": 23
      },
      "lineNbr": 61,
      "author": {
        "id": 5236
      },
      "writtenOn": "2024-07-11T08:12:22Z",
      "side": 1,
      "message": "this potentially may be autogenerated based on master password. There was a secom requirement not to hardcode passwords some time ago",
      "revId": "e9f67624d1f5e25d24c951e385661341baa21830",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "838d7781_c165672b",
        "filename": "kubernetes/authentication/values.yaml",
        "patchSetId": 23
      },
      "lineNbr": 171,
      "author": {
        "id": 5236
      },
      "writtenOn": "2024-07-11T08:12:22Z",
      "side": 1,
      "message": "please remove Amartus emials :)",
      "revId": "e9f67624d1f5e25d24c951e385661341baa21830",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f074bec_ed58ab03",
        "filename": "kubernetes/authentication/values.yaml",
        "patchSetId": 23
      },
      "lineNbr": 325,
      "author": {
        "id": 5236
      },
      "writtenOn": "2024-07-11T08:12:22Z",
      "side": 1,
      "message": "I have a problem figuring out how to autogenerate all this services, like get a list of enabled ONAP components and generate all this roles (access or assignable) and access policies.\n\nAlso it would be nice to have a way to inject to the setup some custom tools like kibana/grafana\n\nPerhaps components removed from ONAP can be also removed here, like msb",
      "revId": "e9f67624d1f5e25d24c951e385661341baa21830",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum \u0027Code-Review\u0027 vote from a non-uploader is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e9f67624d1f5e25d24c951e385661341baa21830",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ONAP Required GHA\u0027 and one other CI or committer that is a non-uploader is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003donap.required.gha AND label:Verified\u003dMAX,count\u003e\u003d2 AND label:Verified\u003dMAX,user\u003dnon_uploader AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=onap.required.gha AND label:Verified=MAX,count>=2 AND label:Verified=MAX,user=non_uploader AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=onap.required.gha","label:Verified=MAX,user=non_uploader","label:Verified=MAX,count>=2"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e9f67624d1f5e25d24c951e385661341baa21830",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}
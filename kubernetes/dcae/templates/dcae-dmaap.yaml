apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dmaap
  namespace: "{{ .Values.nsPrefix }}-dcae"
spec:
  selector:
    matchLabels:
      app: dmaap
  template:
    metadata:
      labels:
        app: dmaap
      name: dmaap
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
              "args": [
                  "--container-name",
                  "kafka",
                  "--container-name",
                  "zookeeper"
              ],
              "command": [
                  "/root/ready.py"
              ],
              "env": [
                  {
                      "name": "NAMESPACE",
                      "valueFrom": {
                          "fieldRef": {
                              "apiVersion": "v1",
                              "fieldPath": "metadata.namespace"
                          }
                      }
                  }
              ],
              "image": "{{ .Values.image.readiness }}",
              "imagePullPolicy": "{{ .Values.pullPolicy }}",
              "name": "dmaap-readiness"
          }
          ]'
    spec:
      containers:
      - image: {{ .Values.image.dmaap }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: dmaap
        ports:
        - containerPort: 3904
        - containerPort: 3905
        readinessProbe:
          tcpSocket:
            port: 3904
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - mountPath: /appl/dmaapMR1/bundleconfig/etc/appprops/MsgRtrApi.properties
          name: appprops
        - mountPath: /appl/dmaapMR1/etc/cadi.properties
          name: cadi
        - mountPath: /appl/dmaapMR1/etc/keyfile
          name: mykey
        - mountPath: /tmp/policy-install/config
          name: pe
        - mountPath: /var/log/onap
          name: policy-logs
        - mountPath:  /tmp/logback.xml
          name: policy-logback
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "sleep 60; cp -f /tmp/logback.xml /opt/app/policy/servers/pypdp/webapps/PyPDPServer/WEB-INF/classes/logback.xml"]
      - image: {{ .Values.image.filebeat }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: filebeat-onap
        volumeMounts:
        - mountPath: /usr/share/filebeat/filebeat.yml
          name: filebeat-conf
        - mountPath: /var/log/onap
          name: policy-logs
        - mountPath: /usr/share/filebeat/data
          name: policy-data-filebeat
      restartPolicy: Always
      volumes:
      - name: appprops
        hostPath:
          path: /dockerdata-nfs/{{ .Values.nsPrefix }}/dcae/message-router/dmaap/MsgRtrApi.properties
      - name: cadi
        hostPath:
          path: /dockerdata-nfs/{{ .Values.nsPrefix }}/dcae/message-router/dmaap/cadi.properties
      - name: mykey
        hostPath:
          path: /dockerdata-nfs/{{ .Values.nsPrefix }}/dcae/message-router/dmaap/mykey
        - name: filebeat-conf
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/log/filebeat/logback/filebeat.yml
        - name: policy-logs
          emptyDir: {}
        - name: policy-data-filebeat
          emptyDir: {}
        - name: policy-logback
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/log/policy/pypdpserver/logback.xml
        - name: pe
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/policy/opt/policy/config/pe/
      imagePullSecrets:
      - name: "{{ .Values.nsPrefix }}-docker-registry-key"

# Copyright Â© 2018 Amdocs, Bell Canada, AT&T
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The following info parameters are being referenced by ajsc6
info.build.artifact=aai-resources
info.build.name=resources
info.build.description=Resources Microservice
info.build.version=1.3.0

spring.application.name=aai-resources
spring.jersey.type=filter

server.contextPath=/
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration

spring.profiles.active={{ .Values.global.config.profiles.active }}
spring.jersey.application-path=${schema.uri.base.path}
#The max number of active threads in this pool
server.tomcat.max-threads=200
#The minimum number of threads always kept alive
server.tomcat.min-Spare-Threads=25
#The number of milliseconds before an idle thread shutsdown, unless the number of active threads are less or equal to minSpareThreads
server.tomcat.max-idle-time=60000

# If you get an application startup failure that the port is already taken
# If thats not it, please check if the key-store file path makes sense
server.local.startpath=aai-resources/src/main/resources/
server.basic.auth.location=${server.local.startpath}etc/auth/realm.properties

server.port=8447
server.ssl.enabled-protocols=TLSv1.1,TLSv1.2
server.ssl.key-store=${server.local.startpath}/etc/auth/{{ .Values.global.config.keystore.filename }}
server.ssl.key-store-password=password({{ .Values.global.config.keystore.passwd }})
server.ssl.trust-store=${server.local.startpath}/etc/auth/{{ .Values.global.config.truststore.filename }}
server.ssl.trust-store-password=password({{ .Values.global.config.truststore.passwd }})
server.ssl.client-auth=want
server.ssl.key-store-type=JKS

# JMS bind address host port
jms.bind.address=tcp://localhost:61647
dmaap.ribbon.listOfServers=message-router.{{.Release.Namespace}}:3905
dmaap.ribbon.transportType=https

# Schema related attributes for the oxm and edges
# Any additional schema related attributes should start with prefix schema
schema.configuration.location=N/A
schema.source.name={{ .Values.global.config.schema.source.name }}
schema.nodes.location=${server.local.startpath}/schema/${schema.source.name}/oxm/
schema.edges.location=${server.local.startpath}/schema/${schema.source.name}/dbedgerules/

schema.ingest.file=${server.local.startpath}/application.properties

# Schema Version Related Attributes

schema.uri.base.path={{ .Values.global.config.schema.uri.base.path }}
# Lists all of the versions in the schema
schema.version.list={{ .Values.global.config.schema.version.list }}
# Specifies from which version should the depth parameter to default to zero
schema.version.depth.start={{ .Values.global.config.schema.version.depth }}
# Specifies from which version should the related link be displayed in response payload
schema.version.related.link.start={{ .Values.global.config.schema.version.related.link }}

# Specifies from which version should the client see only the uri excluding host info
# Before this version server base will also be included
schema.version.app.root.start={{ .Values.global.config.schema.version.app.root }}
# Specifies from which version should the namespace be changed
schema.version.namespace.change.start={{ .Values.global.config.schema.version.namespace.change }}
# Specifies from which version should the client start seeing the edge label in payload
schema.version.edge.label.start={{ .Values.global.config.schema.version.edge.label }}
# Specifies the version that the application should default to
schema.version.api.default={{ .Values.global.config.schema.version.api.default }}

schema.translator.list={{ .Values.global.config.schema.translator.list }}
schema.service.base.url=https://aai-schema-service.{{ include "common.namespace" . }}:8452/aai/schema-service/v1/
schema.service.nodes.endpoint=nodes?version=
schema.service.edges.endpoint=edgerules?version=
schema.service.versions.endpoint=versions
schema.service.client={{ .Values.global.config.schema.service.client }}

schema.service.ssl.key-store=${server.local.startpath}/etc/auth/{{ .Values.global.config.keystore.filename }}
schema.service.ssl.trust-store=${server.local.startpath}/etc/auth/{{ .Values.global.config.truststore.filename }}
schema.service.ssl.key-store-password=password({{ .Values.global.config.keystore.passwd }})
schema.service.ssl.trust-store-password=password({{ .Values.global.config.truststore.passwd }})

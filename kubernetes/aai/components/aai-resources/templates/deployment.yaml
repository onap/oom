{{/*
# Copyright (c) 2017 Amdocs, Bell Canada
# Modifications Copyright (c) 2018 AT&T
# Modifications Copyright (c) 2020 Nokia
# Modifications Copyright (c) 2021 Orange
# Modifications Copyright Â© 2023 Nordix Foundation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    app.kubernetes.io/name: {{ include "common.name" . }}
    {{- if .Chart.AppVersion }}
    version: "{{ .Chart.AppVersion | replace "+" "_" }}"
    {{- else }}
    version: "{{ .Chart.Version | replace "+" "_" }}"
    {{- end }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ include "common.release" . }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  minReadySeconds: {{ .Values.minReadySeconds }}
  strategy:
    type: {{ .Values.updateStrategy.type }}
    rollingUpdate:
      maxUnavailable: {{ .Values.updateStrategy.maxUnavailable }}
      maxSurge: {{ .Values.updateStrategy.maxSurge }}
  selector:
    matchLabels:
      app: {{ include "common.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ include "common.release" . }}
        app.kubernetes.io/name: {{ include "common.name" . }}
        {{- if .Chart.AppVersion }}
        version: "{{ .Chart.AppVersion | replace "+" "_" }}"
        {{- else }}
        version: "{{ .Chart.Version | replace "+" "_" }}"
        {{- end }}
      name: {{ include "common.name" . }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- if .Values.global.msbEnabled }}
        {{ $values := .Values }}
        msb.onap.org/service-info: '[
        {{- range $api_endpoint := $values.aai_enpoints -}}
          {{- range $api_version := $values.api_list }}
          {
              "serviceName": "_{{ $api_endpoint.name }}",
              "version": "v{{ $api_version }}",
              "url": "/aai/v{{ $api_version }}/{{ $api_endpoint.url }}",
              "protocol": "REST",
              "port": "8447",
              "enable_ssl": true,
              "lb_policy":"ip_hash",
              "visualRange": "1",
              "path": "/aai/v{{ $api_version }}/{{ $api_endpoint.url }}"
          },
          {
              "serviceName": "{{ $api_endpoint.name }}",
              "version": "v{{ $api_version }}",
              "url": "/aai/v{{ $api_version }}/{{ $api_endpoint.url }}",
              "protocol": "REST",
              "port": "8447",
              "enable_ssl": true,
              "lb_policy":"ip_hash",
              "visualRange": "1"
          },
          {{- end }}
        {{- end }}
          ]'
      {{- end }}
    spec:
      hostname: aai-resources
      terminationGracePeriodSeconds: {{ .Values.service.terminationGracePeriodSeconds }}
      initContainers:
      - name: {{ include "common.name" . }}-readiness
        command:
        - /app/ready.py
        args:
        {{- if .Values.global.jobs.migration.enabled }}
        - --job-name
        - {{ include "common.release" . }}-aai-graphadmin-migration
        {{- else }}
          {{- if .Values.global.jobs.createSchema.enabled  }}
        - --job-name
        - {{ include "common.release" . }}-aai-graphadmin-create-db-schema
          {{- else }}
        - --service-name
        - {{ .Values.global.cassandra.serviceName }}
        - --service-name
        - aai-schema-service
          {{- end }}
        {{- end }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: {{ include "repositoryGenerator.image.readiness" . }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        resources:
          limits:
            cpu: "100m"
            memory: "500Mi"
          requests:
            cpu: "3m"
            memory: "20Mi"
      containers:
      - name: {{ include "common.name" . }}
        image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.image }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        env:
        {{- if .Values.config.env }}
        {{- range $key,$value := .Values.config.env }}
        - name: {{ $key | upper | quote}}
          value: {{ $value | quote}}
        {{- end }}
        {{- end }}
        {{- if .Values.config.profiling.enabled }}
        - name: PRE_JVM_ARGS
          value: '{{ join " " .Values.config.profiling.args }}'
        {{- end }}
        {{- if .Values.config.debug.enabled }}
        - name: POST_JVM_ARGS
          value: {{ .Values.config.debug.args | quote }}
        {{- end }}
        - name: LOCAL_USER_ID
          value: {{ .Values.global.config.userId | quote }}
        - name: LOCAL_GROUP_ID
          value: {{ .Values.global.config.groupId | quote }}
        - name: INTERNAL_PORT_1
          value: {{ .Values.service.resourcesPort | quote }}
        - name: INTERNAL_PORT_2
          value: {{ .Values.service.debugPort | quote }}
        - name: INTERNAL_PORT_3
          value: {{ .Values.service.metricsPort | quote }}
        - name: BOOTSTRAP_SERVERS
          value: {{ include "common.release" . }}-strimzi-kafka-bootstrap:9092
        - name: JAAS_CONFIG
          valueFrom:
            secretKeyRef:
              name: {{ include "common.release" . }}-{{ .Values.global.aaiKafkaUser }}
              key: sasl.jaas.config
        volumeMounts:
        - mountPath: /opt/app/aai-resources/resources/etc/appprops/janusgraph-realtime.properties
          name: {{ include "common.fullname" . }}-config
          subPath: janusgraph-realtime.properties
        - mountPath: /opt/app/aai-resources/resources/etc/appprops/janusgraph-cached.properties
          name: {{ include "common.fullname" . }}-config
          subPath: janusgraph-cached.properties
        - mountPath: /opt/app/aai-resources/resources/etc/appprops/aaiconfig.properties
          name: {{ include "common.fullname" . }}-config
          subPath: aaiconfig.properties
        - mountPath: /opt/aai/logroot/AAI-RES
          name: logs
        - mountPath: /opt/app/aai-resources/resources/logback.xml
          name: {{ include "common.fullname" . }}-config
          subPath: logback.xml
        - mountPath: /opt/app/aai-resources/resources/localhost-access-logback.xml
          name: {{ include "common.fullname" . }}-config
          subPath: localhost-access-logback.xml
        - mountPath: /opt/app/aai-resources/resources/etc/auth/realm.properties
          name: {{ include "common.fullname" . }}-config
          subPath: realm.properties
        - mountPath: /opt/app/aai-resources/resources/application.properties
          name: {{ include "common.fullname" . }}-config
          subPath: application.properties
        - mountPath: /opt/app/aai-resources/resources/application-keycloak.properties
          name: {{ include "common.fullname" . }}-config
          subPath: application-keycloak.properties
        ports:
        - containerPort: {{ .Values.service.resourcesPort }}
          name: {{ .Values.service.resourcesPortName }}
        {{- if .Values.config.debug.enabled }}
        - containerPort: {{ .Values.service.debugPort }}
          name: {{ .Values.service.debugPortName }}
        {{- end }}
        - containerPort: {{ .Values.service.metricsPort }}
          name: {{ .Values.service.metricsPortName }}
        {{- if .Values.config.profiling.enabled }}
        - containerPort: {{ .Values.service.profilingPort }}
          name: {{ .Values.service.profilingPortName }}
        {{- end }}
        lifecycle:
          # wait for active requests (long-running tasks) to be finished
          # Before the SIGTERM is invoked, Kubernetes exposes a preStop hook in the Pod.
          preStop:
            exec:
              command:
                - sh
                - -c
                - |
                  while (netstat -an | grep ESTABLISHED | grep -e $INTERNAL_PORT_1)
                  do sleep 3
                  done
        # disable liveness probe when
        # debugging.enable=true or profiling.enabled=true
        {{- if and .Values.liveness.enabled (not (or .Values.config.debug.enabled .Values.config.profiling.enabled)) }}
        livenessProbe:
          httpGet:
            path: /aai/util/echo?action=checkDB
            port: {{ .Values.service.resourcesPort }}
            scheme: HTTP
            httpHeaders:
            - name: X-FromAppId
              value: LivenessCheck
            - name: X-TransactionId
              value: LiveCheck_TID
            - name: Accept
              value: application/json
          initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.liveness.periodSeconds }}
        {{- end }}
        readinessProbe:
          httpGet:
            path: /aai/util/echo?action=checkDB
            port: {{ .Values.service.resourcesPort }}
            scheme: HTTP
            httpHeaders:
            - name: X-FromAppId
              value: ReadinessCheck
            - name: X-TransactionId
              value: ReadinessCheck_TID
            - name: Accept
              value: application/json
          initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.readiness.periodSeconds }}
        resources: {{ include "common.resources" . | nindent 10 }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{ toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{ toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      # side car containers
      {{ include "common.log.sidecar" . | nindent 6 }}
      serviceAccountName: {{ include "common.fullname" (dict "suffix" "read" "dot" . )}}
      volumes:
      - name: logs
        emptyDir: {}
      {{ include "common.log.volumes" (dict "dot" . "configMapNamePrefix" (tpl .Values.logConfigMapNamePrefix .)) | nindent 6 }}
      - name: {{ include "common.fullname" . }}-config
        configMap:
          name: {{ include "common.fullname" . }}
      restartPolicy: {{ .Values.restartPolicy }}
      {{- include "common.imagePullSecrets" . | nindent 6 }}

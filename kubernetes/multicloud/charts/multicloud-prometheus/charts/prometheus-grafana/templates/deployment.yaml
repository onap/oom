{{/*
# Copyright 2018 Intel Corporation, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}

{{- if .Values.global.grafana.enabled -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ include "common.release" . }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "common.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ include "common.release" . }}
      name: {{ include "common.name" . }}
    spec:
      {{- if .Values.dashboards }}
      initContainers:
      - name: {{ include "common.name" . }}-download-dashboards
        image: {{ include "repositoryGenerator.dockerHubRepository" . }}/{{ .Values.downloadDashboardsImage.repository }}:{{ .Values.downloadDashboardsImage.tag }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        command: ["sh", "/etc/grafana/download_dashboards.sh"]
        volumeMounts:
          - name: {{ include "common.fullname" . }}-config
            mountPath: "/etc/grafana/download_dashboards.sh"
            subPath: download_dashboards.sh
          - name: {{ include "common.fullname" . }}-storage
            mountPath: {{ .Values.persistence.containerMountPath }}
      {{- end }}

      containers:
      - name: {{ include "common.name" . }}
        image: {{ include "repositoryGenerator.dockerHubRepository" . }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
          protocol: TCP
        {{- if .Values.liveness.enabled }}
        livenessProbe:
          httpGet:
            path: /api/health
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.liveness.periodSeconds }}
          timeoutSeconds: {{ .Values.liveness.timeoutSeconds }}
        {{ end -}}
        {{- if .Values.readiness.enabled }}
        readinessProbe:
          httpGet:
            path: /api/health
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.readiness.periodSeconds }}
          timeoutSeconds: {{ .Values.readiness.timeoutSeconds }}
        {{ end -}}
        volumeMounts:
          - name: {{ include "common.fullname" . }}-config
            mountPath: "/etc/grafana/grafana.ini"
            subPath: grafana.ini
          - name: {{ include "common.fullname" . }}-storage
            mountPath: {{ .Values.persistence.containerMountPath }}
          {{- if .Values.dashboards }}
          {{- range $provider, $dashboards := .Values.dashboards }}
          {{- range $key, $value := $dashboards }}
          {{- if hasKey $value "json" }}
          - name: {{ include "common.fullname" $ }}-dashboards-{{ $provider }}
            mountPath: "/var/lib/grafana/dashboards/{{ $provider }}/{{ $key }}.json"
            subPath: "{{ $key }}.json"
          {{- end }}
          {{- end }}
          {{- end }}
          {{- end -}}
          {{- if .Values.datasources }}
          - name: {{ include "common.fullname" . }}-config
            mountPath: "/etc/grafana/provisioning/datasources/datasources.yaml"
            subPath: datasources.yaml
          {{- end }}
          {{- if .Values.dashboardProviders }}
          - name: {{ include "common.fullname" . }}-config
            mountPath: "/etc/grafana/provisioning/dashboards/dashboardproviders.yaml"
            subPath: dashboardproviders.yaml
          {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end -}}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      volumes:
        - name: {{ include "common.fullname" . }}-config
          configMap:
            name: {{ include "common.fullname" . }}
        - name: {{ include "common.fullname" . }}-storage
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "common.fullname" . }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        {{- if .Values.dashboards }}
          {{- range keys .Values.dashboards }}
        - name: {{ include "common.fullname" $ }}-dashboards-{{ . }}
          configMap:
            name: {{ include "common.fullname" $ }}-dashboards-{{ . }}
          {{- end }}
        {{- end }}
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"
      restartPolicy: Always

{{- end -}}

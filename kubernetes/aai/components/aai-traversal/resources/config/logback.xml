{{/*<!--
  ============LICENSE_START=======================================================
  org.onap.aai
  ================================================================================
  Copyright © 2017 AT&T Intellectual Property. All rights reserved.
  Modifications Copyright © 2018 Amdocs, Bell Canada
  Modifications Copyright © 2020 Orange
  ================================================================================
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  ============LICENSE_END=========================================================
-->
*/}}
<configuration scan="true" scanPeriod="60 seconds" debug="false">
  <statusListener class="ch.qos.logback.core.status.NopStatusListener" />

  <property resource="application.properties" />

  <property name="namespace" value="aai-traversal" />

  <property name="AJSC_HOME" value="${AJSC_HOME:-.}" />
  <jmxConfigurator />
  <property name="logDirectory" value="${AJSC_HOME}/logs" />

  <property name="p_tim" value="%d{&quot;yyyy-MM-dd'T'HH:mm:ss.SSSXXX&quot;, UTC}" />
  <property name="p_lvl" value="%level" />
  <property name="p_log" value="%logger" />
  <property name="p_mdc" value="%replace(%replace(%replace(%mdc){'\t','\\\\t'}){'\n', '\\\\n'}){'\\|', '!'}" />
  <property name="p_msg" value="%replace(%replace(%msg){'\t', '\\\\t'}){'\n','\\\\n'}" />
  <property name="p_exc" value="%replace(%replace(%rootException){'\t', '\\\\t'}){'\n','\\\\n'}" />
  <property name="p_mak" value="%replace(%replace(%marker){'\t', '\\\\t'}){'\n','\\\\n'}" />
  <property name="p_thr" value="%thread" />
  <property name="pattern" value="%nopexception${p_tim}\t${p_thr}\t${p_lvl}\t${p_log}\t${p_mdc}\t${p_msg}\t${p_exc}\t${p_mak}\t%n" />
  <!-- Patterns from onap demo -->
  <property name="errorPattern" value="%X{LogTimestamp}|%X{RequestID}|%thread|%replace(%X{ServiceName}){'\\|', '!'}|%X{PartnerName}|%X{TargetEntity}|%replace(%X{TargetServiceName}){'\\|', '!'}|%.-5level|%X{ErrorCode}|%X{ErrorDesc}|%msg%n" />
  <property name="debugPattern" value="%X{LogTimestamp}|%X{RequestID}|%msg\t${p_mdc}\t${p_msg}\t${p_exc}\t${p_mak}\t|^%n" />
  <property name="auditPattern" value="%X{EntryTimestamp}|%X{LogTimestamp}|%X{RequestID}|%X{ServiceInstanceID}|%thread||%replace(%X{ServiceName}){'\\|', '!'}|%X{PartnerName}|%X{StatusCode}|%X{ResponseCode}|%X{ResponseDesc}|%X{InstanceUUID}|%.-5level|%X{AlertSeverity}|%X{ServerIPAddress}|%X{ElapsedTime}|%X{ServerFQDN}|%X{RemoteHost}||||${p_mak}|${p_mdc}|||%msg%n" />
  <property name="metricPattern" value="%X{InvokeTimestamp}|%X{LogTimestamp}|%X{RequestID}|%X{ServiceInstanceID}|%thread||%replace(%X{ServiceName}){'\\|', '!'}|%X{PartnerName}|%X{TargetEntity}|%replace(%X{TargetServiceName}){'\\|', '!'}|%X{StatusCode}|%X{ResponseCode}|%X{ResponseDesc}|%X{InstanceUUID}|%.-5level|%X{AlertSeverity}|%X{ServerIPAddress}|%X{ElapsedTime}|%X{ServerFQDN}|%X{RemoteHost}||||%X{TargetVirtualEntity}|${p_mak}|${p_mdc}|||%msg%n" />
  <property name="transLogPattern" value="%X{LogTimestamp}|%date{yyyy-MM-dd'T'HH:mm:ss.SSSZ, UTC}|%X{RequestID}|%X{ServiceInstanceID}|%-10t|%X{ServerFQDN}|%X{ServiceName}|%X{PartnerName}|%X{StatusCode}|%X{ResponseCode}|%replace(%replace(%X{ResponseDesc}){'\\|', '!'}){'\r|\n', '^'}|%X{InstanceUUID}|%level|%X{AlertSeverity}|%X{ServerIPAddress}|%X{ElapsedTime}|%X{ServerFQDN}|%X{clientIpAddress}||%X{unused}|%X{processKey}|%X{customField1}|%X{customField2}|%X{customField3}|%X{customField4}|co=%X{PartnerName}:%m%n" />
  <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
  <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
  <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />

  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
      <providers>
        <timestamp><fieldName>timestamp</fieldName></timestamp>
        <message/>
        <mdc>
          <fieldName>context</fieldName>
          <excludeMdcKeyName>ServerIPAddress</excludeMdcKeyName>
          <excludeMdcKeyName>EntryTimestamp</excludeMdcKeyName>
          <excludeMdcKeyName>InvokeTimestamp</excludeMdcKeyName>
          <excludeMdcKeyName>ErrorCode</excludeMdcKeyName>
          <excludeMdcKeyName>ErrorDesc</excludeMdcKeyName>
        </mdc>
        <stackTrace>
          <fieldName>exception</fieldName>
          <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
            <exclude>^sun\.reflect\..*\.invoke</exclude>
            <exclude>^net\.sf\.cglib\.proxy\.MethodProxy\.invoke</exclude>
            <rootCauseFirst>true</rootCauseFirst>
          </throwableConverter>
        </stackTrace>
        <threadName><fieldName>thread</fieldName></threadName>
        <loggerName>
          <fieldName>logger</fieldName>
          <shortenedLoggerNameLength>36</shortenedLoggerNameLength>
        </loggerName>
        <logLevel/>
        <pattern>
          <pattern>{"logType":"app"}</pattern>
        </pattern>
      </providers>
    </encoder>
  </appender>

  <!-- logback internals logging -->
  <logger name="ch.qos.logback.classic" level="WARN" />
  <logger name="ch.qos.logback.core" level="WARN" />

  <logger name="com.att.aft.dme2" level="WARN" />
  <logger name="com.jayway.jsonpath" level="WARN" />

  <logger name="org.apache" level="OFF" />
  <logger name="org.apache.commons" level="WARN" />
  <logger name="org.apache.zookeeper" level="OFF" />
  <logger name="org.codehaus.groovy" level="WARN" />
  <logger name="org.eclipse.jetty" level="WARN" />
  <!-- Spring related loggers -->
  <logger name="org.springframework" level="WARN" />
  <logger name="org.springframework.beans" level="WARN" />
  <logger name="org.springframework.web" level="WARN" />
  <logger name="org.janusgraph" level="WARN" />
  <logger name="org.zookeeper" level="OFF" />


  <logger name="org.onap.aai" level={{ .Values.log.level.base | upper | quote }} additivity="false">
    <appender-ref ref="STDOUT" />
  </logger>

  <logger name="org.onap.aai.aailog.logs.AaiScheduledTaskAuditLog" level="INFO" additivity="false">
    <appender-ref ref="STDOUT" />
  </logger>

  <logger name="org.onap.logging.filter.base.AbstractAuditLogFilter" level="INFO" additivity="false">
    <appender-ref ref="STDOUT" />
  </logger>

  <logger name="org.onap.aai.aailog.logs.AaiDBMetricLog" level="INFO" additivity="false">
    <appender-ref ref="STDOUT" />
  </logger>

  <logger name="org.onap.aai.aailog.logs.AaiDmaapMetricLog" level="INFO" additivity="false">
    <appender-ref ref="STDOUT" />
  </logger>

  <logger name="org.onap.aai.logging.ErrorLogHelper" level="INFO" additivity="false">
    <appender-ref ref="STDOUT" />
  </logger>

  <logger name="org.onap.aai.interceptors.post" level="DEBUG" additivity="false">
    <appender-ref ref="STDOUT" />
  </logger>

  <logger name="org.onap.aai.kafka" level="DEBUG" additivity="false">
    <appender-ref ref="STDOUT" />
  </logger>

  <root level={{ .Values.log.level.root | upper | quote }}>
    <appender-ref ref="STDOUT" />
  </root>
</configuration>

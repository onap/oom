# Copyright © 2017 Amdocs, Bell Canada
# Copyright © 2020 Samsung Electronics
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata: {{- include "common.resourceMetadata" . | nindent 2 }}
spec:
  selector: {{- include "common.selectors" . | nindent 4 }}
  replicas: {{ .Values.replicaCount }}

  template:
    metadata: {{- include "common.templateMetadata" . | nindent 6 }}
    spec:
      {{ include "common.podSecurityContext" . | indent 6 | trim}}
      serviceAccountName: {{ include "common.fullname" (dict "suffix" "read" "dot" . )}}
      initContainers:
      {{ include "common.readinessCheck.waitFor" (dict "dot" . "wait_for" .Values.readinessCheck.wait_for.deployment ) | indent 6 | trim }}
      {{ include "common.certInitializer.initContainer" . | nindent 6 | trim }}
      containers:
      - name: {{ include "common.name" . }}
        image: "{{ include "common.repository" . }}/{{ .Values.image }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        ports: {{ include "common.containerPorts" . | nindent 8  }}
        {{- if .Values.global.aafEnabled }}
        command:
        - sh
        args:
        - -c
        - |
          export $(grep '^c' {{ .Values.certInitializer.credsPath }}/mycreds.prop | xargs -0)
          export VID_KEYSTORE_PASSWORD=$cadi_keystore_password
          export VID_TRUSTSTORE_PASSWORD=$cadi_truststore_password
          /tmp/vid/localize.sh
        {{- end }}
        {{- if eq .Values.liveness.enabled true }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.liveness.port }}
          initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.liveness.periodSeconds }}
        {{ end -}}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.readiness.port }}
          initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.readiness.periodSeconds }}
        env:
        - name: VID_KEYSTORE_FILENAME
          value: {{ .Values.certInitializer.credsPath }}/org.onap.vid.jks
        - name: VID_TRUSTSTORE_FILENAME
          value: {{ .Values.certInitializer.credsPath }}/org.onap.vid.trust.jks
        - name: ASDC_CLIENT_REST_HOST
          value: sdc-be.{{ include "common.namespace" . }}
        - name: ASDC_CLIENT_REST_AUTH
          value: "{{ .Values.config.asdcclientrestauth }}"
        - name: ASDC_CLIENT_REST_PORT
          value: "{{ .Values.config.asdcclientrestport }}"
        - name: ASDC_CLIENT_REST_PROTOCOL
          value: "https"
        - name: VID_AAI_URL
          value: https://aai.{{ include "common.namespace" . }}:{{ .Values.config.vidaaiport }}
        - name: VID_ECOMP_SHARED_CONTEXT_REST_URL
          value: http://portal-app.{{ include "common.namespace" . }}:{{ .Values.config.onapport }}/ONAPPORTAL/context
        - name: VID_MSO_SERVER_URL
          value: http://so.{{ include "common.namespace" . }}:{{ .Values.config.msoport }}/onap/so/infra
        - name: VID_MSO_PASS
          value: "{{ .Values.config.vidmsopass }}"
        - name: MSO_DME2_SERVER_URL
          value: "{{ .Values.config.msodme2serverurl }}"
        - name: MSO_DME2_ENABLED
          value: {{ .Values.global.debugEnabled | default .Values.debugEnabled | quote }}
        - name: VID_ECOMP_REDIRECT_URL
          value: https://{{ .Values.config.portalhost }}:{{ .Values.config.onapport }}/ONAPPORTAL/login.htm
        - name: VID_ECOMP_REST_URL
          value: https://portal-app:{{ .Values.config.onapportrest }}/ONAPPORTAL/auxapi
        - name: VID_ROLE_ACCESS_CENTRALIZED
          value: "{{ .Values.config.roleaccesscentralized }}"
        - name: VID_CONTACT_US_LINK
          value: "{{ .Values.config.vidcontactuslink }}"
        - name: VID_UEB_URL_LIST
          value: message-router.{{ include "common.namespace" . }}
        - name: VID_MYSQL_HOST
          value: {{ .Values.mariadb.service.name }}
        - name: VID_MYSQL_PORT
          value: "{{ .Values.mariadb.service.internalPort }}"
        - name: VID_MYSQL_DBNAME
          value: {{ .Values.mariadb.service.mysqlDatabase }}
        - name: VID_MYSQL_USER
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "vid-db-user-secret" "key" "login") | indent 10 }}
        - name: VID_MYSQL_PASS
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "vid-db-user-secret" "key" "password") | indent 10 }}
        - name: VID_MYSQL_MAXCONNECTIONS
          value: "{{ .Values.config.vidmysqlmaxconnections }}"
        volumeMounts: {{ include "common.certInitializer.volumeMount" . | nindent 8 }}
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        - mountPath: {{ .Values.log.path }}
          name: logs
        - mountPath: /tmp/logback.xml
          name: logback
          subPath: logback.xml
        resources: {{ include "common.resources" . | nindent 10 }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{ toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{ toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      {{ include "common.log.sidecar" . | indent 6 }}
      volumes: {{ include "common.certInitializer.volumes" . | nindent 6 }}
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name: logs
        emptyDir: {}
      {{ include "common.log.volumes" . | indent 6 }}
      - name: logback
        configMap:
          name: {{ include "common.fullname" . }}-log
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"

#  ============LICENSE_START=======================================================
#   Copyright (C) 2018 Ericsson. All rights reserved.
#   Copyright (C) 2020 Huawei
#   Modifications Copyright Â© 2020 Nokia
#  ================================================================================
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#  ============LICENSE_END=========================================================
#  @author: gareth.roper@ericsson.com
#################################################################
# Global configuration defaults.
#################################################################
global:
  nodePortPrefix: 302
  nodePortPrefixExt: 304
  repository: nexus3.onap.org:10001
  readinessImage: onap/oom/readiness:3.0.1
  aafAgentImage: onap/aaf/aaf_agent:2.1.20
  envsubstImage: dibi/envsubst
  aafEnabled: true
  persistence:
    mountPath: /dockerdata-nfs
  security:
    aaf:
      enabled: true
  aaf:
    auth:
      header: Basic c29Ac28ub25hcC5vcmc6ZGVtbzEyMzQ1Ngo=
  mariadbGalera:
    serviceName: mariadb-galera
    servicePort: '3306'

#################################################################
# Secrets metaconfig
#################################################################
secrets:
  - uid: db-user-creds
    type: basicAuth
    externalSecret: '{{ tpl (default "" .Values.db.userCredsExternalSecret) . }}'
    login: '{{ .Values.db.userName }}'
    password: '{{ .Values.db.userPassword }}'
    passwordPolicy: required
  - uid: db-admin-creds
    type: basicAuth
    externalSecret: '{{ tpl (default "" .Values.db.adminCredsExternalSecret) . }}'
    login: '{{ .Values.db.adminName }}'
    password: '{{ .Values.db.adminPassword }}'
    passwordPolicy: required
  - uid: app-user-creds
    type: basicAuth
    externalSecret: '{{ tpl (default "" .Values.server.monitoring.soMonitoringCredsExternalSecret) . }}'
    login: '{{ .Values.server.monitoring.username }}'
    password: '{{ .Values.server.monitoring.password }}'

#secretsFilePaths: |
#  - 'my file 1'
#  - '{{ include "templateThatGeneratesFileName" . }}'

#################################################################
# Application configuration defaults.
#################################################################
repository: nexus3.onap.org:10001
image: onap/so/so-monitoring:1.7.7
pullPolicy: Always

db:
  userName: so_user
  userPassword: so_User123
  # userCredsExternalSecret: some secret
  adminName: so_admin
  adminPassword: so_Admin123
  # adminCredsExternalSecret: some secret

replicaCount: 1
minReadySeconds: 10
containerPort: &containerPort 9091
logPath: app/logs/
app: so-monitoring

#################################################################
# soHelpers part
#################################################################
soHelpers:
  nameOverride: so-monitoring-cert-init
  certInitializer:
    nameOverride: so-monitoring-cert-init
    credsPath: /opt/app/osaaf/local
  cadi:
    apiEnforcement: org.onap.so.monitoringPerm
  containerPort: *containerPort

server:
  monitoring:
    username: demo
    # password: demo123456!
    # soMonitoringCredsExternalSecret: some secret

service:
#Since this is a feature for monitoring the service type is changed to internal, users can change it to NodePort on need basis...
    type: NodePort
    nodePort: 24
    internalPort: *containerPort
    externalPort: *containerPort
    portName: so-monitor-port
updateStrategy:
    type: RollingUpdate
    maxUnavailable: 1
    maxSurge: 1
# Resource Limit flavor -By Default using small
flavor: small
#Segregation for different environment (Small or large)
resources:
    small:
        requests:
            memory: 1Gi
            cpu: 10m
        limits:
            memory: 4Gi
            cpu: 1
    large:
        requests:
            memory: 2Gi
            cpu: 20m
        limits:
            memory: 8Gi
            cpu: 2
readinessProbe:
    port: 9091
    initialDelaySeconds: 20
    periodSeconds: 10
    timeoutSeconds: 10
livenessProbe:
    port: 9091
    initialDelaySeconds: 40
    periodSeconds: 10
    timeoutSeconds: 10
    successThreshold: 1
    failureThreshold: 3
ingress:
    enabled: false
    service:
        - baseaddr: "somonitoring"
          name: "so-monitoring"
          port: 9091
    config:
        ssl: "none"
nodeSelector: {}
tolerations: []
affinity: {}

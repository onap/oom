# Copyright Â© 2019 Intel Corporation, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#################################################################
# Global configuration defaults.
#################################################################
global:
  nodePortPrefix: 302
  persistence: {}

#################################################################
# Application configuration defaults.
#################################################################

#repository: etcd
image: etcd-amd64:3.2.24
pullPolicy: Always

# default number of instances in the StatefulSet
replicaCount: 1

nodeSelector: {}

affinity: {}

# probe configuration parameters
liveness:
  initialDelaySeconds: 90
  periodSeconds: 30
  timeoutSeconds: 5
  # necessary to disable liveness probe when setting breakpoints
  # in debugger so K8s doesn't restart unresponsive container
  enabled: true

persistence:
  enabled: true
  ## etcd data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  #storageClass: "-"
  accessMode: "ReadWriteOnce"
  storage: "1Gi"
  mountPath: /dockerdata-nfs
  mountSubPath: k8s-etcd

## This is only available when persistentVolume is false:
## If persistentVolume is not enabled, one can choose to use memory mode for ETCD by setting memoryMode to "true".
## The system will create a volume with "medium: Memory"
memoryMode: false

service:
  name: k8s-etcd
  peerInternalPort: 2380
  peerPortName: etcd-server
  clientInternalPort : 2379
  clientPortName: etcd-client

## Node labels and tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
nodeSelector: {}
tolerations: []
affinity: {}
extraEnv: []
resources: {}

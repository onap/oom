# Copyright Â© 2018 AT&T
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
      - command:
        - /root/ready.py
        args:
        - --container-name
        - {{ .Values.mariadb.nameOverride }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: "{{ .Values.global.readinessRepository }}/{{ .Values.global.readinessImage }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}-readiness
      - name: db-init
        image: "{{ include "common.repository" . }}/{{ .Values.dbinit.image }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        env:
        - name: DB_HOST
          value: {{ .Values.config.db_host }}.{{.Release.Namespace}}
        - name: DB_PORT
          value: {{ .Values.config.db_port | quote}}
        - name: DB_USERNAME
          value: {{ .Values.config.db_root }}
        - name: DB_SCHEMA
          value: {{ .Values.config.mysqlDatabase }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name}}-cmso-db
              key: db-root-password
        terminationMessagePolicy: File
        volumeMounts:
        - name: {{ include "common.fullname" . }}-config
          mountPath: /share/etc/config
        - name: {{ include "common.fullname" . }}-logs
          mountPath: /share/logs
      containers:
      - name: {{ include "common.name" . }}
        image: "{{ include "common.repository" . }}/{{ .Values.image }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        env:
        - name: DB_HOST
          value: {{ .Values.config.db_host }}.{{.Release.Namespace}}
        - name: DB_PORT
          value: {{ .Values.config.db_port | quote}}
        - name: DB_USERNAME
          value: {{ .Values.config.db_root }}
        - name: DB_SCHEMA
          value: {{ .Values.config.mysqlDatabase }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name}}-cmso-db
              key: db-root-password
        - name: JAVA_TRUSTSTORE
          value: /share/etc/certs/{{ .Values.global.truststoreFile }}
        - name: SSL_KEYSTORE
          value: /share/etc/certs/{{ .Values.global.keystoreFile }}
        - name: JAVA_TRUSTSTORE_PASSWORD
          value: {{ .Values.global.truststorePassword }}
        - name: SSL_KEYSTORE_PASSWORD
          value: {{ .Values.global.keystorePassword }}
        - name: AUTHENTICATION
          value: {{ .Values.global.authentication }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        # disable liveness probe when breakpoints set in debugger
        # so K8s doesn't restart unresponsive container
        {{- if eq .Values.liveness.enabled true }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.liveness.periodSeconds }}
        {{ end -}}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.readiness.periodSeconds }}
        volumeMounts:
        - name: {{ include "common.fullname" . }}-logs
          mountPath: /share/logs
        - name: {{ include "common.fullname" . }}-logs
          mountPath: /share/debug-logs
        - name: {{ include "common.fullname" . }}-config
          mountPath: /share/etc/config
        - name: {{ include "common.fullname" . }}-certs
          mountPath: /share/etc/certs
        - name: {{ include "common.fullname" . }}-certs
          mountPath: /opt/app/cmso/src/main/resources/aaf
        resources:
{{ include "common.resources" . | indent 12 }}
        {{- if .Values.nodeSelector }}
        nodeSelector:
{{ toYaml .Values.nodeSelector | indent 10 }}
        {{- end -}}
        {{- if .Values.affinity }}
        affinity:
{{ toYaml .Values.affinity | indent 10 }}
        {{- end }}
      volumes:
        - name: {{ include "common.fullname" . }}-config
          configMap:
            name: {{ include "common.fullname" . }}
            items:
            - key: logback.xml
              path: logback.xml
            - key: cadi.properties
              path: cadi.properties
            - key: optimizer.properties
              path: optimizer.properties
            - key: liquibase.properties
              path: liquibase.properties
        - name:  {{ include "common.fullname" . }}-logs
          emptyDir: {}
        - name: {{ include "common.fullname" . }}-certs
          secret:
            secretName: {{ .Release.Name }}-{{ .Values.global.commonConfigPrefix }}-certs
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"

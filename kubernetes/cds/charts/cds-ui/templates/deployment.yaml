# Copyright © 2018 Orange
# Modifications Copyright © 2018  Amdocs, Bell Canada
# Modifications Copyright © 2020  Nordix
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ include "common.release" . }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ include "common.release" . }}
        name: {{ include "common.fullname" . }}
    spec:
      {{ if .Values.aaf.enabled }}
      initContainers:
        - name: {{ include "common.name" . }}-aaf-agent
          image: "{{ include "common.repository" . }}/{{ .Values.aaf.agent.image }}"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: "/opt/app/osaaf"
              name: {{ include "common.fullname" . }}-aaf
          command: ["bash","-c"]
          args: ["rm -rf /opt/app/osaaf/local && /opt/app/aaf_config/bin/agent.sh; sleep 20"]
          env:
            - name: APP_FQI
              value: "{{ .Values.aaf.fqi }}"
            - name: aaf_locate_url
              value: "https://aaf-locate:8095"
            - name: aaf_locator_container
              value: "helm"
            - name: aaf_locator_container_ns
              value: {{ include "common.namespace" . }}
            - name: aaf_locator_fqdn
              value: "{{.Values.aaf.fqdn}}"
            - name: aaf_locator_public_fqdn
              value: "{{.Values.aaf.public_fqdn}}"
            - name: cadi_latitude
              value: "{{ .Values.aaf.cadi_latitude }}"
            - name: cadi_longitude
              value: "{{ .Values.aaf.cadi_longitude }}"
            - name: DEPLOY_FQI
              value: "deployer@people.osaaf.org"
            - name: DEPLOY_PASSWORD
              value: "demo123456!"
      {{ end }}
      containers:
        - name: {{ include "common.name" . }}
          image: "{{ include "common.repository" . }}/{{ .Values.image }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          # disable liveness probe when breakpoints set in debugger
          # so K8s doesn't restart unresponsive container
          {{ if .Values.liveness.enabled }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          {{ end }}
          env:
            - name: HOST
              value: 0.0.0.0
            - name: APP_ACTION_DEPLOY_BLUEPRINT_GRPC_ENABLED
              value: "{{ .Values.config.app.action.deployBlueprint.grpcEnabled }}"
            - name: API_BLUEPRINT_CONTROLLER_HTTP_BASE_URL
              value: {{ .Values.config.api.controller.http.baseUrl }}
            - name: API_BLUEPRINT_CONTROLLER_HTTP_AUTH_TOKEN
              value: {{ .Values.config.api.controller.http.authToken }}
            - name: API_BLUEPRINT_PROCESSOR_HTTP_BASE_URL
              value: {{ .Values.config.api.processor.http.baseUrl }}
            - name: API_BLUEPRINT_PROCESSOR_HTTP_AUTH_TOKEN
              value: {{ .Values.config.api.processor.http.authToken }}
            - name: API_BLUEPRINT_PROCESSOR_GRPC_HOST
              value: {{ .Values.config.api.processor.grpc.host }}
            - name: API_BLUEPRINT_PROCESSOR_GRPC_PORT
              value: "{{ .Values.config.api.processor.grpc.port }}"
            - name: API_BLUEPRINT_PROCESSOR_GRPC_AUTH_TOKEN
              value: {{ .Values.config.api.processor.grpc.authToken }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
          volumeMounts:
            - mountPath: /etc/localtime
              name: localtime
              readOnly: true
          resources:
{{ include "common.resources" . | indent 12 }}
        {{- if .Values.nodeSelector }}
        nodeSelector:
{{ toYaml .Values.nodeSelector | indent 10 }}
        {{- end -}}
        {{- if .Values.affinity }}
        affinity:
{{ toYaml .Values.affinity | indent 10 }}
        {{- end }}
      # side car containers
        # - name: filebeat-onap
        #   image: "{{ .Values.global.loggingRepository }}/{{ .Values.global.loggingImage }}"
        #   imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        #   volumeMounts:
        #   - mountPath: /usr/share/filebeat/filebeat.yml
        #     name: filebeat-conf
        #     subPath: filebeat.yml
        #   - mountPath: /home/esr/works/logs
        #     name: esr-server-logs
        #   - mountPath: /usr/share/filebeat/data
        #     name: esr-server-filebeat

  {{ if .Values.installSidecarSecurity }}
        #reverse proxy service
        - name: {{ .Values.rproxy.name }}
          image: "{{ include "common.repository" . }}/{{ .Values.rproxy.image }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          env:
            - name: CONFIG_HOME
              value: "/opt/app/rproxy/config"
            - name: KEY_STORE_PASSWORD
              value: {{ .Values.rproxy.keyStorePassword }}
            - name: spring_profiles_active
              value: {{ .Values.rproxy.activeSpringProfiles }}
          volumeMounts:
            - name: {{ include "common.fullname" . }}-rproxy-config
              mountPath: /opt/app/rproxy/config/forward-proxy.properties
              subPath: forward-proxy.properties
            - name: {{ include "common.fullname" . }}-rproxy-config
              mountPath: /opt/app/rproxy/config/primary-service.properties
              subPath: primary-service.properties
            - name: {{ include "common.fullname" . }}-rproxy-config
              mountPath: /opt/app/rproxy/config/reverse-proxy.properties
              subPath: reverse-proxy.properties
            - name: {{ include "common.fullname" . }}-rproxy-config
              mountPath: /opt/app/rproxy/config/cadi.properties
              subPath: cadi.properties
            - name: {{ include "common.fullname" . }}-rproxy-log-config
              mountPath: /opt/app/rproxy/config/logback-spring.xml
              subPath: logback-spring.xml
            - name: {{ include "common.fullname" . }}-rproxy-auth-certs
              mountPath: /opt/app/rproxy/config/auth/tomcat_keystore
              subPath: tomcat_keystore
            - name: {{ include "common.fullname" . }}-rproxy-auth-certs
              mountPath: /opt/app/rproxy/config/auth/client-cert.p12
              subPath: client-cert.p12
            - name: {{ include "common.fullname" . }}-rproxy-uri-auth-config
              mountPath: /opt/app/rproxy/config/auth/uri-authorization.json
              subPath: uri-authorization.json
            - name: {{ include "common.fullname" . }}-rproxy-auth-certs
              mountPath: /opt/app/rproxy/config/auth/org.onap.sdnc.p12
              subPath: org.onap.sdnc.p12
            - name: {{ include "common.fullname" . }}-rproxy-security-config
              mountPath: /opt/app/rproxy/config/security/keyfile
              subPath: keyfile
            {{ if .Values.aaf.enabled }}
            - mountPath: /opt/app/osaaf
              name: {{ include "common.fullname" . }}-aaf
            {{ end }}
          ports:
            - containerPort: {{ .Values.rproxy.port }}
        #forward proxy service
        - name: {{ .Values.fproxy.name }}
          image: "{{ include "common.repository" . }}/{{ .Values.fproxy.image }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          env:
            - name: CONFIG_HOME
              value: "/opt/app/fproxy/config"
            - name: KEY_STORE_PASSWORD
              value: {{ .Values.fproxy.keyStorePassword }}
            - name: TRUST_STORE_PASSWORD
              value: {{ .Values.fproxy.trustStorePassword }}
            - name: spring_profiles_active
              value: {{ .Values.fproxy.activeSpringProfiles }}
          volumeMounts:
            - name: {{ include "common.fullname" . }}-fproxy-config
              mountPath: /opt/app/fproxy/config/fproxy.properties
              subPath: fproxy.properties
            - name: {{ include "common.fullname" . }}-fproxy-log-config
              mountPath: /opt/app/fproxy/config/logback-spring.xml
              subPath: logback-spring.xml
            - name: {{ include "common.fullname" . }}-fproxy-auth-certs
              mountPath: /opt/app/fproxy/config/auth/fproxy_truststore
              subPath: fproxy_truststore
            - name: {{ include "common.fullname" . }}-fproxy-auth-certs
              mountPath: /opt/app/fproxy/config/auth/tomcat_keystore
              subPath: tomcat_keystore
            - name: {{ include "common.fullname" . }}-fproxy-auth-certs
              mountPath: /opt/app/fproxy/config/auth/client-cert.p12
              subPath: client-cert.p12
            {{ if .Values.aaf.enabled }}
            - mountPath: /opt/app/osaaf
              name: {{ include "common.fullname" . }}-aaf
            {{ end }}
          ports:
            - containerPort: {{ .Values.fproxy.port }}
  {{ end }}
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
      {{ if .Values.installSidecarSecurity }}
        - name: {{ include "common.fullname" . }}-rproxy-config
          configMap:
            name: {{ include "common.fullname" . }}-rproxy-config
        - name: {{ include "common.fullname" . }}-rproxy-log-config
          configMap:
            name: {{ include "common.fullname" . }}-rproxy-log-config
        - name: {{ include "common.fullname" . }}-rproxy-uri-auth-config
          configMap:
            name: {{ include "common.fullname" . }}-rproxy-uri-auth-config
        - name: {{ include "common.fullname" . }}-rproxy-auth-certs
          secret:
            secretName: {{ include "common.fullname" . }}-rproxy-auth-certs
        - name: {{ include "common.fullname" . }}-rproxy-security-config
          secret:
            secretName: {{ include "common.fullname" . }}-rproxy-security-config
        - name: {{ include "common.fullname" . }}-fproxy-config
          configMap:
            name: {{ include "common.fullname" . }}-fproxy-config
        - name: {{ include "common.fullname" . }}-fproxy-log-config
          configMap:
            name: {{ include "common.fullname" . }}-fproxy-log-config
        - name: {{ include "common.fullname" . }}-fproxy-auth-certs
          secret:
            secretName: {{ include "common.fullname" . }}-fproxy-auth-certs
      {{ end }}
      {{ if .Values.aaf.enabled }}
        - name: {{ include "common.fullname" . }}-aaf
          persistentVolumeClaim:
            claimName: {{ include "common.fullname" . }}-aaf-claim
      {{ end }}
        # - name: filebeat-conf
        #   configMap:
        #     name: {{ include "common.fullname" . }}-esr-filebeat
        # - name: esr-server-logs
        #   emptyDir: {}
        # - name: esr-server-filebeat
        #   emptyDir: {}
        # - name: esrserver-log
        #   configMap:
        #     name: {{ include "common.fullname" . }}-esr-esrserver-log
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"

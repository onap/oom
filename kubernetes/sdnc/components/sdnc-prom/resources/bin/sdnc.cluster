#!/bin/bash
{{/*

# Copyright Â© 2018 Amdocs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}

# query ODL cluster state
USERNAME="{{.Values.odl.jolokia.username}}"
PASSWORD="{{.Values.odl.jolokia.password}}"

count=${SDNC_ODL_COUNT:-1}
memberStart=0
if [ "${SDNC_IS_PRIMARY_CLUSTER:-true}" != "true" ];then
  memberStart=$(( $memberStart + $count ))
fi

for instance in $(seq $count);do
  shard=member-$(( $memberStart + $instance ))-shard-default-config
  mbean=Category=Shards,name=$shard,type=DistributedConfigDatastore
  url=http://{{ include "common.release" . }}-sdnc-$(( $instance-1 )).sdnc-cluster.{{.Release.Namespace}}:8181/jolokia/read/org.opendaylight.controller:$mbean

  response=$( curl -s -u $USERNAME:$PASSWORD $url )
  rc=$?
  if [ $rc -ne 0 ];then
    # failed to contact SDN-C instance - try another
    continue
  fi
  status=$( echo -E "$response" | jq -r ".status" )
  if [ "$status" != "200" ];then
    # query failed, try another instance
    continue
  fi

  voting=$( echo -E "$response" | jq -r ".value.Voting" )
  case $voting in
  true)
    echo "active"
    exit 0
    ;;
  false)
    echo "standby"
    exit 0
    ;;
  *)
    echo "Error: Voting status could not be determined."
    exit 1
    ;;
  esac
done
echo "Error: Voting status could not be determined."
exit 1

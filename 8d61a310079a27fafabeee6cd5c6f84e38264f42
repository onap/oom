{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d9935df1_505624b3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 2679
      },
      "writtenOn": "2024-10-22T08:09:18Z",
      "side": 1,
      "message": "Startup of sdnc pod fails due to Memory limits.\nI saw in lens during startup the memory consumption of 7,132G for the sdnc container.\nI was able to fix it by setting the memory like this:\n```\n    javaOptions:\n      maxGCPauseMillis: 100\n      parallelGCThreads : 3\n      numberGCLogFiles: 10\n      minMemory: 1028m\n      maxMemory: 6144m\n      gcLogOptions: \"\"\n\n```",
      "revId": "8d61a310079a27fafabeee6cd5c6f84e38264f42",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09c40fa9_2dbd6c43",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 2679
      },
      "writtenOn": "2024-10-23T07:07:02Z",
      "side": 1,
      "message": "Additionally, could you please increase the SDNC Chart.yaml version (e.g. 15.1.0)",
      "revId": "8d61a310079a27fafabeee6cd5c6f84e38264f42",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87108718_ebce3206",
        "filename": "kubernetes/sdnc/values.yaml",
        "patchSetId": 2
      },
      "lineNbr": 319,
      "author": {
        "id": 2679
      },
      "writtenOn": "2024-10-22T08:09:18Z",
      "side": 1,
      "message": "currently the startup fails due to missing java memory:\n```\n2024-10-22T01:57:00,541 | ERROR | activator-1-thread-2 | BootFeaturesInstaller            | 17 - org.apache.karaf.features.core - 4.4.4 |  -   | Error installing boot features\njava.lang.OutOfMemoryError: Java heap spaceat java.lang.Object.clone(Native Method) ~[?:?]\n\tat org.apache.felix.resolver.util.OpenHashMap.clone(OpenHashMap.java:819) ~[?:?]\n\tat org.apache.felix.resolver.util.OpenHashMapList.deepClone(OpenHashMapList.java:35) ~[?:?]\n\tat org.apache.felix.resolver.Candidates.copy(Candidates.java:1143) ~[?:?]\n\tat org.apache.felix.resolver.Candidates.permutate(Candidates.java:1196) ~[?:?]\n\tat org.apache.felix.resolver.ResolverImpl$ResolveSession.permutateIfNeeded(ResolverImpl.java:155) ~[?:?]\n\tat org.apache.felix.resolver.Candidates.checkSubstitutes(Candidates.java:344) ~[?:?]\n\tat org.apache.felix.resolver.ResolverImpl.checkConsistency(ResolverImpl.java:606) ~[?:?]\n\tat org.apache.felix.resolver.ResolverImpl.findValidCandidates(ResolverImpl.java:574) ~[?:?]\n\tat org.apache.felix.resolver.ResolverImpl.doResolve(ResolverImpl.java:437) ~[?:?]\n\tat org.apache.felix.resolver.ResolverImpl.resolve(ResolverImpl.java:420) ~[?:?]\n\tat org.apache.felix.resolver.ResolverImpl.resolve(ResolverImpl.java:374) ~[?:?]\n\tat org.apache.karaf.features.internal.region.SubsystemResolver.resolve(SubsystemResolver.java:256) ~[?:?]\n\tat org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:399) ~[?:?]\n\tat org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProvision(FeaturesServiceImpl.java:1069) ~[?:?]\n\tat org.apache.karaf.features.internal.service.FeaturesServiceImpl.lambda$doProvisionInThread$13(FeaturesServiceImpl.java:1004) ~[?:?]\n\tat org.apache.karaf.features.internal.service.FeaturesServiceImpl$$Lambda$299/0x0000000100497bd0.call(Unknown Source) ~[?:?]\n\tat java.util.concurrent.FutureTask.run(Unknown Source) [?:?]\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) [?:?]\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) [?:?]\n\tat java.lang.Thread.run(Unknown Source) [?:?] (bearbeitet) \n```",
      "revId": "8d61a310079a27fafabeee6cd5c6f84e38264f42",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ]
}
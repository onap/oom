# Copyright © 2017 Amdocs, Bell Canada
# Modifications Copyright © 2018 AT&T, ZTE
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#################################################################
# Global configuration defaults.
#################################################################
global:
  nodePortPrefix: 302
  readinessRepository: oomk8s
  readinessImage: readiness-check:2.0.2
  loggingRepository: docker.elastic.co
  loggingImage: beats/filebeat:5.5.0

#################################################################
# Application configuration defaults.
#################################################################
# application image
repository: nexus3.onap.org:10001
image: onap/sdc-backend:1.6.5
backendInitImage: onap/sdc-backend-init:1.6.5
pullPolicy: Always

# flag to enable debugging - application support required
debugEnabled: false

config:
  javaOptions: "-Xmx1536m -Xms1536m"
  cassandraSslEnabled: "false"
  # userCredentialsExternalSecret: some secret
  # truststorePasswordExternalSecret: some secret
  # cadiTruststorePasswordExternalSecret: some secret
  # dmaapTruststorePasswordExternalSecret: some secret
  # sdcAccessRestrictionSecurityKeyExternalSecret: some secret

# default number of instances
replicaCount: 1

nodeSelector: {}

affinity: {}

# probe configuration parameters
liveness:
  initialDelaySeconds: 120
  periodSeconds: 10
  timeoutSeconds: 5
  # necessary to disable liveness probe when setting breakpoints
  # in debugger so K8s doesn't restart unresponsive container
  port: api
  enabled: true

readiness:
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5

service:
  type: NodePort
  name: sdc-be
  both_tls_and_plain: true
  msb:
    - port: 8080
      url: "/sdc/v1"
      version: "v1"
      protocol: "REST"
      visualRange: "1"
      serviceName: sdc
    - port: 8080
      url: "/sdc/v1"
      version: "v1"
      protocol: "REST"
      visualRange: "1"
      serviceName: sdc-deprecated
  ports:
    - name: api
      port: 8443
      plain_port: 8080
      port_protocol: http
      nodePort: '04'

ingress:
  enabled: false
  service:
    - baseaddr: "sdc.api.be"
      name: "sdc-be"
      port: 8443
  config:
    ssl: "redirect"


# Resource Limit flavor -By Default using small
flavor: small
# Segregation for Different environment (Small and Large)
resources:
  small:
    limits:
      cpu: 1
      memory: 4Gi
    requests:
      cpu: 10m
      memory: 1Gi
  large:
    limits:
      cpu: 2
      memory: 8Gi
    requests:
      cpu: 20m
      memory: 2Gi
  unlimited: {}

onboarding:
  type: ClusterIP
  name: sdc-onboarding-be
  portName: sdc-onboarding-be
  internalPort: 8445
  externalPort: 8445
  internalPort2: 8081
  externalPort2: 8081

dcae:
  type: ClusterIP
  name: sdc-dcae-be
  portName: sdc-dcae-be-8082
  externalPort: 8082
  internalPort: 8082
  portName2: sdc-dcae-be-8444
  externalPort2: 8444
  internalPort2: 8444

aaf:
  aaf_env: "DEV"
  cadi_latitude: "38.0"
  cadi_longitude: "-72.0"
  public_fqdn: "aaf.osaaf.org"
  # cadiFilterParams
  username: 'user'
  password: 'demo123456!'
  cadi_truststore_password: 'enc:mN6GiIzFQxKGDzAXDOs7b4j8DdIX02QrZ9QOWNRpxV3rD6whPCfizSMZkJwxi_FJ'

# switchoverDetector
sod:
  username: 'ecompasdc'
  password: 'ecompasdc123'

# dmaapProducerConfiguration
dmaap:
  username: 'user1@sdc.com'
  password: 'password=='
  truststore_password: 'dmaap_truststore_pwd'

# access restriction
authCookie:
  securityKey: "sdcaccessrestrictionsecureykey"

cadi:
  AFT_ENVIRONMENT: "AFTUAT"
  aaf_env: "TEST"
  aaf_url: ""
  cadiX509Issuers: "CN=intermediateCA_1, OU=OSAAF, O=ONAP, C=US"
  cadi_keyfile: "/var/lib/jetty/etc/org.onap.sdc.p12"
  cadi_loglevel: "DEBUG"
  cadi_truststore: "/var/lib/jetty/etc/org.onap.sdc.trust.jks"
  csp_domain: "PROD"


#################################################################
# Secrets metaconfig
#################################################################
secrets:
  - uid: 'dmaap-user-creds'
    type: basicAuth
    externalSecret: '{{ tpl (default "" .Values.config.userCredentialsExternalSecret) . }}'
    login: '{{ .Values.dmaap.username }}'
    password: '{{ .Values.dmaap.password }}'
    passwordPolicy: generate
  - uid: 'aaf-user-creds'
    type: basicAuth
    externalSecret: '{{ tpl (default "" .Values.config.userCredentialsExternalSecret) . }}'
    login: '{{ .Values.aaf.username }}'
    password: '{{ .Values.aaf.password }}'
    passwordPolicy: required
  - uid: 'cs-user-creds'
    type: basicAuth
    externalSecret: '{{ tpl (default "" .Values.config.userCredentialsExternalSecret) . }}'
    login: '{{ .Values.sod.username }}'
    password: '{{ .Values.global.secrets.cs_password }}'
    passwordPolicy: required
  - uid: 'cs-truststore-password'
    type: password
    externalSecret: '{{ tpl (default "" .Values.config.truststorePasswordExternalSecret) . }}'
    password: '{{ .Values.global.secrets.cs_truststore_password }}'
    passwordPolicy: required
  - uid: 'sod-user-creds'
    type: basicAuth
    externalSecret: '{{ tpl (default "" .Values.config.userCredentialsExternalSecret) . }}'
    login: '{{ .Values.sod.username }}'
    password: '{{.Values.sod.password}}'
    passwordPolicy: required
  - uid: 'cadi-truststore-password'
    type: password
    externalSecret: '{{ tpl (default "" .Values.config.cadiTruststorePasswordExternalSecret) . }}'
    password: '{{ .Values.aaf.cadi_truststore_password }}'
    passwordPolicy: required
  - uid: 'dmaap-truststore-pwd'
    type: password
    externalSecret: '{{ tpl (default "" .Values.config.dmaapTruststorePasswordExternalSecret) . }}'
    password: '{{.Values.dmaap.truststore_password}}'
    passwordPolicy: generate
  - uid: 'sdc-access-restriction-security-key'
    type: password
    externalSecret: '{{ tpl (default "" .Values.config.sdcAccessRestrictionSecurityKeyExternalSecret) . }}'
    password: '{{.Values.authCookie.securityKey}}'
    passwordPolicy: required

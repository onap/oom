# Copyright Â© 2020 Bitnami
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apps/v1
kind: StatefulSet
{{ $role := "master" -}}
{{ $suffix := $role -}}
{{ $labels := (dict "role" $role) -}}
metadata: {{- include "common.resourceMetadata" (dict "suffix" $suffix "labels" $labels "dot" . )| nindent 2 }}
spec:
  updateStrategy:
    type: {{ .Values.master.updateStrategy.type }}
    {{- if (eq "OnDelete" .Values.master.updateStrategy.type) }}
    rollingUpdate: null
    {{- end }}
  selector:
    matchLabels: {{- include "common.matchLabels" . | nindent 6 }}
      role: master
  serviceName: {{ template "elasticsearch.master.fullname" . }}
  replicas: {{ .Values.master.replicaCount }}
  template:
    metadata:
      labels: {{- include "common.labels" . | nindent 8 }}
        role: master
      {{- with .Values.master.podAnnotations }}
      annotations: {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
{{- include "elasticsearch.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.master.affinity }}
      affinity: {{- include "common.tplValue" (dict "value" .Values.master.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.master.nodeSelector }}
      nodeSelector: {{- include "common.tplValue" (dict "value" .Values.master.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.master.tolerations }}
      tolerations: {{- include "common.tplValue" (dict "value" .Values.master.tolerations "context" $) | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "elasticsearch.master.serviceAccountName" . }}
      {{- if .Values.master.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.master.securityContext.fsGroup }}
      {{- end }}
      {{- if or .Values.sysctlImage.enabled (and .Values.volumePermissions.enabled .Values.master.persistence.enabled) }}
      initContainers:
        {{- if .Values.sysctlImage.enabled }}
        ## Image that performs the sysctl operation to modify Kernel settings (needed sometimes to avoid boot errors)
        - name: sysctl
          image: {{printf "%s/%s:%s" (include "common.repository" .)  .Values.sysctlImage.imageName  .Values.sysctlImage.tag }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          command:
            - /scripts/sysctl.sh
          securityContext:
            privileged: true
          volumeMounts:
            - name: initcontainer-script
              mountPath: /scripts/sysctl.sh
              subPath: sysctl.sh
        {{- end }}
        {{- if and .Values.volumePermissions.enabled .Values.master.persistence.enabled }}
        - name: volume-permissions
          image: {{ printf "%s/%s:%s" (include "common.repository" .)  .Values.volumePermissions.image.imageName  .Values.volumePermissions.image.tag }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.volumePermissions.image.pullPolicy }}
          command:
            - /bin/bash
            - -ec
            - |
              chown -R {{ .Values.master.securityContext.runAsUser }}:{{ .Values.master.securityContext.fsGroup }} //bitnami/elasticsearch/data
          securityContext:
            runAsUser: 0
          {{- if .Values.volumePermissions.resource }}
          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: "/bitnami/elasticsearch/data"
        {{- end }}
      {{- end }}
      containers:
        - name: elasticsearch
          image: {{ printf "%s/%s:%s" (include "common.repository" .)  .Values.image.imageName  .Values.image.tag }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          {{- if .Values.master.securityContext.enabled }}
          securityContext:
            runAsUser: {{ .Values.master.securityContext.runAsUser }}
          {{- end }}
          env:
            - name: BITNAMI_DEBUG
              value: {{ ternary "true" "false" .Values.image.debug | quote }}
            - name: ELASTICSEARCH_CLUSTER_NAME
              value: "{{ include "common.name" . }}-cluster"
            - name: ELASTICSEARCH_CLUSTER_HOSTS
              value: {{ include "common.name" . }}-discovery
            - name: ELASTICSEARCH_CLUSTER_MASTER_HOSTS
              {{- $elasticsearchMasterFullname := printf "%s-%s" (include "common.fullname" . ) "master" }}
              {{- $replicas := int .Values.master.replicaCount }}
              value: {{range $i, $e := until $replicas }}{{ $elasticsearchMasterFullname }}-{{ $e }} {{ end }}
            - name: ELASTICSEARCH_MINIMUM_MASTER_NODES
              value: {{ add (div .Values.master.replicaCount 2) 1 | quote }}
            {{- if .Values.plugins }}
            - name: ELASTICSEARCH_PLUGINS
              value: {{ .Values.plugins | quote }}
            {{- end }}
            - name: ELASTICSEARCH_HEAP_SIZE
              value: {{ .Values.master.heapSize | quote }}
            - name: ELASTICSEARCH_IS_DEDICATED_NODE
              value: {{ .Values.master.dedicatednode | quote }}
            - name: ELASTICSEARCH_NODE_TYPE
              value: "master"
          ports:
            - name: transport
              containerPort: 9300
          {{- if .Values.master.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.master.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.master.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.master.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.master.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.master.livenessProbe.failureThreshold }}
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
          {{- end }}
          {{- if .Values.master.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.master.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.master.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.master.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.master.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.master.livenessProbe.failureThreshold }}
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
          {{- end }}
          {{- if .Values.master.resources }}
          resources: {{- toYaml .Values.master.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if .Values.config }}
            - mountPath: /opt/bitnami/elasticsearch/config/elasticsearch.yml
              name: config
              subPath: elasticsearch.yml
            {{- end }}
            - name: data
              mountPath: /bitnami/elasticsearch/data
            {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
      volumes:
        {{- if .Values.sysctlImage.enabled }}
        - name: initcontainer-script
          configMap:
            name: {{ include "common.fullname" . }}-initcontainer
            defaultMode: 0755
        {{- end }}
        {{- if .Values.config }}
        - name: config
          configMap:
            name: {{ include "common.fullname" . }}
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
{{- if not .Values.master.persistence.enabled }}
        - name: "data"
          emptyDir: {}
{{- else }}
  volumeClaimTemplates:
    - metadata:
        name: "data"
        {{- if .Values.master.persistence.annotations }}
        annotations: {{- toYaml .Values.master.persistence.annotations | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          - {{ .Values.master.persistence.accessMode }}
        storageClassName: {{ include "common.storageClass" (dict "suffix" "master" "pvValues" (index .Values "master") "dot" .) }}
        resources:
          requests:
            storage: {{ .Values.master.persistence.size | quote }}
{{- end }}

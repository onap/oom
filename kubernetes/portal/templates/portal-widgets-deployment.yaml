#{{ if not .Values.disablePortalPortalwidgets }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: portalwidgets
  namespace: "{{ .Values.nsPrefix }}-portal"
spec:
  selector:
    matchLabels:
      app: portalwidgets
  template:
    metadata:
       labels:
         app: portalwidgets
       name: portalwidgets
    spec:
      initContainers:
      - command:
        - /root/ready.py
        args:
        - --container-name
        - portaldb
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: {{ .Values.image.readiness }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: portalapps-readiness
      containers:
      - image: {{ .Values.image.portalwms }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: portalwidgets
        volumeMounts:
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        - mountPath: /application.properties
          name: portalwidgets-application-properties
          subPath: application.properties
        ports:
        - containerPort: 8082
        readinessProbe:
          tcpSocket:
            port: 8082
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: portalwidgets-application-properties
          configMap:
            name: portal-onapwidgetms-configmap
      imagePullSecrets:
      - name: "{{ .Values.nsPrefix }}-docker-registry-key"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: portal-onapwidgetms-configmap
  namespace: {{ .Values.nsPrefix }}-portal
data:
{{ tpl (.Files.Glob "resources/config/portal-fe/webapps/etc/ONAPWIDGETMS/application.properties").AsConfig . | indent 2 }}
#{{ end }}

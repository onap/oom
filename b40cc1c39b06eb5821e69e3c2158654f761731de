{
  "comments": [
    {
      "key": {
        "uuid": "df9e2507_1387f12a",
        "filename": "kubernetes/common/common/templates/_service.tpl",
        "patchSetId": 13
      },
      "lineNbr": 125,
      "author": {
        "id": 2319
      },
      "writtenOn": "2021-08-18T15:48:42Z",
      "side": 1,
      "message": "this is breaking ONAP as port_protocol is using values not allowed by service spec (https://logs.onap.org/onap-integration/gating//122348-13/k8s/k8s/onap-helm/onap-aaf.log)\nalso, port_protocol was meant with istio/linkerd in view with a lot more options than allowed (and upcased values) by service spec (TCP, UDP and SCTP).\n\nso I guess we should either\n* use (yet another) name \n* don\u0027t set the protocol",
      "revId": "b40cc1c39b06eb5821e69e3c2158654f761731de",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "973e2e6d_44257d76",
        "filename": "kubernetes/common/common/templates/_service.tpl",
        "patchSetId": 13
      },
      "lineNbr": 125,
      "author": {
        "id": 511
      },
      "writtenOn": "2021-08-19T17:32:46Z",
      "side": 1,
      "message": "The problem here is not with \"port_protocol\", the problem is with \"protocol\" (or, more precisely, service.ports[i].protocol in the values.yaml.  Prior to the present change, \"protocol\" was not used at all by this template.)  \n\nIt seems that some aaf components, for whatever reason, included service.ports[i].protocol in their values.yaml file. For instance:\n            service:\n              name: aaf-gui\n              type: NodePort\n              ports:\n                - name: gui\n                  protocol: http\n                  port: 8200\n                  nodePort: 51\nThe master branch version of this template just ignores \"protocol\", but this new version of the template tries to use the \"protocol\" value to render a k8s Service file, and \"http\" is not a valid value.\n\nI see two reasonable approaches to fixing this:\n(1) Remove the spurious service.ports[i].protocol settings from the various aaf values.yaml files.  (From a grep through the oom tree, it appears aaf is the only component that is setting these values. aaf-hello, aaf-cm, aaf-fs, aaf-locate, aaf-oauth, aaf-gui, and aaf-service would be affected.)\n(2) Change the name of values.yaml parameter from \"protocol\" to something like \"layer4Protocol\", which would affect the _service.tpl file and the values.yaml file for dcae-snmp-trap-collector.  We could leave the aaf values.yaml files unchanged, and the spurious \"protocol\" values would be ignored.\n\nAny preferences here?",
      "parentUuid": "df9e2507_1387f12a",
      "revId": "b40cc1c39b06eb5821e69e3c2158654f761731de",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53db92ef_8e957f89",
        "filename": "kubernetes/common/common/templates/_service.tpl",
        "patchSetId": 13
      },
      "lineNbr": 125,
      "author": {
        "id": 93
      },
      "writtenOn": "2021-08-20T18:45:21Z",
      "side": 1,
      "message": "Thanks Jack for the update.. I\u0027m good with the proposal to switch to use different name.",
      "parentUuid": "973e2e6d_44257d76",
      "revId": "b40cc1c39b06eb5821e69e3c2158654f761731de",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d6c27c3_67226490",
        "filename": "kubernetes/common/common/templates/_service.tpl",
        "patchSetId": 13
      },
      "lineNbr": 125,
      "author": {
        "id": 511
      },
      "writtenOn": "2021-08-22T17:47:30Z",
      "side": 1,
      "message": "I decided that it was safer to change the name, since the aaf charts might be using the \"protocol\" in places other than the service template.\nI used \"l4_protocol\" for \"protocol\".  It turns out that there is a second new value name, \"plain_port_protocol\", which I changed to \"plain_port_l4_protocol for consistency.\n(This template uses snake_case rather than camelCase, so I chose to stay with that convention.)\n\nI was able to replicate the problem in my test environment.  I also verified that the changes I made allow aaf to come up properly and that the dcae-snmptrap-collector chart can be deployed on demand, with a UDP NodePort created for it, as expacted.",
      "parentUuid": "973e2e6d_44257d76",
      "revId": "b40cc1c39b06eb5821e69e3c2158654f761731de",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: "{{ .Values.service.name }}-cluster"
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ .Release.Name }}
    spec:
#      initContainers:
#      - command:
#        - /root/ready.py
#        args:
#        - --container-name
#        - appcdb
#        env:
#        - name: NAMESPACE
#          valueFrom:
#            fieldRef:
#              apiVersion: v1
#              fieldPath: metadata.namespace
#        image: "{{ .Values.global.readinessRepository }}/{{ .Values.global.readinessImage }}"
#        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
#        name: {{ include "common.name" . }}-readiness
      containers:
        - name: {{ include "common.name" . }}
          image: "{{ .Values.global.repository | default .Values.repository }}/{{ .Values.image }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          command:
          - bash
          - "-c"
          - |
            sed -i 's/dbhost/sdnc-dbhost-0.dbhost.onap-sdnc.svc.cluster.local/g' /opt/onap/sdnc/data/properties/svclogic.properties
            sed -i 's/^\(org.onap.ccsdk.sli.jdbc.hosts=\).*/\1sdnc-dbhost-0.dbhost.onap-sdnc.svc.cluster.local/' /opt/onap/sdnc/data/properties/dblib.properties
            /opt/onap/sdnc/bin/startODL.sh
          ports:
          - containerPort: {{ .Values.service.internalPort }}
          - containerPort: {{ .Values.service.externalPort2 }}
          # disable liveness probe when breakpoints set in debugger
          # so K8s doesn't restart unresponsive container 
          {{- if eq .Values.liveness.enabled true }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          {{ end -}}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "common.fullname" . }}
                  key: db-root-password
            - name: SDNC_CONFIG_DIR
              value: "{{ .Values.config.configDir }}"
            - name: APPC_CONFIG_DIR
              value: "{{ .Values.config.configDir }}"
            - name: DMAAP_TOPIC_ENV
              value: "{{ .Values.config.dmaapTopic }}"
            - name: ENABLE_ODL_CLUSTER
              value: "{{ .Values.config.enableClustering }}"
            - name: SDNC_REPLICAS
              value: "{{ .Values.replicaCount }}"
          volumeMounts:
          - mountPath: /etc/localtime
            name: localtime
            readOnly: true
          - mountPath: /opt/openecomp/appc/data/properties/appc.properties
            name: appc-conf
            subPath: appc.properties
          - mountPath: /opt/openecomp/appc/data/properties/aaiclient.properties
            name: appc-conf
            subPath: aaiclient.properties
          - mountPath: /opt/onap/sdnc/data/properties/aaiclient.properties
            name: appc-conf
            subPath: aaiclient.properties
          - mountPath: /var/log/onap
            name: appc-logs
          - mountPath: /opt/opendaylight/current/etc/org.ops4j.pax.logging.cfg
            name: appc-log-config
            subPath: org.ops4j.pax.logging.cfg
          resources:
{{ toYaml .Values.resources | indent 12 }}
        {{- if .Values.nodeSelector }}
        nodeSelector:
{{ toYaml .Values.nodeSelector | indent 10 }}
        {{- end -}}
        {{- if .Values.affinity }}
        affinity:
{{ toYaml .Values.affinity | indent 10 }}
        {{- end }}

        # side car containers
        - name: filebeat-onap
          image: "{{ .Values.global.loggingRepository }}/{{ .Values.global.loggingImage }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          volumeMounts:
          - mountPath: /usr/share/filebeat/filebeat.yml
            name: filebeat-conf
            subPath: filebeat.yml
          - mountPath: /var/log/onap
            name: appc-logs
          - mountPath: /usr/share/filebeat/data
            name: appc-data-filebeat
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: filebeat-conf
          configMap:
            name: {{ include "common.name" . }}-filebeat-configmap
        - name: appc-log-config
          configMap:
            name: {{ include "common.name" . }}-logging-cfg-configmap
        - name: appc-logs
          emptyDir: {}
        - name: appc-data-filebeat
          emptyDir: {}
        - name: appc-conf
          configMap:
            name: {{ include "common.name" . }}-configmap
      imagePullSecrets:
      - name: "{{ include "common.name" . }}-docker-registry-key"
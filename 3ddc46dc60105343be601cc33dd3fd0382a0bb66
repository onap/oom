{
  "comments": [
    {
      "key": {
        "uuid": "04120928_e3c0d7a4",
        "filename": ".ci/find-tabs.sh",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 3685
      },
      "writtenOn": "2021-12-12T20:25:30Z",
      "side": 1,
      "message": "As a matter of example, the -r grep option is not supported in some UN*X and BSD grep variants\nfor example OpenBSD one https://man.openbsd.org/grep\nTheir extended regular (-E) expression might also give different results than the GNU implementation implicitly used here",
      "revId": "3ddc46dc60105343be601cc33dd3fd0382a0bb66",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56a8d8eb_76acacec",
        "filename": ".ci/find-tabs.sh",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 2319
      },
      "writtenOn": "2021-12-14T08:52:31Z",
      "side": 1,
      "message": "this will be used in a controlled environnment (the CI) where we\u0027re sure we have the right grep.\n\nfor other use, precommit is there for that.",
      "parentUuid": "04120928_e3c0d7a4",
      "revId": "3ddc46dc60105343be601cc33dd3fd0382a0bb66",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f958f24_8176b918",
        "filename": ".ci/find-trailing-whitespaces.sh",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 3685
      },
      "writtenOn": "2021-12-12T20:25:30Z",
      "side": 1,
      "message": "same GNUism present here",
      "revId": "3ddc46dc60105343be601cc33dd3fd0382a0bb66",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7413646_990c64bb",
        "filename": ".ci/find-trailing-whitespaces.sh",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 2319
      },
      "writtenOn": "2021-12-14T08:52:31Z",
      "side": 1,
      "message": "this will be used in a controlled environnment (the CI) where we\u0027re sure we have the right grep.\n\nfor other use, precommit is there for that.",
      "parentUuid": "5f958f24_8176b918",
      "revId": "3ddc46dc60105343be601cc33dd3fd0382a0bb66",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae16e25d_9494f70b",
        "filename": ".gitlab-ci.yml",
        "patchSetId": 6
      },
      "lineNbr": 141,
      "author": {
        "id": 3685
      },
      "writtenOn": "2021-12-12T20:25:30Z",
      "side": 1,
      "message": "IMO  such apt-get commands can be very verbose and their output will have an added-value close to zero in such a context. I propose to use them with -qq and a few other tricks.\ncf https://gerrit.onap.org/r/c/oom/+/126205\n\nAlso with the --yes option, installed packages might depend on a newer version of python3 that would be automatically installed.\nI understand the image python:3.7 here is maintained by Gitlab but I don\u0027t know the details how.\nSo I cannot completely evacuate the risk that a python version different than 3.7 will be finally used at the end in this section.\nIs this so problematic? Nothing is less sure ðŸ˜Š\nWhether or  not, maybe a different image would be more indicated here.\nI observed these commands lead to the installation of a lot of packages purposely removed by the Gitlab maintainers. And this takes a lot of time, about as long as the linters execution time itself...",
      "revId": "3ddc46dc60105343be601cc33dd3fd0382a0bb66",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "008bacd2_d388464c",
        "filename": ".gitlab-ci.yml",
        "patchSetId": 6
      },
      "lineNbr": 141,
      "author": {
        "id": 2319
      },
      "writtenOn": "2021-12-14T08:52:31Z",
      "side": 1,
      "message": "I understand your concern on the output and I\u0027ll add -qq\nlibenchant and curl doesn\u0027t have dependencies on python so no worries here.\n\nI\u0027ve thought about creating our own image for that but I\u0027ve decided to stay this way and see if we have side effects.",
      "parentUuid": "ae16e25d_9494f70b",
      "revId": "3ddc46dc60105343be601cc33dd3fd0382a0bb66",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f37c6d66_8576305a",
        "filename": ".gitlab-ci.yml",
        "patchSetId": 6
      },
      "lineNbr": 259,
      "author": {
        "id": 3685
      },
      "writtenOn": "2021-12-12T20:25:30Z",
      "side": 1,
      "message": "I think only helm:fast is really required here.\nThe other linters are more about code style.\nAnd they can fail on code that perfectly pass the other tests.\nMaybe it is done on purpose but I am not sure of that.\nCan you confirm it is really relevant to keep such dependencies here?",
      "revId": "3ddc46dc60105343be601cc33dd3fd0382a0bb66",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3dc417a0_b5c2ada1",
        "filename": ".gitlab-ci.yml",
        "patchSetId": 6
      },
      "lineNbr": 259,
      "author": {
        "id": 2319
      },
      "writtenOn": "2021-12-14T08:52:31Z",
      "side": 1,
      "message": "nope, I don\u0027t want to waste \"gating time\" if bashisms / trailing whitespaces / tabs are present.\n\nit\u0027ll need another change in the code and then instead of launching 2 gates, let\u0027s have a fast fail on this",
      "parentUuid": "f37c6d66_8576305a",
      "revId": "3ddc46dc60105343be601cc33dd3fd0382a0bb66",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e80a674_44b49a75",
        "filename": ".pylintrc",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 3685
      },
      "writtenOn": "2021-12-12T20:25:30Z",
      "side": 1,
      "message": "3.43 is actually a quite low pylint score.\nShouldn\u0027t we clean a little more the python file before activating this profile ?\nI don\u0027t think pylint has been enforced yet",
      "revId": "3ddc46dc60105343be601cc33dd3fd0382a0bb66",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8652ef2_4de83cc6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 3685
      },
      "writtenOn": "2021-12-12T20:25:30Z",
      "side": 1,
      "message": "\"use\" rather ?",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 4
      },
      "revId": "3ddc46dc60105343be601cc33dd3fd0382a0bb66",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a14b5877_9dc16355",
        "filename": "tox.ini",
        "patchSetId": 6
      },
      "lineNbr": 62,
      "author": {
        "id": 3685
      },
      "writtenOn": "2021-12-12T20:25:30Z",
      "side": 1,
      "message": "Such relative path script calls triggers an error.\nThey can only work with scripts at the root of the tox working directory.\nOtherwise, {toxinidir}/ must be prepended to their paths.\nI have fixed it in https://gerrit.onap.org/r/c/oom/+/126199.\nPlease rebase on top of its relation chain.",
      "revId": "3ddc46dc60105343be601cc33dd3fd0382a0bb66",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}
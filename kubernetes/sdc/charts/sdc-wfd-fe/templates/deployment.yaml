# Copyright Â© 2018 Amdocs, Bell Canada
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ include "common.release" . }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ include "common.release" . }}
    spec:
      initContainers:
      - name: {{ include "common.name" . }}-readiness
        command:
        - /root/ready.py
        args:
        - --container-name
        - "sdc-wfd-be"
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: "{{ .Values.global.readinessRepository }}/{{ .Values.global.readinessImage }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
      containers:
        - name: {{ include "common.name" . }}
          image: "{{ include "common.repository" . }}/{{ .Values.image }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          ports:
          - containerPort: {{ template "wfd-fe.internalPort" . }}
          {{ if .Values.liveness.enabled }}
          livenessProbe:
            tcpSocket:
              port: {{ template "wfd-fe.internalPort" . }}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          {{ end }}
          readinessProbe:
            tcpSocket:
              port: {{ template "wfd-fe.internalPort" . }}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
          env:
          - name: ENVNAME
            value: {{ .Values.global.env.name }}
          - name: JAVA_OPTIONS
            value: {{ .Values.config.javaOptions }}
          - name: BACKEND
            value: {{ .Values.config.backendServerURL }}
          - name: IS_HTTPS
            value: "{{ .Values.config.isHttpsEnabled}}"
            {{ if and .Values.config.isHttpsEnabled (eq .Values.security.isDefaultStore false) }}
          - name: KEYSTORE_PASS
            valueFrom:
              secretKeyRef: {name: {{ include "common.release" . }}-sdc-cs-secrets, key: keystore_password}
          - name: TRUSTSTORE_PASS
            valueFrom:
              secretKeyRef: {name: {{ include "common.release" . }}-sdc-cs-secrets, key: truststore_password}
          - name: TRUSTSTORE_PATH
            value: "{{ .Values.security.storePath }}/{{ .Values.security.truststoreFilename }}"
          - name: KEYSTORE_PATH
            value: "{{ .Values.security.storePath }}/{{ .Values.security.keystoreFilename }}"
          - name: TRUST_ALL
            value: "{{ .Values.config.isTrustAll}}"
            {{ end }}
          volumeMounts:
          - name: {{ include "common.fullname" . }}-localtime
            mountPath: /etc/localtime
            readOnly: true
          - name: sdc-cert
            mountPath: /var/lib/jetty/etc/org.onap.sdc.p12
            subPath: org.onap.sdc.p12
          - name: sdc-cert
            mountPath: /var/lib/jetty/etc/org.onap.sdc.trust.jks
            subPath: org.onap.sdc.trust.jks
          resources:
{{ include "common.resources" . | indent 12 }}
        {{- if .Values.nodeSelector }}
        nodeSelector:
{{ toYaml .Values.nodeSelector | indent 10 }}
        {{- end -}}
        {{- if .Values.affinity }}
        affinity:
{{ toYaml .Values.affinity | indent 10 }}
        {{- end }}
        # side car containers
        - name: {{ include "common.name" . }}-filebeat-onap
          image: "{{ .Values.global.loggingRepository }}/{{ .Values.global.loggingImage }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          volumeMounts:
          - name: {{ include "common.fullname" . }}-filebeat-conf
            mountPath: /usr/share/filebeat/filebeat.yml
            subPath: filebeat.yml
          - name: {{ include "common.fullname" . }}-logs
            mountPath: /var/log/onap
          - name: {{ include "common.fullname" . }}-data-filebeat
            mountPath: /usr/share/filebeat/data
      volumes:
        - name: {{ include "common.fullname" . }}-localtime
          hostPath:
            path: /etc/localtime
        - name: sdc-cert
          secret:
            secretName: sdc-cert
        - name: {{ include "common.fullname" . }}-filebeat-conf
          configMap:
            name: {{ include "common.release" . }}-sdc-filebeat-configmap
        - name: {{ include "common.fullname" . }}-data-filebeat
          emptyDir: {}
        - name:  {{ include "common.fullname" . }}-logs
          emptyDir: {}
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"
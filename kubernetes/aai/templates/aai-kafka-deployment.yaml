apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: aai-kafka
  namespace: "{{ .Values.nsPrefix }}-aai"
spec:
  selector:
    matchLabels:
      app: dockerfiles-kafka-1
  template:
    metadata:
      labels:
        app: dockerfiles-kafka-1
      name: dockerfiles-kafka-1
    spec:
      containers:
      - image: dockerfiles_kafka:latest
        imagePullPolicy: IfNotPresent
        name: dockerfiles-kafka-1
        ports:
        - containerPort: 9092
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 5
          periodSeconds: 10
        env:
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper-service.{{ .Values.nsPrefix }}:2181"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: "dockerfiles-kafka-1"
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_PORT
          value: "9092"
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: docker-socket
        - mountPath: /kafka
          name: kafka-data
        - mountPath: /start-kafka.sh
          name: start-kafka
      restartPolicy: Always
      volumes:
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: kafka-data
        hostPath:
          path: "/dockerdata-nfs/{{ .Values.nsPrefix }}/aai/aai-kafka/data-kafka/"
      - name: start-kafka
        hostPath:
          path: "/dockerdata-nfs/{{ .Values.nsPrefix }}/aai/aai-kafka/scripts/start-kafka.sh"
      imagePullSecrets:
      - name: "{{ .Values.nsPrefix }}-docker-registry-key"

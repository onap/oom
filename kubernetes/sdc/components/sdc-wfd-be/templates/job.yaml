{{/*
# Copyright © 2017 Amdocs, AT&T, Bell Canada
# Modifications Copyright © 2018  ZTE
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}

{{ if .Values.initJob.enabled }}
apiVersion: batch/v1
kind: Job
metadata: {{- include "common.resourceMetadata" . | nindent 2 }}
spec:
  backoffLimit: 20
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}-job
        release: {{ include "common.release" . }}
    spec:
      restartPolicy: Never
      initContainers:
        - name: {{ include "common.name" . }}-init-readiness
          image: {{ include "repositoryGenerator.image.readiness" . }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          command:
          - /app/ready.py
          args:
          - --job-name
          - {{ include "common.release" . }}-sdc-cs
          - "-t"
          - "20"
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 3m
              memory: 20Mi
      containers:
      - name: {{ include "common.name" . }}-job
        image:
          {{ include "repositoryGenerator.repository" . }}/{{ .Values.configInitImage }}
        imagePullPolicy:
          {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        {{- if include "common.onServiceMesh" . }}
        args:
        - echo "waiting 10s for istio side cars to be up"; sleep 10s; /start.sh
        command:
        - /bin/sh
        - -c
        {{- end }}
        volumeMounts:
          - name: {{ include "common.fullname" . }}-cqlshrc
            mountPath: /home/sdc/.cassandra
        env:
          - name: CS_HOST
            value: "{{ .Values.global.sdc_cassandra.serviceName }}"
          - name: CS_PORT
            value: {{ .Values.config.cassandraClientPort | quote }}
          - name: CS_AUTHENTICATE
            value: {{ .Values.config.cassandraAuthenticationEnabled | quote }}
          - name: CS_USER
            valueFrom: {secretKeyRef: {name: {{ include "common.release" . }}-sdc-cs-secrets, key: sdc_user}}
          - name: CS_PASSWORD
            valueFrom: {secretKeyRef: {name: {{ include "common.release" . }}-sdc-cs-secrets, key: sdc_password}}
        resources: {{ include "common.resources" . | nindent 10 }}
      {{ include "common.waitForJobContainer" . | indent 6 | trim }}
      serviceAccountName: {{ include "common.fullname" (dict "suffix" "read" "dot" . )}}
      volumes:
        - name: {{ include "common.fullname" . }}-cqlshrc
          configMap:
            name: {{ include "common.release" . }}-sdc-cqlshrc
      imagePullSecrets:
        - name: "{{ include "common.namespace" . }}-docker-registry-key"
{{ end }}

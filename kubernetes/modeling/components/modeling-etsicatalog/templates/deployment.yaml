{{/*
# Copyright Â© 2017 Amdocs, Bell Canada
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ include "common.release" . }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ include "common.name" . }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ include "common.release" . }}
      annotations:
        sidecar.istio.io/inject: "{{.Values.istioSidecar}}"
    spec:
      initContainers:
      - command:
        - /app/ready.py
        args:
        - -j
        - "{{ include "common.release" . }}-{{ include "common.name" . }}-config-job"
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: {{ include "repositoryGenerator.image.readiness" . }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}-job-readiness
      {{ include "common.readinessCheck.waitFor" (dict "dot" . "wait_for" .Values.readinessCheck.wait_for.msb ) | indent 6 | trim }}
      - command:
        - /bin/sh
        - -c
        - chown -R 1000:1000 /service/modeling/etsicatalog/static
        image: {{ include "repositoryGenerator.image.busybox" . }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}-init
        volumeMounts:
        - name: {{ include "common.fullname" . }}-etsicatalog
          mountPath: /service/modeling/etsicatalog/static
      containers:
        - name: {{ include "common.name" . }}
          image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.image }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          ports:
          - containerPort: {{ .Values.service.internalPort }}
          # disable liveness probe when breakpoints set in debugger
          # so K8s doesn't restart unresponsive container
          {{ if .Values.liveness.enabled }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          {{ end }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
          env:
          - name: SSL_ENABLED
            value: "{{ .Values.config.ssl_enabled }}"
          - name: MSB_ENABLED
            value: "{{ .Values.config.msb_enabled }}"
          - name: MSB_ADDR
            value: "{{ .Values.config.msbProtocol }}://{{ .Values.config.msbServiceName }}:{{ .Values.config.msbPort }}"
          - name: SDC_ADDR
            value: "{{ .Values.config.sdcProtocol }}://{{ .Values.config.sdcServiceName }}:{{ .Values.config.sdcPort }}"
          - name: DMAAP_ENABLED
            value: "{{ .Values.config.dmaap_enabled }}"
          - name: DMAAP_ADDR
            value: "{{ .Values.config.dmaapProtocol }}://{{ .Values.config.dmaapServiceName }}:{{ .Values.config.dmaapPort }}"
          - name: DB_IP
            value: "{{ include "common.mariadbService" . }}"
          - name: DB_PORT
            value: "{{ include "common.mariadbPort" . }}"
          - name: DB_USER
            {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "modeling-db-secret" "key" "login") | indent 12 }}
          - name: DB_PASSWD
            {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "modeling-db-secret" "key" "password") | indent 12 }}
          volumeMounts:
          - name: {{ include "common.fullname" . }}-etsicatalog
            mountPath: /service/modeling/etsicatalog/static
          - name: {{ include "common.fullname" . }}-localtime
            mountPath: /etc/localtime
            readOnly: true
          - name: {{ include "common.fullname" . }}-logs
            mountPath: {{ .Values.log.path }}
          - name: {{ include "common.fullname" . }}-logconfig
            mountPath: /opt/modeling/etsicatalog/config/log.yml
            subPath: log.yml
          resources:
{{ include "common.resources" . | indent 12 }}
        {{- if .Values.nodeSelector }}
        nodeSelector:
{{ toYaml .Values.nodeSelector | indent 10 }}
        {{- end -}}
        {{- if .Values.affinity }}
        affinity:
{{ toYaml .Values.affinity | indent 10 }}
        {{- end }}

        # side car containers
      {{ include "common.log.sidecar" . | nindent 8 }}
      serviceAccountName: {{ include "common.fullname" (dict "suffix" "read" "dot" . )}}
      volumes:
        - name: {{ include "common.fullname" . }}-etsicatalog
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "common.fullname" . }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: {{ include "common.fullname" . }}-localtime
          hostPath:
            path: /etc/localtime
        - name:  {{ include "common.fullname" . }}-logs
          emptyDir: {}
        - name: {{ include "common.fullname" . }}-logconfig
          configMap:
            name : {{ include "common.fullname" . }}-logging-configmap

        {{ include "common.log.volumes" . | nindent 8 }}
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"

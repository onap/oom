{{/*
# Copyright Â© 2018 Amdocs, Bell Canada
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ include "common.name" . }}
        image: {{ .Values.repository }}/{{ .Values.image }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
          # disable liveness probe when breakpoints set in debugger
          # so K8s doesn't restart unresponsive container
        {{ if .Values.liveness.enabled }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.liveness.periodSeconds }}
        {{ end }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.readiness.periodSeconds }}
        env:
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "common.fullname" . }}-pass
                key: DB_PASSWORD
          - name: EMAIL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "common.fullname" . }}-pass
                key: EMAIL_PASSWORD
          - name: NAPALM_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "common.fullname" . }}-pass
                key: NAPALM_PASSWORD
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "common.fullname" . }}-pass
                key: SECRET_KEY
          - name: SUPERUSER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "common.fullname" . }}-pass
                key: SUPERUSER_PASSWORD
          - name: SUPERUSER_API_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "common.fullname" . }}-pass
                key: SUPERUSER_API_TOKEN
          - name: ALLOWED_HOSTS
            value: {{ .Values.config.allowedHosts | quote }}
          - name: DB_NAME
            value: {{ .Values.config.dbName }}
          - name: DB_USER
            value: {{ .Values.config.dbUser }}
          - name: DB_HOST
            value: {{ .Values.config.dbHost }}
          - name: EMAIL_SERVER
            value: {{ .Values.config.emailServer }}
          - name: EMAIL_PORT
            value: {{ .Values.config.emailPort  | quote }}
          - name: EMAIL_USERNAME
            value: {{ .Values.config.emailUsername }}
          - name: EMAIL_TIMEOUT
            value: {{ .Values.config.emailTimeout  | quote }}
          - name: EMAIL_FROM
            value: {{ .Values.config.emailFrom }}
          - name: MEDIA_ROOT
            value: {{ .Values.config.mediaRoot }}
          - name: NAPALM_USERNAME
            value: {{ .Values.config.napalmUsername }}
          - name: NAPALM_TIMEOUT
            value: {{ .Values.config.napalmTimeout  | quote }}
          - name: MAX_PAGE_SIZE
            value: {{ .Values.config.maxPageSize  | quote }}
          - name: SUPERUSER_NAME
            value: {{ .Values.config.superuserName }}
          - name: SUPERUSER_EMAIL
            value: {{ .Values.config.superuserEmail }}
        volumeMounts:
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        - mountPath: /opt/netbox/startup_scripts
          name: {{ include "common.fullname" . }}-startupscripts-config
        - mountPath: /opt/netbox/initializers
          name: {{ include "common.fullname" . }}-initializers-config
        - mountPath: /etc/netbox/config
          name: {{ include "common.fullname" . }}-configuration-config
        - name: {{ include "common.fullname" . }}
          mountPath: /opt/netbox/netbox/static
        resources:
{{ include "common.resources" . | indent 12 }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 10 }}
      {{- end -}}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 10 }}
      {{- end }}
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: {{ include "common.fullname" . }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-{{ .Values.persistence.staticPvName }}
        - name: {{ include "common.fullname" . }}-startupscripts-config
          configMap:
            name: {{ include "common.fullname" . }}-startupscripts-configmap
        - name: {{ include "common.fullname" . }}-initializers-config
          configMap:
            name: {{ include "common.fullname" . }}-initializers-configmap
        - name: {{ include "common.fullname" . }}-configuration-config
          configMap:
            name: {{ include "common.fullname" . }}-configuration-configmap
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"

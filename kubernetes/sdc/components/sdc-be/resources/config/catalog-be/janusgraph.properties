storage.backend=cql
storage.hostname={{ .Values.cassandra.hostname }}
storage.port={{ .Values.cassandra.port }}
storage.username={{ .Values.cassandra.cassandraUsername }}
storage.password={{ .Values.cassandra.cassandraPassword }}
storage.connection-timeout={{ .Values.cassandra.connectionTimeout }}
storage.cql.keyspace=sdctitan

storage.cql.ssl.enabled={{ .Values.cassandra.cassandraSslEnabled }}
storage.cql.ssl.keystore.location={{ .Values.cassandra.keystoreLocation }}
storage.cql.ssl.keystore.password={{ .Values.cassandra.keystorePassword }}
storage.cql.ssl.truststore.location={{ .Values.cassandra.truststoreLocation }}
storage.cql.ssl.truststore.password={{ .Values.cassandra.truststorePassword }}

storage.cql.read-consistency-level={{ .Values.cassandra.readConsistencyLevel }}
storage.cql.write-consistency-level={{ .Values.cassandra.writeConsistencyLevel }}
storage.cql.replication-strategy-class=NetworkTopologyStrategy


{{- $replicationStrategyOptions := "" -}}
{{- if .Values.pairEnvName | eq "" }}
{{- $replicationStrategyOptions = printf "%s,%d" .Values.cassandra.datacenterName (int .Values.cassandra.replicationFactor) -}}
{{- else }}
{{- $replicationStrategyOptions = printf "%s,%d,%s%s,%d" .Values.cassandra.datacenterName (int .Values.cassandra.replicationFactor) .Values.cassandra.cluster_name .Values.pairEnvName (int .Values.cassandra.replicationFactor) -}}
{{- end }}

storage.cql.replication-strategy-options={{ $replicationStrategyOptions }}

storage.cql.local-datacenter={{ .Values.cassandra.datacenterName }}

cache.db-cache ={{ .Values.cassandra.db_cache }}
cache.db-cache-clean-wait = 20
cache.db-cache-time = 180000
cache.db-cache-size = 0.5

cache.tx-cache-size = 1000000

storage.lock.retries=5
graph.replace-instance-if-exists=true

{{/*
# Copyright (c) 2020 Bell Canada, Deutsche Telekom
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}

apiVersion: apps/v1
kind: Deployment
metadata: {{- include "common.resourceMetadata" . | nindent 2 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector: {{- include "common.selectors" . | nindent 4 }}
  template:
    metadata: {{- include "common.templateMetadata" . | nindent 6 }}
    spec:
      containers:
        - name: {{ include "common.name" . }}
          image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.image }}
          command:
            - bash
          args:
            - '-c'
            - 'AUTH_TOKEN=`echo -n $API_USERNAME:$API_PASSWORD | base64` /opt/app/onap/python/start.sh'
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          ports: {{- include "common.containerPorts" . | nindent 12 }}
          {{ if .Values.liveness.enabled }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.liveness.port }}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.liveness.timeoutSeconds }}
          {{ end }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.liveness.port }}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.readiness.timeoutSeconds }}
          env:
          - name: APP_PORT
            value: {{ .Values.config.appPort }}
          - name: AUTH_TYPE
            value: {{ .Values.config.authType }}
          - name: API_USERNAME
            {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "api-credentials" "key" "login") | nindent 12 }}
          - name: API_PASSWORD
            {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "api-credentials" "key" "password") | nindent 12 }}
          - name: LOG_FILE
            value: {{ .Values.config.logFile }}
          - name: ARTIFACT_MANAGER_PORT
            value: {{ .Values.config.artifactManagerPort }}
          - name: ARTIFACT_MANAGER_SERVER_LOG_FILE
            value: {{ .Values.config.artifactManagerLogFile }}
          volumeMounts:
          - mountPath: /etc/localtime
            name: localtime
            readOnly: true
          - mountPath: {{ .Values.persistence.deployedBlueprint }}
            name: {{ include "common.fullname" . }}-blueprints
          resources:
{{ include "common.resources" . | nindent 12 }}
        {{- if .Values.nodeSelector }}
        nodeSelector:
{{ toYaml .Values.nodeSelector | nindent 10 }}
        {{- end -}}
        {{- if .Values.affinity }}
        affinity:
{{ toYaml .Values.affinity | nindent 10 }}
        {{- end }}
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        # Py executor shares the blueprintsprocessor storage (for now) to
        # share uploaded CBA files. In the future it will be deprecated
        # when all parts of the CDS will make use of Artifact Manager
        - name: {{ include "common.fullname" . }}-blueprints
          persistentVolumeClaim:
            claimName: {{ include "common.release" . }}-cds-blueprints
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"

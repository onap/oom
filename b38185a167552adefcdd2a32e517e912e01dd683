{
  "comments": [
    {
      "key": {
        "uuid": "2aa2fe6f_d2cb1082",
        "filename": "kubernetes/cds/charts/cds-blueprints-processor/templates/deployment.yaml",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 2319
      },
      "writtenOn": "2020-04-24T16:23:19Z",
      "side": 1,
      "message": "Are you sure for 100:101? it’s usually 1000:1001",
      "revId": "b38185a167552adefcdd2a32e517e912e01dd683",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4552653f_1ac349f6",
        "filename": "kubernetes/cds/charts/cds-blueprints-processor/templates/deployment.yaml",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 5732
      },
      "writtenOn": "2020-04-23T22:10:31Z",
      "side": 1,
      "message": "i would look into SecurityContext instead of this. SecurityContext allows you to define the groupid of all mounted volume of a pod.https://kubernetes.io/docs/tasks/configure-pod-container/security-context/.",
      "range": {
        "startLine": 88,
        "startChar": 3,
        "endLine": 98,
        "endChar": 60
      },
      "revId": "b38185a167552adefcdd2a32e517e912e01dd683",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "470c84f7_0bb1ae5d",
        "filename": "kubernetes/cds/charts/cds-blueprints-processor/templates/deployment.yaml",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 2091
      },
      "writtenOn": "2020-04-23T23:32:56Z",
      "side": 1,
      "message": "Security context is for the entire pod, which would include initcontainers too. And Initcontainer currently contain ready.py that is not non-root. Also in container level security context, there is no fsGroup or usergroup allowed, so I cannot use security context here in container level. I referred other modules like, dcae, aaf, dmaap, multicloud and they seem to have fixed this in the same way. The pod level security context is blocking initcontainers.",
      "parentUuid": "4552653f_1ac349f6",
      "range": {
        "startLine": 88,
        "startChar": 3,
        "endLine": 98,
        "endChar": 60
      },
      "revId": "b38185a167552adefcdd2a32e517e912e01dd683",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2eaa3806_dd1b8ae0",
        "filename": "kubernetes/cds/charts/cds-blueprints-processor/templates/deployment.yaml",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 2319
      },
      "writtenOn": "2020-04-24T16:23:19Z",
      "side": 1,
      "message": "Sébastien solution is better and you’re right Janani we never really used it in ONAP (but we should). \nYou can do it per deployment / sts but you can override per pod if needed. \nI would prefer that you try this if it’s not too long\n\nI believe we could also try ready.py as non root as there’s nothing but a python script in it.",
      "parentUuid": "470c84f7_0bb1ae5d",
      "range": {
        "startLine": 88,
        "startChar": 3,
        "endLine": 98,
        "endChar": 60
      },
      "revId": "b38185a167552adefcdd2a32e517e912e01dd683",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}
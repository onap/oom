# Copyright © 2017 Amdocs, Bell Canada
# Modifications Copyright © 2018 AT&T
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#################################################################
# Global configuration defaults.
#################################################################
global:
  nodePortPrefix: 302
  persistence: {}
  centralizedLoggingEnabled: true
  #AAF service
  aafEnabled: true

#################################################################
# AAF part
#################################################################
certInitializer:
  permission_user: 1000
  permission_group: 999
  addconfig: true
  keystoreFile: "org.onap.clamp.p12"
  truststoreFile: "org.onap.clamp.trust.jks"
  keyFile: "org.onap.clamp.keyfile"
  truststoreFileONAP: "truststoreONAPall.jks"
  clamp_key: "org.onap.clamp.crt.key"
  clamp_pem: "org.onap.clamp.key.pem"
  clamp_ca_certs_pem: "clamp-ca-certs.pem"
  nameOverride: clamp-kibana-cert-initializer
  aafDeployFqi: deployer@people.osaaf.org
  aafDeployPass: demo123456!
  # aafDeployCredsExternalSecret: some secret
  fqdn: clamp
  fqi: clamp@clamp.onap.org
  public_fqdn: clamp.onap.org
  cadi_longitude: "0.0"
  cadi_latitude: "0.0"
  app_ns: org.osaaf.aaf
  credsPath: /opt/app/osaaf/local
  aaf_add_config: >
    /opt/app/aaf_config/bin/agent.sh local showpass {{.Values.fqi}} {{ .Values.fqdn }} > {{ .Values.credsPath }}/mycreds.prop;
    export $(/opt/app/aaf_config/bin/agent.sh local showpass | grep '^c' | xargs -0);
    cd {{ .Values.credsPath }};
    openssl pkcs12 -in {{ .Values.keystoreFile }} -nocerts -nodes -passin pass:$cadi_keystore_password_p12 > {{ .Values.clamp_key }};
    openssl pkcs12 -in {{ .Values.keystoreFile }} -clcerts -nokeys -passin pass:$cadi_keystore_password_p12 > {{ .Values.clamp_pem }};
    openssl pkcs12 -in {{ .Values.keystoreFile }} -cacerts -nokeys -chain -passin pass:$cadi_keystore_password_p12 > {{ .Values.clamp_ca_certs_pem }};
    chmod a+rx *;

flavor: small

#################################################################
# Application configuration defaults.
#################################################################
# application image
image: onap/clamp-dashboard-kibana:5.0.4
pullPolicy: Always

# flag to enable debugging - application support required
debugEnabled: false

# application configuration
#the 'sslEnabled flag' here below is for the kibana UI connection (web browser connection to kibana)
config:
  elasticsearchServiceName: cdash-es
  elasticsearchPort: 9200
  elasticUSR: kibanaserver
  elasticPWD: kibanaserver
  sslEnabled: true
  sslPemCertFilePath: /usr/share/kibana/config/keystore/org.onap.clamp.crt.pem
  sslPemkeyFilePath: /usr/share/kibana/config/keystore/org.onap.clamp.key.pem

# default number of instances
replicaCount: 1

nodeSelector: {}

affinity: {}

# probe configuration parameters
liveness:
  initialDelaySeconds: 360
  periodSeconds: 30
  # necessary to disable liveness probe when setting breakpoints
  # in debugger so K8s doesn't restart unresponsive container
  enabled: true

readiness:
  initialDelaySeconds: 360
  periodSeconds: 30

#internal ssl security scheme for elasticsearch connection mainly
security:
  ssl:
    enabled: true

service:
  #Example service definition with external, internal and node ports.
  #Services may use any combination of ports depending on the 'type' of
  #service being defined.
  type: NodePort
  name: cdash-kibana
  portName: cdash-kibana-http
  externalPort: 5601
  internalPort: 5601
  nodePort: 90
ingress:
  enabled: false
  service:
    - baseaddr: "cdash-kibana"
      name: "cdash-kibana"
      port: 5601
  config:
    ssl: "redirect"

#resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  #
  # Example:
  # Configure resource requests and limits
  # ref: http://kubernetes.io/docs/user-guide/compute-resources/
  # Minimum memory for development is 2 CPU cores and 4GB memory
  # Minimum memory for production is 4 CPU cores and 8GB memory
resources:
  small:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 10m
      memory: 750Mi
  large:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 10m
      memory: 750Mi
  unlimited: {}

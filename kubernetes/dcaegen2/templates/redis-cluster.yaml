# ================================================================================
# Copyright (c) 2018 AT&T Intellectual Property. All rights reserved.
# ================================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============LICENSE_END=========================================================


apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Values.nsPrefix }}-{{ .Chart.Name }}-redis-cluster"
  labels:
    name: "{{ .Values.nsPrefix }}-{{ .Chart.Name }}-redis-cluster"
data:
  redis.conf: |+
    cluster-enabled yes
    cluster-require-full-coverage no
    cluster-node-timeout 15000
    cluster-config-file /data/nodes.conf
    cluster-migration-barrier 1
    appendonly yes
    protected-mode no
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "false"
  name: "{{ .Values.nsPrefix }}-{{ .Chart.Name }}-redis-cluster"
  labels:
    name: "{{ .Values.nsPrefix }}-{{ .Chart.Name }}-redis-cluster"
spec:
  type: NodePort
  ports:
  - port: 6379
    targetPort: 6379
    name: client
  - port: 16379
    targetPort: 16379
    name: gossip
  #clusterIP: None
  selector:
    name: "{{ .Values.nsPrefix }}-{{ .Chart.Name }}-redis-cluster"
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: "{{ .Values.nsPrefix }}-{{ .Chart.Name }}-redis-cluster"
  labels:
    name: "{{ .Values.nsPrefix }}-{{ .Chart.Name }}-redis-cluster"
spec:
  serviceName: "{{ .Values.nsPrefix }}-{{ .Chart.Name }}-redis-cluster"
  replicas: 6
  template:
    metadata:
      labels:
        name: "{{ .Values.nsPrefix }}-{{ .Chart.Name }}-redis-cluster"
    spec:
      imagePullSecrets:
      - name: "{{ .Values.nsPrefix }}-docker-registry-key"
      containers:
      - name: "{{ .Values.nsPrefix }}-{{ .Chart.Name }}-redis-cluster"
        image: "{{ .Values.image.rediscluster.tag }}:{{ .Values.image.rediscluster.version }}"
        ports:
        - containerPort: 6379
          name: client
        - containerPort: 16379
          name: gossip
        command: ["redis-server"]
        args: ["/conf/redis.conf"]
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -h $(hostname) ping"
          initialDelaySeconds: 15
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -h $(hostname) ping"
          initialDelaySeconds: 20
          periodSeconds: 3
        volumeMounts:
        - name: conf
          mountPath: /conf
          readOnly: false
        - name: data
          mountPath: /data
          readOnly: false
      volumes:
      - name: conf
        configMap:
          name: "{{ .Values.nsPrefix }}-{{ .Chart.Name }}-redis-cluster"
          items: 
          - key: redis.conf
            path: redis.conf
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        name: "{{ .Values.nsPrefix }}-{{ .Chart.Name }}-redis-cluster"
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes: [ "ReadWriteOnce" ]
      #storageClassName: manual
      resources:
        requests:
          storage: 10Mi

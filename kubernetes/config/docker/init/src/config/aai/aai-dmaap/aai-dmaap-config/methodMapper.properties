//##############################################################################
// BSD License
//  
// Copyright (c) 2016, AT&T Intellectual Property.  All other rights reserved.
//  
// Redistribution and use in source and binary forms, with or without modification, are permitted
// provided that the following conditions are met:
//  
// 1. Redistributions of source code must retain the above copyright notice, this list of conditions
//    and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright notice, this list of
//    conditions and the following disclaimer in the documentation and/or other materials provided
//    with the distribution.
// 3. All advertising materials mentioning features or use of this software must display the
//    following acknowledgement:  This product includes software developed by the AT&T.
// 4. Neither the name of AT&T nor the names of its contributors may be used to endorse or
//   promote products derived from this software without specific prior written permission.
// 
//THIS SOFTWARE IS PROVIDED BY AT&T INTELLECTUAL PROPERTY ''AS IS'' AND ANY EXPRESS OR
//IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
//MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
//SHALL AT&T INTELLECTUAL PROPERTY BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
//SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
//PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS;
//OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
//CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
//ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
//DAMAGE.
//#############################################################################
//
// 	Json object holds the method mapping.Update the JSON object with the proper route to logical mapping based 
// 	on the example provided below : 
//  "helloWorld"  = Service Name
//  "method"   = http method
//  "url" = the url component from the route
//  "logicalName"=  When a combination of method and url from the route matches the json object , 
//  the logical name is put in the http header as "x-CSI-ServiceName" and "x-CSI-MethodName 
//  ""dme2url"= if provided it register the endpoint to GRM, it is optional. 
  
{
    "helloWorld": [
        {
            "method": "get",
            "url": "/rest/dmaap/v1/helloWorld",
            "logicalName": "GetMethod(Logical)"
        },
        {
            "method": "get",
            "url": "/services/dmaap/v1/jaxrsExample/jaxrs-services/echo/{input}",
            "logicalName": "GetJaxrsExampleEcho(Logical)",
            "dme2url": "/services/dmaap/v1/jaxrsExample"
        },
        {
            "method": "get",
            "url": "/services/dmaap/v1/jaxrsExample/jaxrs-services/property/{fileName}/{input}",
            "logicalName": "GetJaxrsExampleProperty(Logical)",
            "dme2url": "/services/dmaap/v1/jaxrsExample"
        }
    ],
	     "errormessage":
	    [
	        {
	        	"method": "get",
	         	"url": "/services/dmaap/v1/jaxrsExample/errormessage/emls",
	         	"logicalName": "setCAETHeaders(Logical)"
	       	},
	        {
	        	"method": "get",
	        	"url": "/services/dmaap/v1/errorMessageLookupService2",
	        	"logicalName": "setCAETHeaders(Logical)"
	       	}        
	    
	    ]
}
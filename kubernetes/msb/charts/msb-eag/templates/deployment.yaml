{{/*
# Copyright Â© 2018 Amdocs, Bell Canada , ZTE
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ include "common.release" . }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ include "common.name" . }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ include "common.release" . }}
      annotations:
        sidecar.istio.io/inject: "{{.Values.istioSidecar}}"
    spec:
      serviceAccountName: msb
      initContainers:
      - command:
        - /app/ready.py
        args:
        - --container-name
        - msb-discovery
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: "{{ include "common.repository" . }}/{{ .Values.global.readinessImage }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}-readiness
      containers:
        - name: {{ include "common.name" . }}
          image: "{{ include "common.repository" . }}/{{ .Values.image }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          ports:
          - containerPort: {{ .Values.service.internalPort }}
            name: {{ .Values.service.name }}
          - containerPort: {{ .Values.service.internalPortHttps }}
            name: {{ .Values.service.name }}-https
          # disable liveness probe when breakpoints set in debugger
          # so K8s doesn't restart unresponsive container
          {{- if eq .Values.liveness.enabled true }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          {{ end -}}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
          env:
          - name: CONSUL_IP
            value: msb-consul.{{ include "common.namespace" . }}
          - name: SDCLIENT_IP
            value: msb-discovery.{{ include "common.namespace" . }}
          - name: ROUTE_LABELS
            value: {{ .Values.config.routeLabels }}
          volumeMounts:
          - mountPath: /etc/localtime
            name: localtime
            readOnly: true
          - name: {{ include "common.fullname" . }}-cert
            mountPath: /usr/local/openresty/nginx/ssl/cert/cert.crt
            readOnly: true
            subPath: "cert.crt"
          - name: {{ include "common.fullname" . }}-cert
            mountPath: /usr/local/openresty/nginx/html/cert/ca.crt
            readOnly: true
            subPath: "ca.crt"
          - mountPath: /usr/local/apiroute-works/logs
            name: {{ include "common.fullname" . }}-logs
          resources:
{{ include "common.resources" . | indent 12 }}
        {{- if .Values.nodeSelector }}
        nodeSelector:
{{ toYaml .Values.nodeSelector | indent 10 }}
        {{- end -}}
        {{- if .Values.affinity }}
        affinity:
{{ toYaml .Values.affinity | indent 10 }}
        {{- end }}
        # side car containers
        - name: filebeat-onap
          image: "{{ .Values.global.loggingRepository }}/{{ .Values.global.loggingImage }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          volumeMounts:
          - name: {{ include "common.fullname" . }}-filebeat-conf
            mountPath: /usr/share/filebeat/filebeat.yml
            subPath: filebeat.yml
          - name: {{ include "common.fullname" . }}-data-filebeat
            mountPath: /usr/share/filebeat/data
          - name: {{ include "common.fullname" . }}-logs
            mountPath: /var/log/onap/msb/msb-eag
          - mountPath: /opt/ajsc/etc/config/logback.xml
            name: {{ include "common.fullname" . }}-log-conf
            subPath: logback.xml
      volumes:
        - name: {{ include "common.fullname" . }}-cert
          secret:
            secretName: {{ include "common.release" . }}-msb-https-cert
        - name: {{ include "common.fullname" . }}-log-conf
          configMap:
            name: {{ include "common.fullname" . }}-log
        - name: {{ include "common.fullname" . }}-filebeat-conf
          configMap:
            name: {{ include "common.release" . }}-msb-filebeat-configmap
        - name: {{ include "common.fullname" . }}-data-filebeat
          emptyDir: {}
        - name:  {{ include "common.fullname" . }}-logs
          emptyDir: {}
        - name: localtime
          hostPath:
            path: /etc/localtime
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"

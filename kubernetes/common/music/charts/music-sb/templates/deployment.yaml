# Copyright Â© 2017-2020 AT&T, Amdocs, Bell Canada
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata: {{- include "common.resourceMetadata" . | nindent 2 }}
spec:
  selector: {{- include "common.selectors" . | nindent 4 }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata: {{- include "common.templateMetadata" . | nindent 6 }}
    spec:
      imagePullSecrets:
      - name: pullsecret
      containers:
        # MUSIC Container
        - name: "{{ include "common.name" . }}-springboot"
          image: "{{ .Values.repository }}/{{ .Values.image }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          ports: {{ include "common.containerPorts" . | nindent 12  }}
          # disable liveness probe when breakpoints set in debugger
          # so K8s doesn't restart unresponsive container
          {{ if eq .Values.liveness.enabled true }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.liveness.port }}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          {{ end -}}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.readiness.port }}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          env:
          - name: SPRING_OPTS
            value: "{{ .Values.springOpts }}"
          - name: keystore_pw
            {{- include "common.secret.envFromSecret" (dict "global" . "uid" "music-keystore-pw" "key" "password") | indent 12}}
          - name: JAVA_OPTS
            value: "{{ .Values.javaOpts }}"
          - name: DEBUG
            value: "{{ .Values.debug }}"
          volumeMounts:
          - name: localtime
            mountPath: /etc/localtime
            readOnly: true
          - name: properties-music
            mountPath: /opt/app/music/etc/music.properties
            subPath: music.properties
          - name: properties-music
            mountPath: /opt/app/music/etc/key.properties
            subPath: key.properties
          - name: properties-music
            mountPath: /opt/app/music/etc/music-sb.properties
            subPath: music-sb.properties
          - name: properties-music
            mountPath: /opt/app/music/etc/logback.xml
            subPath: logback.xml
          - name: certs-aaf
            mountPath: /opt/app/aafcertman/
      volumes:
        - name: shared-data
          emptyDir: {}
        - name: certificate-vol
          emptyDir: {}
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: properties-music
          configMap:
            name: {{ include "common.fullname" . }}-configmap
        - name: certs-aaf
          secret:
            secretName: {{ include "common.secret.getSecretName" (dict "global" . "uid" "music-certs") }}

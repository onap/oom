{{/*
#============LICENSE_START========================================================
# ================================================================================
# Copyright (c) 2021 ZTE Intellectual Property. All rights reserved.
# ================================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============LICENSE_END=========================================================
*/}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ include "common.release" . }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "common.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ include "common.release" . }}
    spec:
      initContainers:
        - name: init-consul
          image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.global.consulLoaderImage }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          args:
            - --key
            - holmes-rule-mgmt|/hrmconfigs/cfy-config/cfy.json
          resources: {}
          volumeMounts:
            - mountPath: /hrmconfigs
              name: holmes-rule-mgmt-config
      containers:
        - name: {{ include "common.name" . }}
          image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.image }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          resources:
{{ include "common.resources" . | indent 12 }}
          ports:
          {{- range $index, $port := .Values.service.ports }}
            - containerPort: {{ $port.port }}
              protocol: TCP
          {{- end }}
          # disable liveness probe when breakpoints set in debugger
          # so K8s doesn't restart unresponsive container
          {{- if eq .Values.liveness.enabled true }}
          livenessProbe:
            tcpSocket:
              {{- range $index, $port := .Values.service.ports }}
              {{- if eq $port.name "rule-mgmt" }}
              port: {{ $port.port }}
              {{- end }}
              {{- end }}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readiness.path }}
              {{- range $index, $port := .Values.service.ports }}
              {{- if eq $port.name "rule-mgmt" }}
              port: {{ $port.port }}
              {{- end }}
              {{- end }}
              scheme: {{ .Values.readiness.scheme }}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
            failureThreshold: 1
            successThreshold: 1
            timeoutSeconds: 1
          env:
            - name: CONSUL_HOST
              value: consul-server.{{ include "common.namespace" . }}
            - name: CONFIG_BINDING_SERVICE
              value: config-binding-service
            - name: JDBC_USERNAME
              {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "pg-user-creds" "key" "login") | indent 14 }}
            - name: JDBC_PASSWORD
              {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "pg-user-creds" "key" "password") | indent 14 }}
            - name: DB_NAME
              value: {{ .Values.config.pgConfig.dbName }}
            - name: URL_JDBC
              value: {{ .Values.config.pgConfig.dbHost }}
            - name: DB_PORT
              value: "{{ .Values.config.pgConfig.dbPort }}"
            - name: msb_hostname
              value: "msb-iag.onap"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
      volumes:
        - configMap:
            defaultMode: 422
            name: {{ include "common.fullname" . }}-configmap
          name: holmes-rule-mgmt-config
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"
{{/*
# Copyright (c) 2017 Amdocs, Bell Canada
# Modifications Copyright (c) 2018 AT&T
# Modifications Copyright (c) 2020 Nokia, Orange
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ include "common.release" . }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ include "common.name" . }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ include "common.release" . }}
    spec:
      containers:
      - name: {{ include "common.name" . }}
        image: {{ include "repositoryGenerator.dockerHubRepository" . }}/{{ .Values.image }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        command:
        - /bin/bash
        - -c
        - |
          /opt/bitnami/scripts/cassandra/entrypoint.sh /opt/bitnami/scripts/cassandra/run.sh
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        - containerPort: {{ .Values.service.internalPort2 }}
        - containerPort: {{ .Values.service.internalPort3 }}
        - containerPort: {{ .Values.service.internalPort4 }}
        - containerPort: {{ .Values.service.internalPort5 }}
        {{ if eq .Values.liveness.enabled true }}
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -ec
            - |
              nodetool status
          initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.liveness.periodSeconds }}
          timeoutSeconds: {{ .Values.liveness.timeoutSeconds }}
          successThreshold: {{ .Values.liveness.successThreshold }}
          failureThreshold: {{ .Values.liveness.failureThreshold }}
        {{ end }}
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -ec
            - |
              nodetool status | grep -E "^UN\\s+${POD_IP}"
          initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.readiness.periodSeconds }}
          timeoutSeconds: {{ .Values.readiness.timeoutSeconds }}
          successThreshold: {{ .Values.readiness.successThreshold }}
          failureThreshold: {{ .Values.readiness.failureThreshold }}
        lifecycle:
          preStop:
            exec:
              command:
              - bash
              - -ec
              - nodetool decommission
        env:
          - name: CASSANDRA_USER
            {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "db-creds" "key" "login") | indent 12}}
          - name: CASSANDRA_PASSWORD
            {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "db-creds" "key" "password") | indent 12}}
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: CASSANDRA_PASSWORD_SEEDER
            value: "yes"
          - name: BITNAMI_DEBUG
            value: "true"
          - name: CASSANDRA_CLUSTER_NAME
            value: cassandra
          - name: CASSANDRA_NUM_TOKENS
            value: "256"
          - name: CASSANDRA_DATACENTER
            value: dc1
          - name: CASSANDRA_ENDPOINT_SNITCH
            value: SimpleSnitch
          - name: CASSANDRA_RACK
            value: rack1
          - name: CASSANDRA_ENABLE_RPC
            value: "true"
          {{- $flavor := include "common.flavor" . }}
          {{- $heap := pluck $flavor .Values.heap | first }}
          {{- if (hasKey $heap "max") }}
          - name: MAX_HEAP_SIZE
            value: {{ $heap.max }}
          {{- end }}
          {{- if (hasKey $heap "new") }}
          - name: HEAP_NEWSIZE
            value: {{ $heap.new }}
          {{- end }}
        volumeMounts:
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        - name: cassandra-docker-entrypoint-initdb
          mountPath: /docker-entrypoint-initdb.d/aaa_portal.cql
          subPath: portal.cql
        - name: {{ include "common.fullname" . }}-data
          mountPath: /var/lib/cassandra/data
        resources:
{{ include "common.resources" . | indent 12 }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 10 }}
      {{- end -}}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 10 }}
      {{- end }}
      serviceAccountName: {{ include "common.fullname" (dict "suffix" "read" "dot" . )}}
      volumes:
        - name: cassandra-docker-entrypoint-initdb
          configMap:
            name: {{ include "common.fullname" . }}-docker-entry-initd
        - name: localtime
          hostPath:
            path: /etc/localtime
      {{- if .Values.persistence.enabled }}
        - name: {{ include "common.fullname" . }}-data
          persistentVolumeClaim:
            claimName: {{ include "common.fullname" . }}
      {{- else }}
          emptyDir: {}
      {{- end }}
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"

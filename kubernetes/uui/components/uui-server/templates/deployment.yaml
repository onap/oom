{{/*
# Copyright © 2018 ZTE
# Modifications Copyright © 2018 AT&T, Amdocs, Bell Canada
# Modifications Copyright © 2022 CMCC Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}

apiVersion: apps/v1
kind: Deployment
metadata: {{- include "common.resourceMetadata" . | nindent 2 }}
spec:
  selector: {{- include "common.selectors" . | nindent 4 }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata: {{- include "common.templateMetadata" . | nindent 6 }}
    spec:
      {{ include "common.podSecurityContext" . | indent 6 | trim }}
      serviceAccountName: {{ include "common.fullname" (dict "suffix" "read" "dot" . ) }}
      initContainers:
      - command:
        - sh
        args:
        - -c
        - "cd /config-input && for PFILE in `find . -not -type d | grep -v -F ..`; do envsubst <${PFILE} >/config/${PFILE}; done"
        env:
        - name: KEYSTORE_PASSWORD
          value: "${KEYSTORE_PASSWORD}"
        - name: POSTGRES_USERNAME
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "pg-user-creds" "key" "login") | indent 10 }}
        - name: POSTGRES_PASSWORD
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "pg-user-creds" "key" "password") | indent 10 }}
        volumeMounts:
        - mountPath: /config-input
          name: init-data-input
        - mountPath: /config
          name: init-data
        image: {{ include "repositoryGenerator.image.envsubst" . }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}-update-config

      - command:
        - /app/ready.py
        args:
        - --service-name
        - "{{ .Values.postgres.service.name2 }}"
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: {{ include "repositoryGenerator.image.readiness" . }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}-readiness
        resources:
          limits:
            cpu: "100m"
            memory: "500Mi"
          requests:
            cpu: "3m"
            memory: "20Mi"
      containers:
        - name: {{ include "common.name" . }}
          image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.image }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          command:
          - sh
          args:
          - -c
          - |
            bash /uui/run.sh
          ports: {{ include "common.containerPorts" . | nindent 10  }}
          # disable liveness probe when breakpoints set in debugger
          # so K8s doesn't restart unresponsive container
          {{- if eq .Values.liveness.enabled true }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          {{- end }}
          resources: {{ include "common.resources" . | nindent 12 }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
          env:
          - name: MSB_ADDR
            value: {{tpl .Values.msbaddr .}}
          - name: MR_ADDR
            value: {{tpl .Values.mraddr .}}
          - name: POSTGRES_IP
            value: {{.Values.postgres.service.name2}}
          - name: POSTGRES_PORT
            value: "$(UUI_SERVER_POSTGRES_SERVICE_PORT)"
          - name: SPRING_OPTS
            value: --spring.config.location=file:/config/application.properties
          - name: POSTGRES_DB_NAME
            value: {{ .Values.postgres.config.pgDatabase }}
          volumeMounts:
          - mountPath: /uui/run.sh
            name: entrypoint
            subPath: run.sh
          - mountPath: /config/application.properties
            name: init-data
            subPath: application.properties
      volumes:
      - name: init-data-input
        configMap:
          name: {{ include "common.fullname" . }}
      - name: init-data
        emptyDir:
          medium: Memory
      - name: entrypoint
        configMap:
          name: {{ include "common.fullname" . }}-entrypoint
          defaultMode: 0755
      {{- include "common.imagePullSecrets" . | nindent 6 }}

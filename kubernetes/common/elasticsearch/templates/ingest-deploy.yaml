# Copyright Â© 2020 Bitnami
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
{{- if .Values.ingest.enabled }}
apiVersion: apps/v1
kind: Deployment
{{ $role := .Values.ingest.name -}}
{{ $suffix := $role -}}
{{ $labels := (dict "role" $role) -}}
metadata: {{- include "common.resourceMetadata" (dict "suffix" $suffix "labels" $labels "dot" . )| nindent 2 }}
spec:
  selector:
    matchLabels: {{- include "common.matchLabels" . | nindent 6 }}
  #    role: ingest
  replicas: {{ .Values.ingest.replicaCount }}
  template:
    metadata:
      labels: {{- include "common.labels" . | nindent 8 }}
        role: ingest
      {{- with .Values.ingest.podAnnotations }}
      annotations: {{- toYaml . | nindent 10 }}
      {{- end }}
    spec:
{{- include "elasticsearch.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.ingest.affinity }}
      affinity: {{- include "common.tplValue" (dict "value" .Values.ingest.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.ingest.nodeSelector }}
      nodeSelector: {{- include "common.tplValue" (dict "value" .Values.ingest.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.ingest.tolerations }}
      tolerations: {{- include "common.tplValue" (dict "value" .Values.ingest.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.ingest.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.ingest.securityContext.fsGroup }}
      {{- end }}
      {{- if .Values.sysctlImage.enabled }}
      ## Image that performs the sysctl operation to modify Kernel settings (needed sometimes to avoid boot errors)
      initContainers:
        - name: sysctl
          image: {{printf "%s/%s:%s" (include "common.repository" .)  .Values.sysctlImage.imageName  .Values.sysctlImage.tag }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          command:
            - /scripts/sysctl.sh
          securityContext:
            privileged: true
          volumeMounts:
            - name: initcontainer-script
              mountPath: /scripts/sysctl.sh
              subPath: sysctl.sh
      {{- end }}
      containers:
        - name: elasticsearch
          image: {{ printf "%s/%s:%s" (include "common.repository" .)  .Values.image.imageName  .Values.image.tag }}
          {{- if .Values.ingest.securityContext.enabled }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          securityContext:
            runAsUser: {{ .Values.ingest.securityContext.runAsUser }}
          {{- end }}
          env:
            - name: BITNAMI_DEBUG
              value: {{ ternary "true" "false" .Values.image.debug | quote }}
            - name: ELASTICSEARCH_CLUSTER_NAME
              value: {{ .Values.name | quote }}
            - name: ELASTICSEARCH_CLUSTER_HOSTS
              value: {{ include "common.name" . }}-discovery
            {{- if .Values.plugins }}
            - name: ELASTICSEARCH_PLUGINS
              value: {{ .Values.plugins | quote }}
            {{- end }}
            - name: ELASTICSEARCH_HEAP_SIZE
              value: {{ .Values.ingest.heapSize | quote }}
            - name: ELASTICSEARCH_IS_DEDICATED_NODE
              value: "yes"
            - name: ELASTICSEARCH_NODE_TYPE
              value: "ingest"
          ports:
            - name: transport
              containerPort: 9300
          {{- if .Values.ingest.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.ingest.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.ingest.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.ingest.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.ingest.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.ingest.livenessProbe.failureThreshold }}
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
            initialDelaySeconds: 90
          {{- end }}
          {{- if .Values.ingest.readinessProbe.enabled}}
          readinessProbe:
            initialDelaySeconds: {{ .Values.ingest.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.ingest.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.ingest.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.ingest.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.ingest.readinessProbe.failureThreshold }}
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
            initialDelaySeconds: 5
          {{- end}}
          {{- if .Values.ingest.resources }}
          resources: {{- toYaml .Values.ingest.resources | nindent 12 }}
          {{- end}}
          volumeMounts:
            {{- if .Values.config }}
            - mountPath: /opt/bitnami/elasticsearch/config/elasticsearch.yml
              name: "config"
              subPath: elasticsearch.yml
            {{- end }}
            - name: "data"
              mountPath: "/bitnami/elasticsearch/data/"
            {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
      volumes:
        {{- if .Values.sysctlImage.enabled }}
        - name: initcontainer-script
          configMap:
            name: {{ include "common.fullname" . }}-initcontainer
            defaultMode: 0755
        {{- end }}
        {{- if .Values.config }}
        - name: config
          configMap:
            name: {{ include "common.fullname" . }}
        {{- end }}
        - name: data
          emptyDir: {}
        {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
{{- end }}

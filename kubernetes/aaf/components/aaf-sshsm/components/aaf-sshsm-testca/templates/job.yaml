{{/*
# Copyright 2018 Intel Corporation, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}

apiVersion: batch/v1
kind: Job
metadata: {{- include "common.resourceMetadata" . | nindent 2 }}
spec:
  template:
    metadata: {{- include "common.templateMetadata" . | nindent 6 }}
    spec:
      restartPolicy: Never
      initContainers:
      - image: {{ include "repositoryGenerator.image.readiness" . }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}-distcenter-ready
        command:
        - /app/ready.py
        args:
        - -j
        - "{{ include "common.release" . }}-aaf-sshsm-distcenter"
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 3m
            memory: 20Mi
{{- if .Values.global.tpm.enabled }}
      - image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.image }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}-abrmd-ready
        command: ["sh", "/sshsm/bin/abrmd_ready.sh", "300"]
        workingDir: /testca/bin
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: {{ include "common.fullname" . }}-dbus
          mountPath: /var/run/dbus
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 3m
            memory: 20Mi
{{- end }}
      containers:
      - image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.image }}
        name: {{ include "common.name" . }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        command: ["./import.sh"]
        workingDir: /testca/bin
        env:
{{- if .Values.global.tpm.enabled }}
        - name: TPM_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: DATA_FOLDER
          value: /testca/data/host_$(TPM_NODE_NAME)
{{ else }}
        - name: DATA_FOLDER
          value: /testca/data
{{- end }}
        - name: SECRETS_FOLDER
          value: /testca/secrets
        volumeMounts:
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        - name: {{ include "common.fullname" . }}-data
          mountPath: /testca/data
        - name: {{ include "common.fullname" . }}-dbus
          mountPath: /var/run/dbus
        - name: {{ include "common.fullname" . }}-secrets
          mountPath: /testca/secrets
          readOnly: true
        resources: {{ include "common.resources" . | nindent 10 }}
      nodeSelector:
        {{- if .Values.nodeSelector }}
        {{ toYaml .Values.nodeSelector | indent 8 | trim }}
        {{- end -}}
        {{- if .Values.global.tpm.enabled }}
        {{ (printf "%s: \"%s\"" .Values.global.tpm.nodeLabel .Values.global.tpm.nodeLabelValue) }}
        {{- end -}}
        {{- if .Values.affinity }}
      affinity: {{ toYaml .Values.affinity | nindent 8 }}
        {{- end }}
      volumes:
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name: {{ include "common.fullname" . }}-data
        persistentVolumeClaim:
          claimName: {{ include "common.release" . }}-aaf-sshsm
      - name: {{ include "common.fullname" . }}-dbus
        persistentVolumeClaim:
          claimName: {{ include "common.release" . }}-aaf-sshsm-dbus
      - name: {{ include "common.fullname" . }}-secrets
        secret:
          secretName: {{ include "common.release" . }}-aaf-sshsm
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"

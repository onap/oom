{
  "comments": [
    {
      "key": {
        "uuid": "efb53dba_e5424a7a",
        "filename": "kubernetes/common/mariadb-init/resources/config/db_init.sh",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 4965
      },
      "writtenOn": "2021-04-16T20:00:19Z",
      "side": 1,
      "message": "have you tested that this is going to work correctly with all the special characters that can be found in our passwords:\n@\u0026%?,\u003d[]_:-+*$#!\u0027^~;()/.",
      "revId": "16bcec1a26730ff15995445aad471b706086906f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "550b803e_b73b9690",
        "filename": "kubernetes/common/mariadb-init/resources/config/db_init.sh",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 3685
      },
      "writtenOn": "2021-04-17T17:53:03Z",
      "side": 1,
      "message": "Good remark.\n\nNo since I had no idea of what can be the input here.\nLet\u0027s try this\n\nwith bash\n~$ PASSWD\u003d\u0027@\u0026%?,\u003d[]_:-+*$#!\u0027\"\u0027\"\u0027^~;(\\)/.\u0027\n~$ echo $PASSWD\n@\u0026%?,\u003d[]_:-+*$#!\u0027^~;(\\)/.\n~$ PASS_VAR\u003d\"PASSWD\"\n~$ PASS\u003d`echo -n ${!PASS_VAR} | sed -e \"s/\u0027/\u0027\u0027/g\"`\n~$ echo $PASS\n@\u0026%?,\u003d[]_:-+*$#!\u0027\u0027^~;(\\)/.\n~$ PASS\u003d$(eval echo -n \\$$PASS_VAR | sed -e \"s/\u0027/\u0027\u0027/g\")\n~$  echo $PASS\n@\u0026%?,\u003d[]_:-+*$#!\u0027\u0027^~;(\\)/.\n\nand with dash\n~$ dash\n$ PASSWD\u003d\u0027@\u0026%?,\u003d[]_:-+*$#!\u0027\"\u0027\"\u0027^~;(\\)/.\u0027\n$ echo $PASSWD\n@\u0026%?,\u003d[]_:-+*$#!\u0027^~;(\\)/.\n$ PASS_VAR\u003d\"PASSWD\"\n$ PASS\u003d`echo -n ${!PASS_VAR} | sed -e \"s/\u0027/\u0027\u0027/g\"`\ndash: 1: Bad substitution\n$ PASS\u003d$(eval echo -n \\$$PASS_VAR | sed -e \"s/\u0027/\u0027\u0027/g\")\n$ echo $PASS\n@\u0026%?,\u003d[]_:-+*$#!\u0027\u0027^~;(\\)/.\n\n\n\nThe behaviour is the same with the old and the new script in this case.\nDo you think that anything else can be crafted ?",
      "parentUuid": "efb53dba_e5424a7a",
      "revId": "16bcec1a26730ff15995445aad471b706086906f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c03c8061_6a6eca01",
        "filename": "kubernetes/common/mariadb-init/resources/config/db_init.sh",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 3685
      },
      "writtenOn": "2021-04-21T07:28:44Z",
      "side": 1,
      "message": "After reconsidering this, my opinion is that no malicious code to trick eval can be crafted from the password content by itself here.\nThe only way to trick eval is to craft the variable name stored in PASS_VAR. But shells limit the possibility and if I understand well, these variable names are not decided by the users but by the system.",
      "parentUuid": "550b803e_b73b9690",
      "revId": "16bcec1a26730ff15995445aad471b706086906f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}
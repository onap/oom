{
  "comments": [
    {
      "key": {
        "uuid": "2336bc63_6cb3d6a9",
        "filename": "kubernetes/dcaegen2-services/common/dcaegen2-services-common/templates/_deployment.tpl",
        "patchSetId": 3
      },
      "lineNbr": 162,
      "author": {
        "id": 4965
      },
      "writtenOn": "2021-04-07T14:34:28Z",
      "side": 1,
      "message": "BTW. We tend to not use $ as it does not allow us to make a few tricks that we are using from time to time so if possible please create a variable before the loop and then use $dot instead of $",
      "revId": "f952c50f5a2947f7b66b023838ef411711f3e3b4",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbf79a6e_5bba4c4c",
        "filename": "kubernetes/dcaegen2-services/common/dcaegen2-services-common/templates/_deployment.tpl",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 4965
      },
      "writtenOn": "2021-04-06T21:31:30Z",
      "side": 1,
      "message": "Hmm... I know what you are trying to achieve here but I\u0027m a little bit afraid that it may get complicated really quickly.\n\nHow about allowing just to input env definition here directly using toYaml function?\n\nI realize that it may put a little bit more boilerplate in the values.yaml but then it gives a full flexibility to the template user. In short:\n\nin values.yaml:\n applicationEnv: \u003e\n   - name: JAVA_OPTS\n     value: \u0027-Dlogback.configurationFile\u003d/etc/ONAP/dcae-hv-ves-collector/logback.xml\u0027\n   - name: MY_SECRET\n     {{- include \"common.secret.envFromSecretFast\" (dict \"global\" . \"uid\" $envValue.secretUid \"key\" myKey) | indent 2 }}\n\nthen in this tamplate you would just do sth like:\n\n{{ tpl .Values.applicationEnv . | toYaml | indent $asNeeded }}\n\nThis should avoid issues if someone needs to reference another secret, access some certificate or o any other crazy stuff that k8s API allows.\n\n@Jack\n@Sylvain\nWhat do you think?",
      "revId": "f952c50f5a2947f7b66b023838ef411711f3e3b4",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e678478_4d9b18b2",
        "filename": "kubernetes/dcaegen2-services/common/dcaegen2-services-common/templates/_deployment.tpl",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 2319
      },
      "writtenOn": "2021-04-07T11:49:48Z",
      "side": 1,
      "message": "yeah, I kind of think like Krzysztof\nBut if you want to continue on this way, I\u0027d propose to create a function and call it here so it\u0027s easier to debug",
      "parentUuid": "bbf79a6e_5bba4c4c",
      "revId": "f952c50f5a2947f7b66b023838ef411711f3e3b4",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0de9024a_6f768194",
        "filename": "kubernetes/dcaegen2-services/common/dcaegen2-services-common/templates/_deployment.tpl",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 511
      },
      "writtenOn": "2021-04-07T13:41:39Z",
      "side": 1,
      "message": "I dislike the idea of asking users to write fragments of Helm templates in the values.yaml.  Common templates should, in my opinion, provide some level of abstraction.  I was trying to hide the details of the low-level common templates from the users.  In this particular instance, we would be asking DCAE microservice authors to learn the details of OOM common secret management.  I was trying to hide that.\n\nI guess it is a difference in philosophy.  Do we expect everyone who contributes a component to ONAP (even something very small, like a DCAE microservice) to understand the details of the OOM common templates?  Or do we try to provide something more abstract?  \n\nHistorically in DCAE (using the Cloudify deployment mechanism), we have tended towards abstraction.  We ask users to supply some information about their microservices (the image to use, the ports exposed, the location of log files, the placement of certs/keys, etc.) in the Cloudify blueprint, but we don\u0027t expect them to understand much about the mechanics of deployment into Kubernetes.  (In fact we moved from simple deployments into Docker to k8s deployment without requiring substantive changes to the blueprints.)",
      "parentUuid": "2e678478_4d9b18b2",
      "revId": "f952c50f5a2947f7b66b023838ef411711f3e3b4",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}
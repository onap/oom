{{/*
# Copyright © 2018 Amdocs, Bell Canada , ZTE
# Copyright © 2021 Orange
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}
apiVersion: apps/v1
kind: Deployment
metadata: {{- include "common.resourceMetadata" . | nindent 2 }}
spec:
  selector: {{- include "common.selectors" . | nindent 4 }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata: {{- include "common.templateMetadata" . | nindent 6 }}
    spec:
      initContainers:
      {{ include "common.certInitializer.initContainer" . | indent 6 | trim }}
      - command:
        - /app/ready.py
        args:
        - --container-name
        - msb-discovery
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: {{ include "repositoryGenerator.image.readiness" . }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}-readiness
      containers:
        - name: {{ include "common.name" . }}
          image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.image }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          ports: {{- include "common.containerPorts" . | indent 10 }}
          # disable liveness probe when breakpoints set in debugger
          # so K8s doesn't restart unresponsive container
          {{- if eq .Values.liveness.enabled true }}
          livenessProbe:
            tcpSocket:
              port: {{ (eq "true" (include "common.needTLS" .)) | ternary .Values.service.internalPort .Values.service.internalPlainPort }}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          {{ end -}}
          readinessProbe:
            tcpSocket:
              port: {{ (eq "true" (include "common.needTLS" .)) | ternary .Values.service.internalPort .Values.service.internalPlainPort }}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
          env:
          - name: CONSUL_IP
            value: msb-consul.{{ include "common.namespace" . }}
          - name: SDCLIENT_IP
            value: msb-discovery.{{ include "common.namespace" . }}
          - name: ROUTE_LABELS
            value: {{ .Values.config.routeLabels }}
          volumeMounts:
          {{ include "common.certInitializer.volumeMount" . | indent 10 | trim }}
          - mountPath: /etc/localtime
            name: localtime
            readOnly: true
          - mountPath: /usr/local/apiroute-works/logs
            name: {{ include "common.fullname" . }}-logs
          {{- if (include "common.needTLS" .) }}
          - mountPath: /usr/local/openresty/nginx/msb-enabled/msbhttps.conf
            name: {{ include "common.fullname" . }}-nginx-conf
            subPath: msbhttps.conf
          {{- end }}
          resources:
{{ include "common.resources" . | indent 12 }}
        {{- if .Values.nodeSelector }}
        nodeSelector:
{{ toYaml .Values.nodeSelector | indent 10 }}
        {{- end -}}
        {{- if .Values.affinity }}
        affinity:
{{ toYaml .Values.affinity | indent 10 }}
        {{- end }}
        # side car containers
        {{ include "common.log.sidecar" . | nindent 8 }}
      serviceAccountName: {{ include "common.fullname" (dict "suffix" "read" "dot" . )}}
      volumes:
        {{ include "common.certInitializer.volumes" . | indent 8 | trim }}
        - name: {{ include "common.fullname" . }}-log-conf
          configMap:
            name: {{ include "common.fullname" . }}-log
        {{- if (include "common.needTLS" .) }}
        - name: {{ include "common.fullname" . }}-nginx-conf
          configMap:
            name: {{ include "common.fullname" . }}-nginx
        {{- end }}
        {{ include "common.log.volumes" (dict "dot" . "configMapNamePrefix" (tpl .Values.logConfigMapNamePrefix . )) | nindent 8 }}
        - name:  {{ include "common.fullname" . }}-logs
          emptyDir: {}
        - name: localtime
          hostPath:
            path: /etc/localtime
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"

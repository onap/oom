{{/*
# Copyright Â© 2017 Amdocs, Bell Canada
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ include "common.release" . }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ include "common.name" . }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ include "common.release" . }}
      annotations:
        sidecar.istio.io/inject: "{{.Values.istioSidecar}}"
    spec:
      initContainers:
      - command:
        - /app/ready.py
        args:
        - --container-name
        - {{ .Values.config.mariadbService }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: {{ include "repositoryGenerator.image.readiness" . }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}-readiness
      containers:
        - name: {{ include "common.name" . }}
          command:
            - sh
          args:
            - -c
            - 'MYSQL_AUTH=root:${MYSQL_ROOT_PASSWORD} ./docker-entrypoint.sh'
          image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.image }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          ports:
          - containerPort: {{ .Values.service.internalPort }}
          # disable liveness probe when breakpoints set in debugger
          # so K8s doesn't restart unresponsive container
          {{ if .Values.liveness.enabled }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          {{ end }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
          env:
            - name: MSB_HOST
              value: "{{ .Values.global.config.msbprotocol }}://{{ .Values.global.config.msbServiceName }}:{{ .Values.global.config.msbPort }}"
            - name: SSL_ENABLED
              value: "{{ .Values.global.config.ssl_enabled }}"
            - name: MYSQL_ADDR
              value: "{{ .Values.config.mariadbService }}:{{ .Values.config.mariadbPort }}"
            - name: REDIS_HOST
              value: "{{ .Values.global.config.redisServiceName }}"
            - name: REDIS_PORT
              value: "{{ .Values.global.config.redisPort }}"
            - name: MYSQL_ROOT_USER
              value: "{{ .Values.global.config.mariadb_admin }}"
            - name: MYSQL_ROOT_PASSWORD
              {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "db-root-pass" "key" "password") | indent 14}}
            - name: REG_TO_MSB_WHEN_START
              value: "{{ .Values.global.config.reg_to_msb_when_start }}"
          volumeMounts:
          - name: {{ include "common.fullname" . }}-localtime
            mountPath: /etc/localtime
            readOnly: true
          - name: {{ include "common.fullname" . }}-logs
            mountPath: /var/log/onap
          - name: {{ include "common.fullname" . }}-logconfig
            mountPath: /opt/vfc/gvnfm-vnfres/config/log.yml
            subPath: log.yml
          resources:
{{ include "common.resources" . | indent 12 }}
        {{- if .Values.nodeSelector }}
        nodeSelector:
{{ toYaml .Values.nodeSelector | indent 10 }}
        {{- end -}}
        {{- if .Values.affinity }}
        affinity:
{{ toYaml .Values.affinity | indent 10 }}
        {{- end }}

        # side car containers
        - name: {{ include "common.name" . }}-filebeat-onap
          image: {{ include "repositoryGenerator.image.logging" . }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          volumeMounts:
          - name: {{ include "common.fullname" . }}-filebeat-conf
            mountPath: /usr/share/filebeat/filebeat.yml
            subPath: filebeat.yml
          - name: {{ include "common.fullname" . }}-logs
            mountPath: /var/log/onap
          - name: {{ include "common.fullname" . }}-data-filebeat
            mountPath: /usr/share/filebeat/data

      volumes:
        - name: {{ include "common.fullname" . }}-localtime
          hostPath:
            path: /etc/localtime
        - name:  {{ include "common.fullname" . }}-logs
          emptyDir: {}
        - name: {{ include "common.fullname" . }}-logconfig
          configMap:
            name : {{ include "common.fullname" . }}-logging-configmap

        - name: {{ include "common.fullname" . }}-filebeat-conf
          configMap:
            name: {{ include "common.release" . }}-vfc-filebeat-configmap
        - name: {{ include "common.fullname" . }}-data-filebeat
          emptyDir: {}
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"

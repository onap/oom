{{/*
  #  Copyright (C) 2021 Bell Canada
  #
  # Licensed under the Apache License, Version 2.0 (the "License");
  # you may not use this file except in compliance with the License.
  # You may obtain a copy of the License at
  #
  #       http://www.apache.org/licenses/LICENSE-2.0
  #
  # Unless required by applicable law or agreed to in writing, software
  # distributed under the License is distributed on an "AS IS" BASIS,
  # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  # See the License for the specific language governing permissions and
  # limitations under the License.
  */}}

replicaCount: 1
global:
  persistence: {}

#################################################################
# Secrets.
##############################################################
image:
  repository: timescale/timescaledb
  tag: 2.1.1-pg13
  pullPolicy: Always

pullPolicy: Always
containerPorts: &svc_port 5432

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  nameOverride: cps-temporal-db
  roles:
    - read

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
 limits:
   cpu: 0.5
   memory: 256Mi
 requests:
   cpu: 20m
   memory: 256Mi

nodeSelector: {}

tolerations: []

affinity: {}

service:
  type: ClusterIP
  name: cps-temporal-db
  ports:
    - name: &port http
      port: 5432

persistence:
  enabled: true

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:
  volumeReclaimPolicy: Retain

  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  accessMode: ReadWriteOnce
  size: 1Gi
  mountPath: /dockerdata-nfs
  mountSubPath: postgres/data
  mountInitPath: postgres

db:
  name: cpstemporaldb
  config:
    pgUserName: cpstemporaldb
    pgRootUserName: postgres
    pgDatabase: cpstemporaldb

secrets:
  - uid: root-creds
    type: basicAuth
    externalSecret: '{{ tpl (default "" .Values.db.config.pgRootPasswordExternalSecret) . }}'
    login: '{{ .Values.db.config.pgRootUserName }}'
    password: '{{ .Values.db.config.pgRootpassword }}'
  - uid: user-creds
    type: basicAuth
    externalSecret: '{{ tpl (default "" .Values.db.config.pgUserExternalSecret) . }}'
    login: '{{ .Values.db.config.pgUserName }}'
    password: '{{ .Values.db.config.pgUserPassword }}'



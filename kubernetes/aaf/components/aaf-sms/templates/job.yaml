{{/*
# Copyright 2018 Intel Corporation, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "common.fullname" . }}-preload
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ include "common.release" . }}
    heritage: {{ .Release.Service }}
spec:
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ include "common.release" . }}
    spec:
      initContainers: {{ include "common.certInitializer.initContainer" . | nindent 6 }}
      - command:
        - sh
        args:
        - -c
        - "export AAI_PASS=${AAI_PASS_PLAIN};
           export CONDUCTOR_PASS=${CONDUCTOR_PASS_PLAIN};
           export SDNC_PASS=${SDNC_PASS_PLAIN};
           export MUSIC_PASS=${MUSIC_PASS_PLAIN};
           export AAF_PASS=${AAF_PASS_PLAIN};
           export POLICY_PLAT_PASS=${POLICY_PLAT_PASS_PLAIN};
           export POLICY_CLI_PASS=${POLICY_CLI_PASS_PLAIN};
           export OSDF_PLACEMENT_PASS=${OSDF_PLACEMENT_PASS_PLAIN};
           export OSDF_PLACEMENT_SO_PASS=${OSDF_PLACEMENT_SO_PASS_PLAIN};
           export OSDF_PLACMENET_VFC_PASS=${OSDF_PLACEMENT_VFC_PASS_PLAIN};
           export OSDF_CM_SCHEDULER_PASS=${OSDF_CM_SCHEDULER_PASS_PLAIN};
           export CONFIG_DB_PASS=${CONFIG_DB_PASS_PLAIN};
           export OSDF_PCI_OPT_PASS=${OSDF_PCI_OPT_PASS_PLAIN};
           export OSDF_OPT_ENGINE_PASS=${OSDF_OPT_ENGINE_PASS_PLAIN};
           export SO_PASS=${SO_PASS_PLAIN};
           cd /config-input;
           for PFILE in `find . -not -type d | grep -v -F ..`; do
             envsubst <${PFILE} >/config/${PFILE};
           done"
        env:
        - name: AAI_USER
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "aai-creds" "key" "login") | indent 10 }}
        - name: AAI_PASS_PLAIN
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "aai-creds" "key" "password") | indent 10 }}

        - name: CONDUCTOR_USER
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "conductor-creds" "key" "login") | indent 10 }}
        - name: CONDUCTOR_PASS_PLAIN
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "conductor-creds" "key" "password") | indent 10 }}

        - name: SDNC_USER
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "sdnc-creds" "key" "login") | indent 10 }}
        - name: SDNC_PASS_PLAIN
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "sdnc-creds" "key" "password") | indent 10 }}

        - name: MUSIC_USER
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "music-creds" "key" "login") | indent 10 }}
        - name: MUSIC_PASS_PLAIN
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "music-creds" "key" "password") | indent 10 }}

        - name: AAF_USER
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "aaf-creds" "key" "login") | indent 10 }}
        - name: AAF_PASS_PLAIN
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "aaf-creds" "key" "password") | indent 10 }}

        - name: POLICY_PLAT_USER
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "policy-plat-creds" "key" "login") | indent 10 }}
        - name: POLICY_PLAT_PASS_PLAIN
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "policy-plat-creds" "key" "password") | indent 10 }}

        - name: POLICY_CLI_USER
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "policy-cli-creds" "key" "login") | indent 10 }}
        - name: POLICY_CLI_PASS_PLAIN
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "policy-cli-creds" "key" "password") | indent 10 }}

        - name: OSDF_PLACEMENT_USER
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "osdf-placement-creds" "key" "login") | indent 10 }}
        - name: OSDF_PLACEMENT_PASS_PLAIN
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "osdf-placement-creds" "key" "password") | indent 10 }}

        - name: OSDF_PLACEMENT_SO_USER
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "osdf-placement-so-creds" "key" "login") | indent 10 }}
        - name: OSDF_PLACEMENT_SO_PASS_PLAIN
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "osdf-placement-so-creds" "key" "password") | indent 10 }}

        - name: OSDF_PLACEMENT_VFC_USER
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "osdf-placement-vfc-creds" "key" "login") | indent 10 }}
        - name: OSDF_PLACEMENT_VFC_PASS_PLAIN
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "osdf-placement-vfc-creds" "key" "password") | indent 10 }}

        - name: OSDF_CM_SCHEDULER_USER
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "osdf-cm-scheduler-creds" "key" "login") | indent 10 }}
        - name: OSDF_CM_SCHEDULER_PASS_PLAIN
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "osdf-cm-scheduler-creds" "key" "password") | indent 10 }}

        - name: CONFIG_DB_USER
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "config-db-creds" "key" "login") | indent 10 }}
        - name: CONFIG_DB_PASS_PLAIN
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "config-db-creds" "key" "password") | indent 10 }}

        - name: OSDF_PCI_OPT_USER
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "osdf-pci-opt-creds" "key" "login") | indent 10 }}
        - name: OSDF_PCI_OPT_PASS_PLAIN
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "osdf-pci-opt-creds" "key" "password") | indent 10 }}

        - name: OSDF_OPT_ENGINE_USER
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "osdf-opt-engine-creds" "key" "login") | indent 10 }}
        - name: OSDF_OPT_ENGINE_PASS_PLAIN
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "osdf-opt-engine-creds" "key" "password") | indent 10 }}

        - name: SO_USER
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "so-creds" "key" "login") | indent 10 }}
        - name: SO_PASS_PLAIN
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "so-creds" "key" "password") | indent 10 }}

        volumeMounts:
        - mountPath: /config-input
          name: {{ include "common.name" . }}-preload-input
        - mountPath: /config/
          name: {{ include "common.name" . }}-preload
        image: "{{ .Values.global.envsubstImage }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}-update-config
      - image:  "{{ include "common.repository" . }}/{{ .Values.global.readinessImage }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}-readiness
        command:
        - /app/ready.py
        args:
        - --container-name
        - "aaf-sms"
        - --container-name
        - "aaf-sms-quorumclient"
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
      containers:
      - image: "{{ include "common.repository" . }}/{{ .Values.image }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}-preload
        command:
          - "/sms/bin/preload"
          - "-cacert"
          - "{{ .Values.certInitializer.mountPath }}/local/{{ .Values.certInitializer.root_ca_name }}"
          - "-jsondir"
          - "/preload/config"
          - "-serviceport"
          - "{{ .Values.service.internalPort }}"
          - "-serviceurl"
          - "https://aaf-sms.{{ include "common.namespace" . }}"
        workingDir: /sms
        volumeMounts: {{ include "common.certInitializer.volumeMount" . | nindent 10 }}
          - mountPath: /etc/localtime
            name: localtime
            readOnly: true
          - mountPath: /preload/config
            name: {{ include "common.name" . }}-preload
        resources:
{{ include "common.resources" . | indent 10 }}
        {{- if .Values.nodeSelector }}
        nodeSelector:
{{ toYaml .Values.nodeSelector | indent 10 }}
        {{- end -}}
        {{- if .Values.affinity }}
        affinity:
{{ toYaml .Values.affinity | indent 10 }}
        {{- end }}
      volumes: {{ include "common.certInitializer.volumes" . | nindent 6 }}
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name: {{ include "common.name" . }}-preload-input
        configMap:
          name: {{ include "common.fullname" . }}-preload
      - name: {{ include "common.name" . }}-preload
        emptyDir:
          medium: Memory
      restartPolicy: OnFailure
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"

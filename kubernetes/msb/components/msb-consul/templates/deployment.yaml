{{/*
<<<<<<< HEAD
# Copyright © 2018 Amdocs, Bell Canada , ZTE
=======
# Copyright © 2017 Amdocs, Bell Canada
>>>>>>> [MSB] Use certInitializer for MSB
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}
<<<<<<< HEAD
=======

>>>>>>> [MSB] Use certInitializer for MSB
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ include "common.release" . }}
    heritage: {{ .Release.Service }}
spec:
<<<<<<< HEAD
  selector:
    matchLabels:
      app: {{ include "common.name" . }}
  replicas: {{ .Values.replicaCount }}
=======
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "common.name" . }}
>>>>>>> [MSB] Use certInitializer for MSB
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ include "common.release" . }}
<<<<<<< HEAD
      annotations:
        sidecar.istio.io/inject: "{{.Values.istioSidecar}}"
    spec:
      serviceAccountName: msb
      containers:
        - name: {{ include "common.name" . }}
          image: {{ include "repositoryGenerator.dockerHubRepository" . }}/{{ .Values.image }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          securityContext:
            runAsUser: {{ .Values.securityContext.runAsUser }}
            runAsGroup: {{ .Values.securityContext.runAsGroup }}
          command:
            - docker-entrypoint.sh
          args:
            - "agent"
            - "-dev"
            - "-client"
            - "0.0.0.0"
          ports:
          - containerPort: {{ .Values.service.internalPort }}
=======
    spec:
      containers:
        - name: {{ include "common.name" . }}
          image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.image }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          ports:
          - containerPort: {{ .Values.service.internalPort }}
          - containerPort: {{ .Values.service.internalPort1 }}
>>>>>>> [MSB] Use certInitializer for MSB
          # disable liveness probe when breakpoints set in debugger
          # so K8s doesn't restart unresponsive container
          {{- if eq .Values.liveness.enabled true }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          {{ end -}}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
<<<<<<< HEAD
          env:
          volumeMounts:
          - mountPath: /etc/localtime
            name: localtime
            readOnly: true
          - mountPath: /usr/local/bin/docker-entrypoint.sh
            name: entrypoint
            subPath: docker-entrypoint.sh
=======
          volumeMounts:
          - name: ocomp-pem
            mountPath: "/etc/lighttpd/ocomp.pem"
            subPath: ocomp.pem
            readOnly: true
          env:
            - name: OPEN_CLI_MODE
              value: "{{ .Values.config.climode }}"
>>>>>>> [MSB] Use certInitializer for MSB
          resources:
{{ include "common.resources" . | indent 12 }}
        {{- if .Values.nodeSelector }}
        nodeSelector:
{{ toYaml .Values.nodeSelector | indent 10 }}
        {{- end -}}
        {{- if .Values.affinity }}
        affinity:
{{ toYaml .Values.affinity | indent 10 }}
        {{- end }}
      volumes:
<<<<<<< HEAD
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: entrypoint
          configMap:
            name: {{ include "common.fullname" . }}-entrypoint
            defaultMode: 0777
=======
      - name: ocomp-pem
        secret:
          secretName: ocomp-pem
>>>>>>> [MSB] Use certInitializer for MSB
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"

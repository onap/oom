# Copyright Â© 2017 Amdocs, Bell Canada
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
spec:
  replicas: {{ .Values.global.aaf.hello.replicas }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
      - name: {{ include "common.name" . }}-config-container
        image: {{ .Values.global.repository }}/onap/aaf/aaf_agent:{{.Values.global.aaf.imageVersion}}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        volumeMounts:
        - mountPath: "/opt/app/osaaf/local"
          name: aaf-hello-vol
        command: ["bash","-c","/opt/app/aaf_config/bin/pod_wait.sh config nc aaf-cm.{{.Release.Namespace}} 8150 remove && cd /opt/app/osaaf/local && /opt/app/aaf_config/bin/agent.sh"]
        env:
          - name: aaf_env
            value: "{{ .Values.global.aaf.aaf_env }}"
          - name: cadi_latitude
            value: "{{ .Values.global.aaf.cadi_latitude }}"
          - name: cadi_longitude
            value: "{{ .Values.global.aaf.cadi_longitude }}"
          - name: aaf_locate_url
            value: "https://aaf-locate.{{ .Release.Namespace}}:{{.Values.global.aaf.locate.internal_port}}"
          - name: aaf_locator_container
            value: "oom"
          - name: aaf_release
            value: "{{ .Values.global.aaf.aaf_release }}"
          - name: aaf_locator_container_ns
            value: "{{ .Release.Namespace }}"
          - name: aaf_locator_container
            value: "oom"
          - name: aaf_locator_container_ns
            value: "{{ .Release.Namespace }}"
          - name: aaf_locator_app_ns
            value: "org.osaaf.aaf"
          - name: "APP_FQDN"
            value: "{{ .Values.global.aaf.hello.fqdn }}"
          - name: "APP_FQI"
            value: "aaf@aaf.osaaf.org"
          - name: "DEPLOY_FQI"
            value: "deployer@people.osaaf.org"
          - name: "DEPLOY_PASSWORD"
            value: "demo123456!"
# Hello specific.  Clients don't necessarily need this
          - name: aaf_locator_public_fqdn
            value: "{{.Values.global.aaf.public_fqdn}}"
          - name: aaf_locator_name
            value: "{{.Values.global.aaf.aaf_locator_name}}"
          - name: aaf_locator_name_oom
            value: "{{.Values.global.aaf.aaf_locator_name_oom}}"
          - name: aaf_locator_fqdn_oom
            value: "%N.%CNS"
      containers:
      - name: {{ include "common.name" . }}
        command: ["/bin/bash","-c","cd /opt/app/aaf && exec bin/hello"]
        image: {{ .Values.global.repository }}/onap/aaf/aaf_hello:{{.Values.global.aaf.imageVersion}}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        volumeMounts:
        - mountPath: "/opt/app/osaaf/local"
          name: aaf-hello-vol
        - mountPath: "/opt/app/aaf/status"
          name: aaf-status-vol
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        {{- if eq .Values.liveness.enabled true }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.liveness.periodSeconds }}
        {{ end -}}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.readiness.periodSeconds }}
        resources:
{{ include "common.resources" . | indent 12 }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 10 }}
      {{- end -}}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 10 }}
      {{- end }}
      volumes:
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name: aaf-status-vol
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-aaf-status-pvc
      - name: aaf-hello-vol
        emptyDir: {}
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"

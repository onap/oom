storage.backend={{ .Values.janusgraph.storage.backend }}
storage.hostname={{ .Values.global.sdc_cassandra.serviceName }}.{{ include "common.namespace" . }}.svc.cluster.local
storage.port={{ .Values.cassandraConfiguration.cassandraPort }}
storage.username={{ .Values.cassandraConfiguration.cassandra_user }}
storage.password={{ .Values.cassandraConfiguration.cassandra_password }}
storage.connection-timeout={{ .Values.janusgraph.storage.connectionTimeout }}
storage.cql.keyspace={{ .Values.janusgraph.keyspqce }}
storage.cql.port={{ .Values.cassandraConfiguration.cassandraPort }}
storage.cql.ssl.enabled={{ .Values.cassandraConfiguration.ssl }}
{{- if .Values.cassandraConfiguration.ssl }}
storage.cql.ssl.truststore.location={{ .Values.truststorePath }}
storage.cql.ssl.truststore.password={{ .Values.truststorePassword }}
{{- end }}
storage.cql.read-consistency-level={{ .Values.cassandraConfiguration.readConsistencyLevel }}
storage.cql.write-consistency-level={{ .Values.cassandraConfiguration.writeConsistencyLevel }}
storage.cql.replication-strategy-class=NetworkTopologyStrategy
storage.cql.replication-strategy-options={{ .Values.global.sdc_cassandra.dataCenter }},{{ .Values.global.sdc_cassandra.replicaCount }}
storage.cql.local-datacenter={{ .Values.global.sdc_cassandra.dataCenter }}
storage.cql.grouping.keys-allowed=false
cache.db-cache={{ .Values.janusgraph.dbCache.enabled }}
{{- if .Values.janusgraph.dbCache.enabled }}
cache.db-cache-clean-wait={{ .Values.janusgraph.dbCache.cleanWait }}
cache.db-cache-time={{ .Values.janusgraph.dbCache.time }}
cache.db-cache-size={{ .Values.janusgraph.dbCache.size }}
{{- end }}
cache.tx-cache-size={{ .Values.janusgraph.txCache.size }}

storage.lock.wait-time={{ .Values.janusgraph.storage.lockWaitTime }}

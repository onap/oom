{{/*
#============LICENSE_START========================================================
# ================================================================================
# Copyright (c) 2017-2020 AT&T Intellectual Property. All rights reserved.
# Modifications Copyright Â© 2018 Amdocs, Bell Canada
# ================================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============LICENSE_END=========================================================
*/}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ include "common.release" . }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "common.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ include "common.release" . }}
    spec:
      initContainers:
      - command:
        - sh
        args:
        - -c
        - "cd /config-input && for PFILE in `find . -not -type d | grep -v -F ..`; do envsubst <${PFILE} >/config/${PFILE}; done"
        env:
        - name: PG_ROOT_PASSWORD
          {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "pg-root-pass" "key" "password") | indent 10 }}
        volumeMounts:
        - mountPath: /config-input
          name: {{ include "common.fullname" . }}-dcae-inputs-input
        - mountPath: /config
          name: {{ include "common.fullname" . }}-dcae-inputs
        image: "{{ .Values.global.envsubstImage }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}-update-config

      - name: {{ include "common.name" . }}-readiness
        image: {{ include "common.repository" . }}/{{ .Values.global.readinessImage }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        command:
          - /app/ready.py
        args:
          - --container-name
          - dcae-cloudify-manager
          - --container-name
          - consul-server
          - --container-name
          - msb-discovery
          - --container-name
          - kube2msb
          - --container-name
          - dcae-config-binding-service
          - --container-name
          - dcae-db
          - --container-name
          - dcae-inventory-api
          - "-t"
          - "15"
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
      - name: init-tls
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: aaf_locator_fqdn
          value: dcae
        image: {{ .Values.global.tlsRepository }}/{{ .Values.global.tlsImage }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        resources: {}
        volumeMounts:
        - mountPath: /opt/app/osaaf
          name: tls-info
      - name: init-consul
        image: {{ .Values.global.consulLoaderRepository }}/{{ .Values.global.consulLoaderImage }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        args:
        - --service
        - "config-binding-service|config-binding-service.{{ include "common.namespace" . }}|10000"
        - --service
        - "config_binding_service|config-binding-service.{{ include "common.namespace" . }}|10000"
        resources: {}
      containers:
        - name: {{ include "common.name" . }}
          image: "{{ include "common.repository" . }}/{{ .Values.image }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          resources:
{{ include "common.resources" . | indent 12 }}
          volumeMounts:
            - mountPath: /inputs
              name: {{ include "common.fullname" . }}-dcae-inputs
            - mountPath: /dcae-configs
              name: {{ include "common.fullname" . }}-dcae-config
            - mountPath: /etc/localtime
              name: localtime
              readOnly: true
            - mountPath: /certs
              name: tls-info
              readOnly: true
          env:
            - name: CMADDR
              value: {{ .Values.config.address.cm.host }}
            - name: CMPASS
              {{- include "common.secret.envFromSecretFast" (dict "global" . "uid" "cm-pass" "key" "password") | indent 14}}
            - name: CMPROTO
              value: {{ .Values.config.address.cm.proto }}
            - name: CMPORT
              value: !!string {{ .Values.config.address.cm.port }}
            - name: CONSUL
              value: {{ .Values.config.address.consul.host }}:{{ .Values.config.address.consul.port }}
            - name: DCAE_NAMESPACE
              value: {{ .Values.dcae_ns | default "" }}
            - name: ONAP_NAMESPACE
              value: {{ include "common.namespace" . }}
      volumes:
        - name: {{ include "common.fullname" . }}-dcae-inputs-input
          configMap:
            name: {{ include "common.fullname" . }}-dcae-inputs
        - name: {{ include "common.fullname" . }}-dcae-inputs
          emptyDir:
            medium: Memory
        - name: {{ include "common.fullname" . }}-dcae-config
          configMap:
            name: {{ include "common.fullname" . }}-dcae-config
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: tls-info
          emptyDir: {}
      imagePullSecrets:
        - name: "{{ include "common.namespace" . }}-docker-registry-key"

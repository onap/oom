{{/*
# Copyright (c) 2017 Amdocs, Bell Canada
# Modifications Copyright (c) 2018 AT&T
# Modifications Copyright (c) 2020 Nokia
# Modifications Copyright (c) 2021 Orange
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ include "common.release" . }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "common.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ include "common.release" . }}
      name: {{ include "common.name" . }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- if .Values.global.msbEnabled }}
        {{ $values := .Values }}
        msb.onap.org/service-info: '[
        {{- range $api_endpoint := $values.aai_enpoints -}}
          {{- range $api_version := $values.api_list }}
          {
              "serviceName": "_{{ $api_endpoint.name }}",
              "version": "v{{ $api_version }}",
              "url": "/aai/v{{ $api_version }}/{{ $api_endpoint.url }}",
              "protocol": "REST",
              "port": "8447",
              "enable_ssl": true,
              "lb_policy":"ip_hash",
              "visualRange": "1",
              "path": "/aai/v{{ $api_version }}/{{ $api_endpoint.url }}"
          },
          {
              "serviceName": "{{ $api_endpoint.name }}",
              "version": "v{{ $api_version }}",
              "url": "/aai/v{{ $api_version }}/{{ $api_endpoint.url }}",
              "protocol": "REST",
              "port": "8447",
              "enable_ssl": true,
              "lb_policy":"ip_hash",
              "visualRange": "1"
          },
          {{- end }}
        {{- end }}
          ]'
      {{- end }}
    spec:
      hostname: aai-resources
      {{- if .Values.global.installSidecarSecurity }}
      hostAliases:
      - ip: {{ .Values.global.aaf.serverIp }}
        hostnames:
        - {{ .Values.global.aaf.serverHostname }}
      {{- end }}
      initContainers: {{ include "common.certInitializer.initContainer" . | nindent 6 }}
      {{- if .Values.global.aafEnabled }}
      - name: {{ include "common.name" . }}-update-config
        command:
        - sh
        args:
        - -c
        - |
          export $(grep '^c' {{ .Values.certInitializer.credsPath }}/mycreds.prop | xargs -0)
          export TRUSTSTORE_PASSWORD="${cadi_truststore_password}"
          export KEYSTORE_PASSWORD="${cadi_keystore_password_p12}"
          echo "TRUSTSTORE PASSWORD: $TRUSTSTORE_PASSWORD"
          echo "KEYSTORE PASSWORD  : $KEYSTORE_PASSWORD"
          cd /config-input
          for PFILE in `ls -1`
          do
            envsubst <${PFILE} >/config/${PFILE}
          done
          cd /aaf-config-input
          for PFILE in `ls -1`
          do
            envsubst <${PFILE} >/aaf-config/${PFILE}
          done
          cat /config/aaiconfig.properties
        env:
        - name: TRUSTORE_ALL_PASSWORD
          value: {{ .Values.certInitializer.truststoreAllPassword }}
        volumeMounts: {{ include "common.certInitializer.volumeMount" . | nindent 8 }}
        - mountPath: /config-input
          name: {{ include "common.fullname" . }}-config
        - mountPath: /config
          name: {{ include "common.fullname" . }}-config-processed
        - mountPath: /aaf-config-input
          name: {{ include "common.fullname" . }}-aaf-properties
        - mountPath: /aaf-config
          name: {{ include "common.fullname" . }}-aaf-properties-processed
        image: {{ include "repositoryGenerator.image.envsubst" . }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
      {{- end }}
      - name: {{ include "common.name" . }}-readiness
        command:
      {{- if .Values.global.jobs.migration.enabled }}
        - /app/ready.py
        args:
        - --job-name
        - {{ include "common.release" . }}-aai-graphadmin-migration
      {{- else if .Values.global.jobs.createSchema.enabled  }}
        - /app/ready.py
        args:
        - --job-name
        - {{ include "common.release" . }}-aai-graphadmin-create-db-schema
      {{- else }}
        - /app/ready.py
        args:
        - --container-name
        {{- if .Values.global.cassandra.localCluster }}
        - aai-cassandra
        {{- else }}
        - cassandra
        {{- end }}
        - --container-name
        - aai-schema-service
      {{- end }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: {{ include "repositoryGenerator.image.readiness" . }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
      {{- if .Values.global.installSidecarSecurity }}
      - name: {{ .Values.global.tproxyConfig.name }}
        image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.global.tproxyConfig.image }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        securityContext:
          privileged: true
      {{- end }}
      containers:
      - name: {{ include "common.name" . }}
        image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.image }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        env:
        - name: LOCAL_USER_ID
          value: {{ .Values.global.config.userId | quote }}
        - name: LOCAL_GROUP_ID
          value: {{ .Values.global.config.groupId | quote }}
        - name: POST_JAVA_OPTS
          value: '-Djavax.net.ssl.trustStore=/opt/app/aai-resources/resources/aaf/truststoreONAPall.jks -Djavax.net.ssl.trustStorePassword=changeit'
        volumeMounts: {{ include "common.certInitializer.volumeMount" . | nindent 8 }}
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        - mountPath: /opt/app/aai-resources/resources/etc/appprops/janusgraph-realtime.properties
          name: {{ include "common.fullname" . }}-config
          subPath: janusgraph-realtime.properties
        - mountPath: /opt/app/aai-resources/resources/etc/appprops/janusgraph-cached.properties
          name: {{ include "common.fullname" . }}-config
          subPath: janusgraph-cached.properties
        - mountPath: /opt/app/aai-resources/resources/etc/appprops/aaiconfig.properties
          name: {{ include "common.fullname" . }}-config
          subPath: aaiconfig.properties
        - mountPath: /opt/aai/logroot/AAI-RES
          name: {{ include "common.fullname" . }}-logs
        - mountPath: /opt/app/aai-resources/resources/logback.xml
          name: {{ include "common.fullname" . }}-config
          subPath: logback.xml
        - mountPath: /opt/app/aai-resources/resources/localhost-access-logback.xml
          name: {{ include "common.fullname" . }}-config
          subPath: localhost-access-logback.xml
        - mountPath: /opt/app/aai-resources/resources/etc/auth/realm.properties
          name: {{ include "common.fullname" . }}-config
          subPath: realm.properties
        {{- if .Values.global.installSidecarSecurity }}
        - mountPath: /opt/app/aai-resources/resources/etc/auth/aai_policy.json
          name: {{ include "common.fullname" . }}-aai-policy
          subPath: aai_policy.json
        {{- end }}
        - mountPath: /opt/app/aai-resources/resources/aaf/bath_config.csv
          name: {{ include "common.fullname" . }}-aaf-certs
          subPath: bath_config.csv
        - mountPath: /opt/app/aai-resources/resources/aaf/org.onap.aai.props
          name: {{ include "common.fullname" . }}-aaf-properties
          subPath: org.onap.aai.props
        - mountPath: /opt/app/aai-resources/resources/aaf/org.osaaf.location.props
          name: {{ include "common.fullname" . }}-aaf-properties
          subPath: org.osaaf.location.props
        - mountPath: /opt/app/aai-resources/resources/aaf/permissions.properties
          name: {{ include "common.fullname" . }}-aaf-properties
          subPath: permissions.properties
        - mountPath: /opt/app/aai-resources/resources/cadi.properties
          name: {{ include "common.fullname" . }}-aaf-properties
          subPath: cadi.properties
        - mountPath: /opt/app/aai-resources/resources/application.properties
          name: {{ include "common.fullname" . }}-config
          subPath: application.properties
        - mountPath: /opt/app/aai-resources/resources/application-keycloak.properties
          name: {{ include "common.fullname" . }}-config
          subPath: application-keycloak.properties
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        - containerPort: {{ .Values.service.internalPort2 }}
        # disable liveness probe when breakpoints set in debugger
        # so K8s doesn't restart unresponsive container
        {{- if .Values.liveness.enabled }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.liveness.periodSeconds }}
        {{- end }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.readiness.periodSeconds }}
        resources: {{ include "common.resources" . | nindent 12 }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{ toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{ toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      # side car containers
      - name: filebeat-onap
        image: {{ include "repositoryGenerator.image.logging" . }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        volumeMounts:
        - mountPath: /usr/share/filebeat/filebeat.yml
          subPath: filebeat.yml
          name: filebeat-conf
        - mountPath: /var/log/onap
          name: {{ include "common.fullname" . }}-logs
        - mountPath: /usr/share/filebeat/data
          name: {{ include "common.fullname" . }}-filebeat
        resources: {{ include "common.resources" . | nindent 12 }}
    {{- if .Values.global.installSidecarSecurity }}
      - name: {{ .Values.global.rproxy.name }}
        image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.global.rproxy.image }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        env:
        - name: CONFIG_HOME
          value: "/opt/app/rproxy/config"
        - name: KEY_STORE_PASSWORD
          value: {{ .Values.sidecar.keyStorePassword }}
        - name: spring_profiles_active
          value: {{ .Values.global.rproxy.activeSpringProfiles }}
        volumeMounts:
        - name: {{ include "common.fullname" . }}-rproxy-config
          mountPath: /opt/app/rproxy/config/forward-proxy.properties
          subPath: forward-proxy.properties
        - name: {{ include "common.fullname" . }}-rproxy-config
          mountPath: /opt/app/rproxy/config/primary-service.properties
          subPath: primary-service.properties
        - name: {{ include "common.fullname" . }}-rproxy-config
          mountPath: /opt/app/rproxy/config/reverse-proxy.properties
          subPath: reverse-proxy.properties
        - name: {{ include "common.fullname" . }}-rproxy-config
          mountPath: /opt/app/rproxy/config/cadi.properties
          subPath: cadi.properties
        - name: {{ include "common.fullname" . }}-rproxy-log-config
          mountPath: /opt/app/rproxy/config/logback-spring.xml
          subPath: logback-spring.xml
        - name: {{ include "common.fullname" . }}-rproxy-uri-auth-config
          mountPath: /opt/app/rproxy/config/auth/uri-authorization.json
          subPath: uri-authorization.json
        - name: {{ include "common.fullname" . }}-rproxy-auth-config
          mountPath: /opt/app/rproxy/config/auth/tomcat_keystore
          subPath: tomcat_keystore
        - name: {{ include "common.fullname" . }}-rproxy-auth-config
          mountPath: /opt/app/rproxy/config/auth/client-cert.p12
          subPath: client-cert.p12
        - name: {{ include "common.fullname" . }}-rproxy-auth-config
          mountPath: /opt/app/rproxy/config/auth/aaf_truststore.jks
          subPath: aaf_truststore.jks
        - name: {{ include "common.fullname" . }}-rproxy-security-config
          mountPath: /opt/app/rproxy/config/security/keyfile
          subPath: keyfile
        - name: {{ include "common.fullname" . }}-rproxy-auth-config
          mountPath: /opt/app/rproxy/config/auth/org.onap.aai.p12
          subPath: org.onap.aai.p12
        ports:
        - containerPort: {{ .Values.global.rproxy.port }}
      - name: {{ .Values.global.fproxy.name }}
        image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.global.fproxy.image }}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        env:
        - name: CONFIG_HOME
          value: "/opt/app/fproxy/config"
        - name: KEY_STORE_PASSWORD
          value: {{ .Values.sidecar.keyStorePassword }}
        - name: TRUST_STORE_PASSWORD
          value: {{ .Values.sidecar.trustStorePassword }}
        - name: spring_profiles_active
          value: {{ .Values.global.fproxy.activeSpringProfiles }}
        volumeMounts:
        - name: {{ include "common.fullname" . }}-fproxy-config
          mountPath: /opt/app/fproxy/config/fproxy.properties
          subPath: fproxy.properties
        - name: {{ include "common.fullname" . }}-fproxy-log-config
          mountPath: /opt/app/fproxy/config/logback-spring.xml
          subPath: logback-spring.xml
        - name: {{ include "common.fullname" . }}-fproxy-auth-config
          mountPath: /opt/app/fproxy/config/auth/fproxy_truststore
          subPath: fproxy_truststore
        - name: {{ include "common.fullname" . }}-fproxy-auth-config
          mountPath: /opt/app/fproxy/config/auth/tomcat_keystore
          subPath: tomcat_keystore
        - name: {{ include "common.fullname" . }}-fproxy-auth-config
          mountPath: /opt/app/fproxy/config/auth/client-cert.p12
          subPath: client-cert.p12
        ports:
        - containerPort: {{ .Values.global.fproxy.port }}
    {{- end }}
      volumes: {{ include "common.certInitializer.volumes" . | nindent 6 }}
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name: filebeat-conf
        configMap:
          name: aai-filebeat
      - name: {{ include "common.fullname" . }}-logs
        emptyDir: {}
      - name: {{ include "common.fullname" . }}-filebeat
        emptyDir: {}
      - name: {{ include "common.fullname" . }}-config
        configMap:
          name: {{ include "common.fullname" . }}-configmap
      - name: {{ include "common.fullname" . }}-config-processed
        emptyDir:
          medium: Memory
      - name: {{ include "common.fullname" . }}-aaf-properties
        configMap:
          name: {{ include "common.fullname" . }}-aaf-props
      - name: {{ include "common.fullname" . }}-aaf-properties-processed
        emptyDir:
          medium: Memory
      - name: {{ include "common.fullname" . }}-aaf-certs
        secret:
          secretName: {{ include "common.fullname" . }}-aaf-keys
    {{- if .Values.global.installSidecarSecurity }}
      - name: {{ include "common.fullname" . }}-aai-policy
        configMap:
          name: {{ include "common.fullname" . }}-aai-policy-configmap
      - name: {{ include "common.fullname" . }}-rproxy-config
        configMap:
          name: {{ include "common.fullname" . }}-rproxy-config
      - name: {{ include "common.fullname" . }}-rproxy-log-config
        configMap:
          name: {{ include "common.fullname" . }}-rproxy-log-config
      - name: {{ include "common.fullname" . }}-rproxy-uri-auth-config
        configMap:
          name: {{ include "common.fullname" . }}-rproxy-uri-auth-config
      - name: {{ include "common.fullname" . }}-rproxy-auth-config
        secret:
          secretName: {{ include "common.fullname" . }}-rproxy-auth-config
      - name: {{ include "common.fullname" . }}-rproxy-security-config
        secret:
          secretName: {{ include "common.fullname" . }}-rproxy-security-config
      - name: {{ include "common.fullname" . }}-fproxy-config
        configMap:
          name: {{ include "common.fullname" . }}-fproxy-config
      - name: {{ include "common.fullname" . }}-fproxy-log-config
        configMap:
          name: {{ include "common.fullname" . }}-fproxy-log-config
      - name: {{ include "common.fullname" . }}-fproxy-auth-config
        secret:
          secretName: {{ include "common.fullname" . }}-fproxy-auth-config
    {{- end }}
      restartPolicy: {{ .Values.restartPolicy }}
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"

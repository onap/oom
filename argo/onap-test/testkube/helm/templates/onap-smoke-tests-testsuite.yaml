# ============LICENSE_START=======================================================
#  Copyright (c) 2025 Deutsche Telekom
# ================================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#  SPDX-License-Identifier: Apache-2.0
# ============LICENSE_END=========================================================
---
apiVersion: tests.testkube.io/v3
kind: TestSuite
metadata:
  name: {{ .Values.tests.smokeTests.testsuite.name }}
spec:
  schedule: "{{ .Values.tests.smokeTests.testsuite.cron }}"
  steps:
  {{- /* Gradle tests */}}
  - execute:
    {{- range $usecase := .Values.tests.gradle.tests }}
    {{- range $test := $usecase }}
    {{- if $test.enabled }}
    - test: {{ kebabcase $test.testName }}
    {{- end }}
    {{- end }}
    {{- end }}
    stopOnFailure: false
  {{- /* Smoke tests */}}
  {{- /* Basic tests group */}}
  - stopOnFailure: false
    execute:
  {{- $test := .Values.tests.tests.basicCps }}
  {{- if $test.enabled }}
    - test: {{ $test.testName }}
  {{- end }}
  {{- $test := .Values.tests.tests.basicOnboard }}
  {{- if $test.enabled }}
    - test: {{ $test.testName }}
  {{- end }}
  {{- $test := .Values.tests.tests.basicNetwork }}
  {{- if $test.enabled }}
    - test: {{ $test.testName }}
  {{- end }}
  {{- $test := .Values.tests.tests.basicCds }}
  {{- if $test.enabled }}
    - test: {{ $test.testName }}
  {{- end }}
  {{- $test := .Values.tests.tests.basicSdnc }}
  {{- if $test.enabled }}
    - test: {{ $test.testName }}
  {{- end }}
  {{- $test := .Values.tests.tests.basicCnfMacro }}
  {{- if $test.enabled }}
    - test: {{ $test.testName }}
  {{- end }}
  {{- $test := .Values.tests.tests.controlPanelSmokeTest }}
  {{- if $test.enabled }}
  - execute:
    - test: {{ $test.testName }}
    stopOnFailure: false
  {{- end }}
  {{- $test := .Values.tests.tests.aaiInitialDataSetup }}
  {{- if $test.enabled }}
  - execute:
    - test: {{ $test.testName }}
    stopOnFailure: false
  {{- end }}
  {{- $test := .Values.tests.tests.serviceWithoutResource }}
  {{- if $test.enabled }}
  - execute:
    - test: {{ $test.testName }}
    stopOnFailure: false
  {{- end }}
  {{- $test := .Values.tests.tests.addDeletePnfInRunningService }}
  {{- if $test.enabled }}
  - execute:
    - test: {{ $test.testName }}
    stopOnFailure: false
  {{- end }}
  {{- $test := .Values.tests.tests.pnfWithVesEvent }}
  {{- if $test.enabled }}
  - execute:
    - test: {{ $test.testName }}
    stopOnFailure: false
  {{- end }}
  {{- $test := .Values.tests.tests.pnfWithoutVesEvent }}
  {{- if $test.enabled }}
  - execute:
    - test: {{ $test.testName }}
    stopOnFailure: false
  {{- end }}
  {{- $test := .Values.tests.tests.pnfMacro }}
  {{- if $test.enabled }}
  - execute:
    - test: {{ $test.testName }}
    stopOnFailure: false
  {{- end }}
  {{- $test := .Values.tests.tests.basicPrh }}
  {{- if $test.enabled }}
  - execute:
    - test: {{ $test.testName }}
    stopOnFailure: false
  {{- end }}
  {{- $test := .Values.tests.tests.checkTimeSync }}
  {{- if $test.enabled }}
  - execute:
    - test: {{ $test.testName }}
    stopOnFailure: false
  {{- end }}
  {{- $test := .Values.tests.tests.basicStatus }}
  {{- if $test.enabled }}
  - execute:
    - test: {{ $test.testName }}
    stopOnFailure: false
  {{- end }}
  {{- $test := .Values.tests.tests.basicKafka }}
  {{- if $test.enabled }}
  - execute:
    - test: {{ $test.testName }}
    stopOnFailure: false
  {{- end }}
  {{- $test := .Values.tests.tests.addDeleteCnfMacro }}
  {{- if $test.enabled }}
  - execute:
    - test: {{ $test.testName }}
    stopOnFailure: false
  {{- end }}
  {{- $test := .Values.tests.tests.policyFramework }}
  {{- if $test.enabled }}
  - execute:
    - test: {{ $test.testName }}
    stopOnFailure: false
  {{- end }}
  {{- $test := .Values.tests.tests.vesPublish }}
  {{- if $test.enabled }}
  - execute:
    - test: {{ $test.testName }}
    stopOnFailure: false
  {{- end }}
  {{- if .Values.global.serviceMesh.enabled }}
  executionRequest:
    cronJobTemplate: |
      apiVersion: batch/v1
      kind: CronJob
      metadata:
        annotations:
          argocd.argoproj.io/compare-options: IgnoreExtraneous
          argocd.argoproj.io/sync-options: Prune=false
      spec:
        jobTemplate:
          spec:
            activeDeadlineSeconds: {{ .Values.tests.smokeTests.testsuite.testsuiteJobActiveDeadlineSeconds }}
            template:
              spec:
                serviceAccountName: {{ .Release.Name }}-tests-service-account
  {{- end }}

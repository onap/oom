<!--
# Copyright Â© 2018 Amdocs, Bell Canada, AT&T
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:util="http://www.springframework.org/schema/util"
xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
       ">

    <bean id="champEventPublisher" class="org.onap.aai.event.client.DMaaPEventPublisher" >
        <constructor-arg name="host" value="message-router.{{.Release.Namespace}}:{{.Values.event.port.dmaap}}" />
        <constructor-arg name="topic" value="{{.Values.event.publisher.topic}}" />
        <constructor-arg name="username" value="" />
        <constructor-arg name="password" value="" />
        <constructor-arg name="maxBatchSize" value="100" />
        <constructor-arg name="maxAgeMs" value="250" />
        <constructor-arg name="delayBetweenBatchesMs" value="50" />
        <constructor-arg name="transportType" value="HTTPAUTH" />
        <constructor-arg name="protocol" value="{{.Values.event.protocol}}" />
        <constructor-arg name="contentType" value="application/json" />
    </bean>

    <!-- Graph Implementation Configuration-->
    <util:map id="props" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object">
        <entry key="champcore.event.stream.buffer.capacity" value="50" value-type="java.lang.Integer"/>
        <entry key="champcore.event.stream.publisher-pool-size" value="10" value-type="java.lang.Integer"/>
        <entry key="champcore.event.stream.publisher" value-ref="champEventPublisher"/>

        <entry key="graph.name" value="aaigraph"/>
        <entry key="storage.backend" value="cassandra"/>
        <entry key="storage.cassandra.read-consistency-level" value="LOCAL_QUORUM"/>
        <entry key="storage.cassandra.write-consistency-level" value="LOCAL_QUORUM"/>
        <entry key="storage.cassandra.replication-factor" value="{{ .Values.global.cassandra.replicas }}"/>
        <entry key="storage.cassandra.replication-strategy-class" value="org.apache.cassandra.locator.SimpleStrategy"/>
        <entry key="storage.hostname" value="{{ .Values.global.cassandra.serviceName }}"/>
    </util:map>

    <!-- Janus Implementation -->
    <bean id="graphBuilder" class="org.onap.aai.champjanus.graph.impl.JanusChampGraphImpl$Builder">
        <constructor-arg value="aaigraph"/>
        <constructor-arg ref="props" />
    </bean>

    <bean id="graphImpl" class="org.onap.aai.champjanus.graph.impl.JanusChampGraphImpl">
        <constructor-arg ref="graphBuilder" />
    </bean>

    <bean id="champUUIDService" class="org.onap.champ.service.ChampUUIDService" >
        <constructor-arg name="graphImpl" ref="graphImpl" />
    </bean>

    <bean id="cache" class="org.onap.champ.service.ChampTransactionCache" >
        <constructor-arg name="txTimeOutInSec" value="600" />
        <constructor-arg name="graphImpl" ref="graphImpl" />
    </bean>

    <bean id="champDataService" class="org.onap.champ.service.ChampDataService" >
        <constructor-arg name="champUUIDService" ref="champUUIDService" />
        <constructor-arg name="graphImpl" ref="graphImpl" />
        <constructor-arg name="cache" ref="cache" />
    </bean>

    <bean id="champRestService" class="org.onap.champ.ChampRESTAPI" >
        <constructor-arg name="champDataService" ref="champDataService" />
        <constructor-arg name="champAsyncRequestProcessor"><null/></constructor-arg>
    </bean>
</beans>

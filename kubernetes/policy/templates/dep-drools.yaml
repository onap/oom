#{{ if not .Values.disablePolicyDrools }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: drools
  namespace: "{{ .Values.nsPrefix }}-policy"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: drools
  template:
    metadata:
      labels:
        app: drools
      name: drools
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
              "args": [
                  "--container-name",
                  "mariadb",
                  "--container-name",
                  "nexus"
              ],
              "command": [
                  "/root/ready.py"
              ],
              "env": [
                  {
                      "name": "NAMESPACE",
                      "valueFrom": {
                          "fieldRef": {
                              "apiVersion": "v1",
                              "fieldPath": "metadata.namespace"
                          }
                      }
                  }
              ],
              "image": "{{ .Values.image.readiness }}:{{ .Values.image.readinessVersion }}",
              "imagePullPolicy": "{{ .Values.pullPolicy }}",
              "name": "drools-readiness"
          }
          ]'
    spec:
      hostAliases:
      - ip: "{{ .Values.aaiServiceClusterIp }}"
        hostnames:
        - "aai.api.simpledemo.openecomp.org"
      containers:
      - image: "{{ .Values.image.policyDrools }}:{{ .Values.image.policyDroolsVersion }}"
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: drools
        ports:
        - containerPort: 6969
        - containerPort: 9696
        readinessProbe:
          tcpSocket:
            port: 6969
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        - mountPath: /tmp/policy-install/config
          name: drools
        - mountPath: /usr/share/maven/conf/settings.xml
          name: drools-settingsxml
        - mountPath: /var/log/onap
          name: policy-logs
        - mountPath: /tmp/logback.xml
          name: policy-logback
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "export LOG=wait_logback.log; touch $LOG; export SRC=/tmp/logback.xml; export DST=/opt/app/policy/config/; while [ ! -e $DST ]; do echo 'Waiting for $DST...' >> $LOG; sleep 5; done; sleep 2; /bin/cp -f $SRC $DST; echo 'Done' >> $LOG"]
      - image: {{ .Values.image.filebeat }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: filebeat-onap
        volumeMounts:
        - mountPath: /usr/share/filebeat/filebeat.yml
          name: filebeat-conf
        - mountPath: /var/log/onap
          name: policy-logs
        - mountPath: /usr/share/filebeat/data
          name: policy-data-filebeat
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: filebeat-conf
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/log/filebeat/logback/filebeat.yml
        - name: policy-logs
          emptyDir: {}
        - name: policy-data-filebeat
          emptyDir: {}
        - name: policy-logback
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/log/policy/drools/logback.xml
        - name: drools-settingsxml
          hostPath:
            path:  /dockerdata-nfs/{{ .Values.nsPrefix }}/policy/drools/settings.xml
        - name: drools
          hostPath:
            path:  /dockerdata-nfs/{{ .Values.nsPrefix }}/policy/opt/policy/config/drools/
      imagePullSecrets:
      - name: "{{ .Values.nsPrefix }}-docker-registry-key"
#{{ end }}
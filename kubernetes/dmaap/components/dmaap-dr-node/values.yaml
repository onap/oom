# Copyright Â© 2017 Amdocs, Bell Canada
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#################################################################
# Global configuration defaults.
#################################################################
global:
  loggingDirectory: /var/log/onap/datarouter
  persistence: {}
  aafEnabled: true

#################################################################
# Application configuration defaults.
#################################################################
# application image
image: onap/dmaap/datarouter-node:2.1.6
pullPolicy: Always

# flag to enable debugging - application support required
debugEnabled: false

# application configuration - see parent values chart

# default number of instances
replicaCount: 1

nodeSelector: {}

affinity: {}

# probe configuration parameters
liveness:
  initialDelaySeconds: 30
  periodSeconds: 10
  # necessary to disable liveness probe when setting breakpoints
  # in debugger so K8s doesn't restart unresponsive container
  enabled: true
  port: api

readiness:
  initialDelaySeconds: 30
  periodSeconds: 10
  port: api

## Persist data to a persitent volume
persistence:
  enabled: true
  mountPath: /dockerdata-nfs
  spool:
    enabled: true
    volumeReclaimPolicy: Retain
    accessMode: ReadWriteOnce
    mountSubPath: data-router/dr-node/spool-data
    size: 2Gi
    path: /opt/app/datartr/spool
    labels:
      app.kubernetes.io/component: spool

  event:
    enabled: true
    volumeReclaimPolicy: Retain
    accessMode: ReadWriteOnce
    mountSubPath: data-router/dr-node/event-logs
    path: /opt/app/datartr/logs
    size: 2Gi
    labels:
      app.kubernetes.io/component: event-logs

job:
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-2"
    "helm.sh/hook-delete-policy": hook-succeeded

#################################################################
# AAF part
#################################################################
aafConfig:
  aafDeployFqi: deployer@people.osaaf.org
  aafDeployPass: demo123456!
  fqdn: dmaap-dr-node
  fqi: dmaap-dr-node@dmaap-dr.onap.org
  public_fqdn: dmaap-dr.onap.org
  cadi_longitude: 0.0
  cadi_latitude: 0.0
  app_ns: org.osaaf.aaf
  permission_user: 1000
  permission_group: 1001
  secret_uid: &aaf_secret_uid dmaap-dr-node-aaf-deploy-creds
  credsPath: /opt/app/osaaf/local

#################################################################
# Secrets metaconfig
#################################################################
secrets:
  - uid: *aaf_secret_uid
    type: basicAuth
    externalSecret: '{{ ternary (tpl (default "" .Values.aafConfig.aafDeployCredsExternalSecret) .) "aafIsDisabled" .Values.global.aafEnabled }}'
    login: '{{ .Values.aafConfig.aafDeployFqi }}'
    password: '{{ .Values.aafConfig.aafDeployPass }}'
    passwordPolicy: required

ingress:
  enabled: false
  service:
    - baseaddr: "dmaapdrnode"
      name: "dmaap-dr-node"
      port: 8443
  config:
    ssl: "redirect"

# Resource Limit flavor -By Default using small
flavor: small
# Segregation for Different environment (Small and Large)
resources:
  small:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 500m
      memory: 1Gi
  large:
    limits:
      cpu: 4000m
      memory: 8Gi
    requests:
      cpu: 1000m
      memory: 2Gi
  unlimited: {}

service:
  type: NodePort
  name: dmaap-dr-node
  useNodePortExt: true
  both_tls_and_plain: true
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  ports:
    - name: api
      port: 8443
      plain_port: 8080
      port_protocol: http
      nodePort: 94

config:
  # dr node server configuration
  dmaapDrNode:
    # dr uses the EELF Logging framework https://github.com/att/EELF
    # and supports the following log levels: TRACE, DEBUG, INFO, WARN, ERROR, OFF
    logLevel: "INFO"

#{{ if not .Values.disablePolicyBrmsgw }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: brmsgw
  namespace: "{{ .Values.nsPrefix }}-policy"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: brmsgw
  template:
    metadata:
      labels:
        app: brmsgw
      name: brmsgw
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
              "args": [
                  "--container-name",
                  "pap"
              ],
              "command": [
                  "/root/ready.py"
              ],
              "env": [
                  {
                      "name": "NAMESPACE",
                      "valueFrom": {
                          "fieldRef": {
                              "apiVersion": "v1",
                              "fieldPath": "metadata.namespace"
                          }
                      }
                  }
              ],
              "image": "{{ .Values.image.readiness }}:{{ .Values.image.readinessVersion }}",
              "imagePullPolicy": "{{ .Values.pullPolicy }}",
              "name": "brmsgw-readiness"
          }
          ]'
    spec:
      containers:
      - command:
        - /bin/bash
        - ./do-start.sh
        - brmsgw
        image: "{{ .Values.image.policyPe }}:{{ .Values.image.policyPeVersion}}"
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: brmsgw
        volumeMounts:
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        - mountPath: /tmp/policy-install/config
          name: pe
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: pe
          hostPath:
            path: /dockerdata-nfs/{{ .Values.nsPrefix }}/policy/opt/policy/config/pe/
      imagePullSecrets:
      - name: "{{ .Values.nsPrefix }}-docker-registry-key"
#{{ end }}
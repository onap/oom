#
# ============LICENSE_START=======================================================
# Copyright Â© 2017 AT&T Intellectual Property. All rights reserved.
# ================================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============LICENSE_END=========================================================
#
# ECOMP is a trademark and service mark of AT&T Intellectual Property.
#

query.fast-property=true
query.smart-limit=false

{{ if .Values.config.cluster.cassandra.dynamic }}

{{- $seed_size := default 1 .Values.global.cassandra.replicas | int -}}
{{- $global := . }}

storage.backend=cassandra
storage.hostname={{- range $i, $e := until $seed_size }}{{ $global.Release.Name }}-{{$global.Values.global.cassandra.serviceName}}-{{ $i }}.{{$global.Values.global.cassandra.serviceName}},{{- end }}

storage.cassandra.keyspace=aaigraph

storage.cassandra.read-consistency-level=LOCAL_QUORUM
storage.cassandra.write-consistency-level=LOCAL_QUORUM
storage.cassandra.replication-factor=3
storage.cassandra.replication-strategy-class=org.apache.cassandra.locator.SimpleStrategy

{{ else }}

{{ if .Values.config.storage }}

storage.backend={{ .Values.config.storage.backend }}

{{ if eq .Values.config.storage.backend "cassandra" }}

storage.hostname={{ .Values.config.storage.hostname }}
storage.cassandra.keyspace={{ .Values.config.storage.name }}

storage.cassandra.read-consistency-level={{ .Values.config.storage.cassandra.readConsistency }}
storage.cassandra.write-consistency-level={{ .Values.config.storage.cassandra.writeConsistency }}
storage.cassandra.replication-factor={{ .Values.config.storage.cassandra.replicationFactor | int }}
storage.cassandra.astyanax.cluster-name= {{ .Values.config.storage.clusterName }}
storage.cassandra.astyanax.local-datacenter= {{ .Values.config.storage.localDataCenter }}

storage.connection-timeout={{ .Values.config.storage.connectionTimeout | int }}
cache.tx-cache-size={{ .Values.config.storage.cacheSize | int }}
log.tx.key-consistent={{ .Values.config.storage.keyConsistent }}

{{ else if eq .Values.config.storage.backend "cql" }}

storage.hostname={{ .Values.config.storage.hostname }}
storage.cql.keyspace={{ .Values.config.storage.name }}

storage.cql.read-consistency-level={{ .Values.config.storage.cql.readConsistency }}
storage.cql.write-consistency-level={{ .Values.config.storage.cql.readConsistency }}
storage.cql.replication-factor={{ .Values.config.storage.cql.replicationFactor | int }}

storage.cql.only-use-local-consistency-for-system-operations={{ .Values.config.storage.cql.localConsistencyForSysOps }}
storage.cql.cluster-name={{ .Values.config.storage.clusterName }}
storage.cql.local-datacenter={{ .Values.config.storage.localDataCenter }}

storage.connection-timeout={{ .Values.config.storage.connectionTimeout | int }}
cache.tx-cache-size={{ .Values.config.storage.cacheSize | int }}
log.tx.key-consistent={{ .Values.config.storage.keyConsistent }}

{{ else if eq .Values.config.storage.backend "hbase" }}

storage.hostname={{ .Values.config.storage.hostname }}
storage.hbase.table={{ .Values.config.storage.name }}

storage.connection-timeout={{ .Values.config.storage.connectionTimeout | int }}
cache.tx-cache-size={{ .Values.config.storage.cacheSize | int }}
log.tx.key-consistent={{ .Values.config.storage.keyConsistent }}

{{ end }}

{{ end }}

{{ end }}

storage.lock.wait-time=300
# Setting db-cache to false ensure the fastest propagation of changes across servers
cache.db-cache = false
#load graphson file on startup
load.snapshot.file=false

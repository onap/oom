
{{/*
  Create MariDB Database via mariadb-operator
*/}}
{{- define "common.mariadbOpDatabase" -}}
{{- $dot := default . .dot -}}
{{- $dbname := (required "'dbame' param, is required." .dbname) -}}
{{- $dbinst := (required "'dbinst' param, is required." .dbinst) -}}
---
apiVersion: mariadb.mmontes.io/v1alpha1
kind: Database
metadata:
  name: {{ Values.config.mysqlDatabase }}
spec:
  mariaDbRef:
    name: {{ $dbinst }}
  characterSet: utf8
  collate: utf8_general_ci
{{- end -}}

{{/*
  Create MariaDB User via mariadb-operator
*/}}
{{- define "common.mariadbOpUser" -}}
{{- $dot := default . .dot -}}
{{- $dbuser := (required "'dbuser' param, is required." .dbuser) -}}
{{- $dbinst := (required "'dbinst' param, is required." .dbinst) -}}
{{- $dbsecret := (required "'dbsecret' param, is required." .dbsecret) -}}
---
apiVersion: mariadb.mmontes.io/v1alpha1
kind: User
metadata:
  name: {{ Values.config.userName }}
spec:
  # If you want the user to be created with a different name than the resource name
  # name: user-custom
  mariaDbRef:
    name: {{ $dbinst }}
  passwordSecretKeyRef:
    name: {{ $dbsecret }}
    key: password
  # This field is immutable and defaults to 10
  maxUserConnections: 20
{{- end -}}

{{/*
  Grant rights to a MariaDB User via mariadb-operator
*/}}
{{- define "common.mariadbOpGrants" -}}
{{- $dot := default . .dot -}}
{{- $dbuser := (required "'dbuser' param, is required." .dbuser) -}}
{{- $dbname := (required "'dbame' param, is required." .dbname) -}}
{{- $dbinst := (required "'dbinst' param, is required." .dbinst) -}}
---
apiVersion: mariadb.mmontes.io/v1alpha1
kind: Grant
metadata:
  name: grant
spec:
  mariaDbRef:
    name: {{ $dbinst }}
  privileges:
    - "SELECT"
    - "INSERT"
    - "UPDATE"
  database: {{ $dbname }}
  table: "*"
  username: {{ $dbuser }}
  grantOption: true
  host: "%"
{{- end -}}

{{/*
  Create a MariaDB instance via mariadb-operator
*/}}
{{- define "common.mariadbOpInstance" -}}
{{- $global := .Values.global }}
{{- $dbinst := include "common.name" . -}}
{{- $dbusersecret := include "mariadbInit.mariadbClusterSecret" (dict "dot" . "chartName" .Values.global.mariadbGalera.nameOverride) -}}
---
apiVersion: mariadb.mmontes.io/v1alpha1
kind: MariaDB
metadata:
  name: {{ $dbinst }}
spec:
  podSecurityContext:
    runAsUser: 10001
    runAsGroup: 10001
    fsGroup: 10001
  inheritMetadata:
    {{ if .Values.podAnnotations -}}
    annotations: {{ toYaml .Values.podAnnotations | nindent 6 }}
    {{- end }}
    labels:
      app: {{ $dbinst }}
      version: {{ .Values.mariadbOperator.appVersion }}
  rootPasswordSecretKeyRef:
    name: {{ include "common.mariadb.secret.rootPassSecretName"
        (dict "dot" . "chartName" .Values.global.mariadbGalera.nameOverride) }}
    key: password
  image:
    repository: {{ include "repositoryGenerator.dockerHubRepository" . }}/{{ .Values.mariadbOperator.image }}
    tag: {{ .Values.mariadbOperator.appVersion }}
    pullPolicy: IfNotPresent
  imagePullSecrets:
    - name: {{ include "common.namespace" . }}-docker-registry-key
  port: 3306
  replicas: {{ .Values.replicaCount }}
  galera:
    enabled: {{ .Values.mariadbOperator.galera.enabled }}
    sst: mariabackup
    replicaThreads: 1
    agent:
      image:
        repository: {{ include "repositoryGenerator.githubContainerRegistry" . }}/{{ .Values.mariadbOperator.galera.agentImage }}
        tag: {{ .Values.mariadbOperator.galera.agentVersion }}
        pullPolicy: IfNotPresent
      port: 5555
      kubernetesAuth:
        enabled: true
        authDelegatorRoleName: {{ $dbinst }}-auth
      gracefulShutdownTimeout: 5s
    recovery:
      enabled: true
      clusterHealthyTimeout: 5m
      clusterBootstrapTimeout: 10m
      podRecoveryTimeout: 5m
      podSyncTimeout: 10m
    initContainer:
      image:
        repository: {{ include "repositoryGenerator.githubContainerRegistry" . }}/{{ .Values.mariadbOperator.galera.initImage }}
        tag: {{ .Values.mariadbOperator.galera.initVersion }}
        pullPolicy: IfNotPresent
    volumeClaimTemplate:
      resources:
        requests:
          storage: 50Mi
      accessModes:
        - ReadWriteOnce
  livenessProbe:
    exec:
      command:
        - bash
        - '-c'
        {{- if .Values.mariadbOperator.galera.enabled }}
        - >-
          mariadb -u root -p"${MARIADB_ROOT_PASSWORD}" -e "SHOW STATUS LIKE
          'wsrep_ready'" | grep -c ON
        {{- else }}
        - mariadb -u root -p"${MARIADB_ROOT_PASSWORD}" -e "SELECT 1;"
        {{- end }}
    initialDelaySeconds: 20
    periodSeconds: 10
    timeoutSeconds: 5
  readinessProbe:
    exec:
      command:
        - bash
        - '-c'
        {{- if .Values.mariadbOperator.galera.enabled }}
        - >-
          mariadb -u root -p"${MARIADB_ROOT_PASSWORD}" -e "SHOW STATUS LIKE
          'wsrep_ready'" | grep -c ON
        {{- else }}
        - mariadb -u root -p"${MARIADB_ROOT_PASSWORD}" -e "SELECT 1;"
        {{- end }}
    initialDelaySeconds: 20
    periodSeconds: 10
    timeoutSeconds: 5
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: kubernetes.io/hostname
  tolerations:
    - key: mariadb.mmontes.io/ha
      operator: Exists
      effect: NoSchedule
  podDisruptionBudget:
    maxUnavailable: 50%
  updateStrategy:
    type: RollingUpdate
  myCnf: |
    [mysqld]
    bind-address=0.0.0.0
    default_storage_engine=InnoDB
    binlog_format=row
    innodb_autoinc_lock_mode=2
    max_allowed_packet=256M
  #myCnfConfigMapKeyRef:
  #  key: my.cnf
  #  name: cds-mariadb
  resources: {{ include "common.resources" . | nindent 4 }}
  volumeClaimTemplate:
    {{- if .Values.mariadbOperator.storageClassName }}
    storageClassName: {{ .Values.k8ssandraOperator.persistence.storageClassName }}
    {{- end }}
    resources:
      requests:
        storage: {{ .Values.persistence.size | quote }}
    accessModes:
      - ReadWriteOnce
{{-  if .Values.config.mysqlDatabase }}
{{ include "common.mariadbOpDatabase" (dict "dot" . "dbname" .Values.config.mysqlDatabase "dbinst" $dbinst) }}
{{-  end }}
{{-  if .Values.config.userName }}
{{ include "common.mariadbOpUser" (dict "dot" . "dbuser" .Values.config.userName "dbinst" $dbinst "dbsecret" $dbusersecret) }}
{{-  end }}
{{- end -}}

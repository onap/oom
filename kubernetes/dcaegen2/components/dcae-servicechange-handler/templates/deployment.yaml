{{/*
#============LICENSE_START========================================================
# ================================================================================
# Copyright (c) 2019 AT&T Intellectual Property. All rights reserved.
# ================================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============LICENSE_END=========================================================
*/}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ include "common.release" . }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "common.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ include "common.release" . }}
    spec:
      initContainers:
        - name: {{ include "common.name" . }}-readiness
          image: {{ include "repositoryGenerator.image.readiness" . }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          command:
            - /app/ready.py
          args:
            - --container-name
            - "dcae-inventory-api"
            - --container-name
            - "message-router"
            - --container-name
            - "sdc-be"
            - "-t"
            - "45"
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
        - name: init-tls
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.global.tlsImage }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          resources: {}
          volumeMounts:
            - mountPath: /opt/app/osaaf
              name: tls-info
      containers:
        - name: {{ include "common.name" . }}
          image: {{ include "repositoryGenerator.repository" . }}/{{ .Values.image }}
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          resources:
{{ include "common.resources" . | indent 12 }}
          # disable liveness probe when breakpoints set in debugger
          # so K8s doesn't restart unresponsive container
          {{- if eq .Values.liveness.enabled true }}
          livenessProbe:
            exec:
              command: [{{ .Values.liveness.script }}]
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          {{ end }}
          readinessProbe:
            exec:
              command: [{{ .Values.readiness.script }}]
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
          volumeMounts:
            - name: {{  include "common.fullname" . }}-sch-config
              mountPath: /opt/config.json
              subPath: config.json
            # NOTE: This is tied to the PATH_TO_CACERT env variable
            - mountPath: /opt/cert/
              name: tls-info
          env:
            - name: CONSUL_HOST
              value: consul.{{ include "common.namespace" . }}
            - name: PATH_TO_CACERT
              value: "/opt/cert/cacert.pem"
            - name: SCH_ARGS
              value: "prod /opt/config.json"
      volumes:
        - name: {{ include "common.fullname" . }}-sch-config
          configMap:
            name: {{ include "common.fullname" . }}-configmap
        - emptyDir: {}
          name: tls-info
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"

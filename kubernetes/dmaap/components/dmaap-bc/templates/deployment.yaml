# Modifications Copyright Â© 2018 Amdocs,Bell Canada
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ include "common.release" . }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ include "common.release" . }}
    spec:
      initContainers:
{{- if .Values.global.aafEnabled }}
      - command:
        - /root/ready.py
        args:
        - --container-name
        - aaf-locate
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: "{{ .Values.global.readinessRepository }}/{{ .Values.global.readinessImage }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}-aaf-readiness
      - name: {{ include "common.name" . }}-dbc-aaf-config
        image: "{{ include "common.repository" . }}/{{ .Values.global.aafAgentImage }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        command: ["bash","-c","exec /opt/app/aaf_config/bin/agent.sh"]
        volumeMounts:
        - mountPath: {{ .Values.persistence.aafCredsPath }}
          name: {{ include "common.name" . }}-aaf-config
        env:
        - name: APP_FQI
          value: "{{ .Values.aafConfig.fqi }}"
        - name: aaf_locate_url
          value: "https://aaf-locate.{{ .Release.Namespace }}:8095"
        - name: aaf_locator_container
          value: "{{ .Values.global.aafLocatorContainer }}"
        - name: aaf_locator_container_ns
          value: "{{ .Release.Namespace }}"
        - name: aaf_locator_fqdn
          value: "{{ .Values.aafConfig.fqdn }}"
        - name: aaf_locator_public_fqdn
          value: "{{.Values.aafConfig.publicFqdn}}"
        - name: aaf_locator_app_ns
          value: "{{ .Values.global.aafAppNs }}"
        - name: DEPLOY_FQI
          value: "{{ .Values.aafConfig.aafDeployFqi }}"
        - name: DEPLOY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "common.fullname" . }}-secret
              key: aaf-deploy-password
        - name: cadi_longitude
          value: "{{ .Values.aafConfig.cadiLongitude }}"
        - name: cadi_latitude
          value: "{{ .Values.aafConfig.cadiLatitude }}"
{{- end }}
{{- if .Values.PG.enabled }}
      - command:
        - /root/ready.py
        args:
        - --container-name
        - {{ .Values.postgres.nameOverride }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: "{{ .Values.global.readinessRepository }}/{{ .Values.global.readinessImage }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}-postgres-readiness
{{- end}}
      containers:
        - name: {{ include "common.name" . }}
          image: "{{ include "common.repository" . }}/{{ .Values.image }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          ports:
          - containerPort: {{ .Values.service.internalPort }}
          - containerPort: {{ .Values.service.internalPort2 }}
          {{ if eq .Values.liveness.enabled true -}}
          livenessProbe:
            httpGet:
              port: {{ .Values.service.internalPort }}
              path: /webapi/info
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          readinessProbe:
            httpGet:
              host: {{ .Values.dmaapMessageRouterService }}
              port: 3904
              path: /topics
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
          {{ end -}}
          volumeMounts:
          - mountPath: /etc/localtime
            name: localtime
            readOnly: true
# NOTE: on the following several configMaps, careful to include / at end
#       since there may be more than one file in each mountPath
          - name: {{ include "common.name" . }}-config
            mountPath: /opt/app/config/conf/
          - name: {{ include "common.name" . }}-aaf-config
            mountPath: /opt/app/dmaapbc/etc/org.onap.dmaap-bc.props
            subPath: org.onap.dmaap-bc.props
          resources:
{{ include "common.resources" . }}
        {{- if .Values.nodeSelector }}
        nodeSelector:
{{ toYaml .Values.nodeSelector | indent 10 }}
        {{- end -}}
        {{- if .Values.affinity }}
        affinity:
{{ toYaml .Values.affinity | indent 10 }}
        {{- end }}
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: {{ include "common.name" . }}-config
          configMap:
            name: {{ include "common.fullname" . }}-config
        - name: {{ include "common.name" . }}-aaf-config
          configMap:
            name: {{ include "common.fullname" . }}-aaf-config
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"

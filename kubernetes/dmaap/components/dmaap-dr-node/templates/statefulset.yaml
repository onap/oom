# Copyright Â© 2017 Amdocs, Bell Canada
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ .Values.config.dmaapDrNode.name }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
        - name: {{ include "common.name" . }}-readiness
          image: "{{ .Values.global.readinessRepository }}/{{ .Values.global.readinessImage }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          command:
          - /root/ready.py
          args:
          - --container-name
          - dmaap-dr-prov
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
      containers:
        - name: {{ include "common.name" . }}
          image: "{{ include "common.repository" . }}/{{ .Values.image }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          ports:
          - containerPort: {{.Values.config.dmaapDrNode.externalPort}}
          - containerPort: {{.Values.config.dmaapDrNode.externalPort2}}
          {{- if eq .Values.liveness.enabled true }}
          livenessProbe:
            tcpSocket:
              port: {{.Values.config.dmaapDrNode.internalPort}}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          {{ end -}}
          readinessProbe:
            tcpSocket:
              port: {{.Values.config.dmaapDrNode.internalPort}}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
          volumeMounts:
          - mountPath: {{ .Values.persistence.spoolPath }}
            name: {{ include "common.fullname" . }}-spool-data-pvc
          - mountPath: {{ .Values.persistence.eventLogsPath }}
            name: {{ include "common.fullname" . }}-event-logs-pvc
          - mountPath: /etc/localtime
            name: localtime
            readOnly: false
          - mountPath: /opt/app/datartr/etc/dedicatedFeed.json
            name: {{ include "common.fullname" . }}-create-feed-config
            subPath: dedicatedFeed.json
          - mountPath: /opt/app/datartr/etc/createFeed.sh
            name: {{ include "common.fullname" . }}-create-feed-config
            subPath: createFeed.sh
          - mountPath: /opt/app/datartr/etc/node.properties
            name: {{ include "common.fullname" . }}-config
            subPath: node.properties
          - mountPath: /opt/app/datartr/etc/drNodeCadi.properties
            name: {{ include "common.fullname" . }}-config
            subPath: drNodeCadi.properties
          lifecycle:
            postStart:
              exec:
                command:
                  - /opt/app/datartr/etc/createFeed.sh
          resources:
{{ include "common.resources" . | indent 12 }}
        {{- if .Values.nodeSelector }}
        nodeSelector:
{{ toYaml .Values.nodeSelector | indent 10 }}
        {{- end -}}
        {{- if .Values.affinity }}
        affinity:
{{ toYaml .Values.affinity | indent 10 }}
        {{- end }}
        # Filebeat sidecar container
        - name: {{ include "common.fullname" . }}-filebeat-onap
          image: "{{ .Values.global.loggingRepository }}/{{ .Values.global.loggingImage }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          volumeMounts:
          - name: {{ include "common.fullname" . }}-filebeat-conf
            mountPath: /usr/share/filebeat/filebeat.yml
            subPath: filebeat.yml
          - name: {{ include "common.fullname" . }}-data-filebeat
            mountPath: /usr/share/filebeat/data
          - name: {{ include "common.fullname" . }}-event-logs-pvc
            mountPath: /var/log/onap/datarouter-node
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: {{ include "common.fullname" . }}-create-feed-config
          configMap:
            name: {{ include "common.fullname" . }}-create-feed-configmap
            defaultMode: 0755
            items:
            - key: createFeed.sh
              path: createFeed.sh
            - key: dedicatedFeed.json
              path: dedicatedFeed.json
        - name: {{ include "common.fullname" . }}-config
          configMap:
            name: {{ include "common.fullname" . }}-configmap
            items:
            - key: node.properties
              path: node.properties
            - key: drNodeCadi.properties
              path: drNodeCadi.properties
        - name: {{ include "common.fullname" . }}-log-conf
          configMap:
            name: {{ include "common.fullname" . }}-log
        - name: {{ include "common.fullname" . }}-filebeat-conf
          configMap:
            name: {{ include "common.fullname" . }}-dmaap-filebeat-configmap
        - name: {{ include "common.fullname" . }}-data-filebeat
          emptyDir: {}
        - name:  {{ include "common.fullname" . }}-event-logs-pvc
          emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: {{ include "common.fullname" . }}-spool-data-pvc
      labels:
        name: {{ include "common.fullname" . }}
    spec:
      accessModes: [ {{ .Values.persistence.accessMode }} ]
      storageClassName: {{ include "common.fullname" . }}-spool-data-stcl
      resources:
        requests:
          storage: {{ .Values.persistence.spoolSize }}
      selector:
        matchLabels:
          name: {{ include "common.fullname" . }}-spool-data-pv
  - metadata:
      name: {{ include "common.fullname" . }}-event-logs-pvc
      labels:
        name: {{ include "common.fullname" . }}
    spec:
      accessModes: [ {{ .Values.persistence.accessMode }} ]
      storageClassName: {{ include "common.fullname" . }}-event-logs-stcl
      resources:
        requests:
          storage: {{ .Values.persistence.eventLogSize }}
      selector:
        matchLabels:
          name: {{ include "common.fullname" . }}-event-logs-pv

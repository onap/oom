{
  "comments": [
    {
      "key": {
        "uuid": "70ec9026_56623b6e",
        "filename": "kubernetes/appc/resources/config/appc/opt/onap/appc/bin/startODL.sh",
        "patchSetId": 8
      },
      "lineNbr": 74,
      "author": {
        "id": 4965
      },
      "writtenOn": "2021-06-22T16:04:14Z",
      "side": 1,
      "message": "Hmmm I\u0027m absolutely not a bash specialist but I\u0027ve been always convinced that echo is a separate command and a part of coreutils package.\nAt least on my ubuntu:\n $ which echo\n /bin/echo\n $ dpkg -S /bin/echo \n coreutils: /bin/echo\n\nany more insides on this?",
      "revId": "dc5bf8374dc099b6ddd8aa721db199da449212e8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e44bd36_e183a748",
        "filename": "kubernetes/appc/resources/config/appc/opt/onap/appc/bin/startODL.sh",
        "patchSetId": 8
      },
      "lineNbr": 74,
      "author": {
        "id": 3685
      },
      "writtenOn": "2021-06-22T18:58:16Z",
      "side": 1,
      "message": "No, it is not.\n\necho is defined in POSIX and is implemented as a built-in command in almost every shells.\nhttps://pubs.opengroup.org/onlinepubs/9699919799/utilities/echo.html\n\nFor this reason, you can not find it in the PATH (with \u0027command\u0027 or \u0027which\u0027 which is not POSIX by the way :) ), nor in the coreutils package.\necho options can be found in shells manual pages.\nThe problem is that options such as -e are not defined in POSIX and their behavior strongly differ from one shell to another (bash and dash for example below)\n\nhttps://wiki.ubuntu.com/DashAsBinSh#echo\nhttps://mywiki.wooledge.org/Bashism#Builtins\nhttps://dev.to/bowmanjd/writing-bash-scripts-that-are-not-only-bash-checking-for-bashisms-and-testing-with-dash-1bli#use-raw-printf-endraw-when-newlines-are-at-issue\n\nAs echo is used pretty everywhere here, I prefer the solution prposed here to add a new line than using printf\n\n\n$ man bash\n[...]\n       echo [-neE] [arg ...]\n              Output the args, separated by spaces, followed by a newline.  The return status is 0 unless a write error occurs.  If -n is specified, the trailing newline is  suppressed.\n              If  the -e option is given, interpretation of the following backslash-escaped characters is enabled.  The -E option disables the interpretation of these escape characters,\n              even on systems where they are interpreted by default.  The xpg_echo shell option may be used to dynamically determine whether or not echo expands these escape  characters\n              by default.  echo does not interpret -- to mean the end of options.  echo interprets the following escape sequences:\n              \\a     alert (bell)\n              \\b     backspace\n              \\c     suppress further output\n              \\e\n              \\E     an escape character\n              \\f     form feed\n              \\n     new line\n              \\r     carriage return\n              \\t     horizontal tab\n              \\v     vertical tab\n              \\\\     backslash\n              \\0nnn  the eight-bit character whose value is the octal value nnn (zero to three octal digits)\n              \\xHH   the eight-bit character whose value is the hexadecimal value HH (one or two hex digits)\n              \\uHHHH the Unicode (ISO/IEC 10646) character whose value is the hexadecimal value HHHH (one to four hex digits)\n              \\UHHHHHHHH\n                     the Unicode (ISO/IEC 10646) character whose value is the hexadecimal value HHHHHHHH (one to eight hex digits)\n\n$ man dash\n[..]\n     echo [-n] args...\n            Print the arguments on the standard output, separated by spaces.  Unless the -n option is present, a newline is output following the arguments.\n\n            If any of the following sequences of characters is encountered during output, the sequence is not output.  Instead, the specified action is performed:\n\n            \\b      A backspace character is output.\n\n            \\c      Subsequent output is suppressed.  This is normally used at the end of the last argument to suppress the trailing newline that echo would otherwise output.\n\n            \\e      Outputs an escape character (ESC).\n\n            \\f      Output a form feed.\n\n            \\n      Output a newline character.\n\n            \\r      Output a carriage return.\n\n            \\t      Output a (horizontal) tab character.\n\n            \\v      Output a vertical tab.\n\n            \\0digits\n                    Output the character whose value is given by zero to three octal digits.  If there are zero digits, a nul character is output.\n\n            \\\\      Output a backslash.\n\n            All other backslash sequences elicit undefined behaviour.",
      "parentUuid": "70ec9026_56623b6e",
      "revId": "dc5bf8374dc099b6ddd8aa721db199da449212e8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ca86407_46724e67",
        "filename": "kubernetes/appc/resources/config/appc/opt/onap/appc/bin/startODL.sh",
        "patchSetId": 8
      },
      "lineNbr": 74,
      "author": {
        "id": 3685
      },
      "writtenOn": "2021-06-22T19:14:14Z",
      "side": 1,
      "message": "I forgot to add that the echo present in the coreutils package is there for the few shells without an echo built-in command or must be invoked preceded by the env command to be called voluntarily according to its maintainers.\n\nhttps://www.gnu.org/software/coreutils/manual/html_node/echo-invocation.html\n\n\n$ bash\n$ echo -e \"\\ntest\"\n\ntest\n$ env echo -e \"\\ntest\"\n\ntest\n$ dash\n$ echo -e \"\\ntest\"\n-e \ntest\n$ env echo -e \"\\ntest\"\n\ntest\n$",
      "parentUuid": "6e44bd36_e183a748",
      "revId": "dc5bf8374dc099b6ddd8aa721db199da449212e8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}
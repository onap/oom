# Copyright Â© 2017 Amdocs, Bell Canada
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ include "common.name" . }}
          image: "{{ include "common.repository" . }}/{{ .Values.image }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          ports:
          - containerPort: {{.Values.global.config.mariadb.internalPort}}
          # disable liveness probe when breakpoints set in debugger
          # so K8s doesn't restart unresponsive container
          {{- if eq .Values.liveness.enabled true }}
          args:
          - --lower-case-table-names=1
          - --wait_timeout=28800
          livenessProbe:
            tcpSocket:
              port: {{.Values.global.config.mariadb.internalPort}}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          {{ end -}}
          readinessProbe:
            tcpSocket:
              port: {{.Values.global.config.mariadb.internalPort}}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
          env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "common.fullname" . }}-secret
                key: db-root-password
          - name: MYSQL_USER
            value: {{.Values.global.config.mariadb.userName}}
          - name: MYSQL_DATABASE
            value: {{.Values.global.config.mariadb.mysqlDatabase}}
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "common.fullname" . }}-secret
                key: db-user-password
          volumeMounts:
          - mountPath: /docker-entrypoint-initdb.d/sql_init_01.sql
            name: docker-entrypoint-initdb
            subPath: sql_init_01.sql
          - mountPath: /etc/mysql/conf.d
            name: mariadb-conf
          - mountPath: /var/lib/mysql
            name: mariadb-data
          resources:
{{ include "common.resources" . | indent 12 }}
        {{- if .Values.nodeSelector }}
        nodeSelector:
{{ toYaml .Values.nodeSelector | indent 10 }}
        {{- end -}}
        {{- if .Values.affinity }}
        affinity:
{{ toYaml .Values.affinity | indent 10 }}
        {{- end }}
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: docker-entrypoint-initdb
          configMap:
            name: {{ include "common.fullname" . }}-mdb-initd-configmap
        - name: mariadb-conf
          configMap:
            name: {{ include "common.fullname" . }}-mdb-configmap
        - name: mariadb-data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "common.fullname" . }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"
